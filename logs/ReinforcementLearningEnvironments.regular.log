################################################################################
# PkgEval set-up: 2021-01-11T19:02:09.014
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T19:02:10.803
#

 Installing known registries into `~/.julia`
############################                                              39.1%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed ReinforcementLearningEnvironments ─ v0.4.3
  Installed CompilerSupportLibraries_jll ────── v0.3.4+0
  Installed MbedTLS_jll ─────────────────────── v2.16.8+1
  Installed libass_jll ──────────────────────── v0.14.0+4
  Installed Opus_jll ────────────────────────── v1.3.1+3
  Installed ZygoteRules ─────────────────────── v0.2.1
  Installed FriBidi_jll ─────────────────────── v1.0.5+6
  Installed CpuId ───────────────────────────── v0.2.2
  Installed Libglvnd_jll ────────────────────── v1.3.0+3
  Installed Zlib_jll ────────────────────────── v1.2.11+18
  Installed Xorg_libXcursor_jll ─────────────── v1.2.0+4
  Installed Xorg_libXinerama_jll ────────────── v1.1.4+4
  Installed Reexport ────────────────────────── v1.0.0
  Installed x265_jll ────────────────────────── v3.0.0+3
  Installed libfdk_aac_jll ──────────────────── v0.1.6+4
  Installed Cairo_jll ───────────────────────── v1.16.0+6
  Installed CommonSubexpressions ────────────── v0.3.0
  Installed Inflate ─────────────────────────── v0.1.2
  Installed Xorg_libXdmcp_jll ───────────────── v1.1.3+4
  Installed Wayland_jll ─────────────────────── v1.17.0+4
  Installed Xorg_libXi_jll ──────────────────── v1.7.10+4
  Installed libvorbis_jll ───────────────────── v1.3.6+6
  Installed Pixman_jll ──────────────────────── v0.40.0+0
  Installed TableTraits ─────────────────────── v1.0.0
  Installed Xorg_libX11_jll ─────────────────── v1.6.9+4
  Installed MuladdMacro ─────────────────────── v0.2.2
  Installed LAME_jll ────────────────────────── v3.100.0+3
  Installed NonlinearSolve ──────────────────── v0.3.4
  Installed VertexSafeGraphs ────────────────── v0.1.2
  Installed Libtiff_jll ─────────────────────── v4.1.0+2
  Installed OpenSSL_jll ─────────────────────── v1.1.1+6
  Installed Xorg_xcb_util_renderutil_jll ────── v0.3.9+1
  Installed Zstd_jll ────────────────────────── v1.4.5+2
  Installed Tables ──────────────────────────── v1.2.2
  Installed DataStructures ──────────────────── v0.18.8
  Installed StatsBase ───────────────────────── v0.33.2
  Installed LoopVectorization ───────────────── v0.8.26
  Installed Requires ────────────────────────── v1.1.2
  Installed ReinforcementLearningBase ───────── v0.9.1
  Installed Libiconv_jll ────────────────────── v1.16.0+7
  Installed SparseDiffTools ─────────────────── v1.12.0
  Installed FunctionWrappers ────────────────── v1.1.1
  Installed DataAPI ─────────────────────────── v1.4.0
  Installed MbedTLS ─────────────────────────── v1.0.3
  Installed DiffRules ───────────────────────── v1.0.2
  Installed Parameters ──────────────────────── v0.12.1
  Installed DiffResults ─────────────────────── v1.0.3
  Installed Xorg_xcb_util_keysyms_jll ───────── v0.4.0+1
  Installed Bzip2_jll ───────────────────────── v1.0.6+5
  Installed Xorg_xcb_util_image_jll ─────────── v0.4.0+1
  Installed Xorg_xkbcomp_jll ────────────────── v1.4.2+4
  Installed Setfield ────────────────────────── v0.7.0
  Installed Xorg_libXrender_jll ─────────────── v0.9.10+4
  Installed Xorg_libpthread_stubs_jll ───────── v0.1.0+3
  Installed HTTP ────────────────────────────── v0.8.19
  Installed TreeViews ───────────────────────── v0.3.0
  Installed FFMPEG_jll ──────────────────────── v4.3.1+4
  Installed Ogg_jll ─────────────────────────── v1.3.4+2
  Installed SIMDPirates ─────────────────────── v0.8.26
  Installed ConstructionBase ────────────────── v1.0.0
  Installed Xorg_libxkbfile_jll ─────────────── v1.1.0+4
  Installed SimpleTraits ────────────────────── v0.9.3
  Installed RecursiveArrayTools ─────────────── v2.10.0
  Installed CommonRLInterface ───────────────── v0.2.2
  Installed IntervalSets ────────────────────── v0.5.2
  Installed OrderedCollections ──────────────── v1.3.2
  Installed OrdinaryDiffEq ──────────────────── v5.49.1
  Installed Xorg_libXrandr_jll ──────────────── v1.5.2+4
  Installed XML2_jll ────────────────────────── v2.9.10+3
  Installed GR_jll ──────────────────────────── v0.53.0+0
  Installed Qt_jll ──────────────────────────── v5.15.2+1
  Installed DataValueInterfaces ─────────────── v1.0.0
  Installed Xorg_libXau_jll ─────────────────── v1.0.9+4
  Installed Xorg_libXfixes_jll ──────────────── v5.0.3+4
  Installed RecipesBase ─────────────────────── v1.1.1
  Installed DiffEqBase ──────────────────────── v6.53.4
  Installed LightGraphs ─────────────────────── v1.3.4
  Installed LZO_jll ─────────────────────────── v2.10.0+3
  Installed libpng_jll ──────────────────────── v1.6.37+6
  Installed Xorg_xcb_util_jll ───────────────── v0.4.0+1
  Installed GLFW_jll ────────────────────────── v3.3.2+1
  Installed Missings ────────────────────────── v0.4.4
  Installed VectorizationBase ───────────────── v0.12.33
  Installed MacroTools ──────────────────────── v0.5.6
  Installed JLLWrappers ─────────────────────── v1.2.0
  Installed Xorg_xtrans_jll ─────────────────── v1.4.0+3
  Installed NLsolve ─────────────────────────── v4.5.1
  Installed Xorg_libxcb_jll ─────────────────── v1.13.0+3
  Installed NaNMath ─────────────────────────── v0.3.5
  Installed Distances ───────────────────────── v0.10.0
  Installed FiniteDiff ──────────────────────── v2.7.2
  Installed GR ──────────────────────────────── v0.53.0
  Installed StaticArrays ────────────────────── v0.12.5
  Installed JSON ────────────────────────────── v0.21.1
  Installed LineSearches ────────────────────── v7.1.1
  Installed FastClosures ────────────────────── v0.3.2
  Installed LibVPX_jll ──────────────────────── v1.9.0+1
  Installed ArnoldiMethod ───────────────────── v0.0.4
  Installed PCRE_jll ────────────────────────── v8.42.0+4
  Installed Libffi_jll ──────────────────────── v3.2.1+4
  Installed Xorg_libXext_jll ────────────────── v1.3.4+4
  Installed ArrayInterface ──────────────────── v2.14.13
  Installed ForwardDiff ─────────────────────── v0.10.14
  Installed Libgpg_error_jll ────────────────── v1.36.0+3
  Installed Expat_jll ───────────────────────── v2.2.7+6
  Installed Libgcrypt_jll ───────────────────── v1.8.5+4
  Installed xkbcommon_jll ───────────────────── v0.9.1+5
  Installed Adapt ───────────────────────────── v3.0.0
  Installed Gettext_jll ─────────────────────── v0.20.1+7
  Installed LabelledArrays ──────────────────── v1.4.0
  Installed OffsetArrays ────────────────────── v1.3.1
  Installed Libuuid_jll ─────────────────────── v2.34.0+7
  Installed IterativeSolvers ────────────────── v0.9.0
  Installed FreeType2_jll ───────────────────── v2.10.1+5
  Installed EllipsisNotation ────────────────── v1.0.0
  Installed AbstractTrees ───────────────────── v0.3.3
  Installed IteratorInterfaceExtensions ─────── v1.0.0
  Installed UnPack ──────────────────────────── v1.0.2
  Installed SpecialFunctions ────────────────── v1.2.1
  Installed SortingAlgorithms ───────────────── v0.3.1
  Installed Fontconfig_jll ──────────────────── v2.13.1+14
  Installed XSLT_jll ────────────────────────── v1.1.33+4
  Installed Wayland_protocols_jll ───────────── v1.18.0+4
  Installed ChainRulesCore ──────────────────── v0.9.24
  Installed Compat ──────────────────────────── v3.25.0
  Installed NLSolversBase ───────────────────── v7.7.1
  Installed Libmount_jll ────────────────────── v2.34.0+3
  Installed DocStringExtensions ─────────────── v0.8.3
  Installed RecursiveFactorization ──────────── v0.1.6
  Installed JpegTurbo_jll ───────────────────── v2.0.1+3
  Installed OpenSpecFun_jll ─────────────────── v0.5.3+4
  Installed Glib_jll ────────────────────────── v2.59.0+4
  Installed Xorg_xcb_util_wm_jll ────────────── v0.4.1+1
  Installed x264_jll ────────────────────────── v2020.7.14+2
  Installed SLEEFPirates ────────────────────── v0.5.5
  Installed ExponentialUtilities ────────────── v1.8.0
  Installed Xorg_xkeyboard_config_jll ───────── v2.27.0+4
  Installed GenericSVD ──────────────────────── v0.3.0
  Installed Parsers ─────────────────────────── v1.0.15
  Installed Artifacts ───────────────────────── v1.3.0
  Installed IniFile ─────────────────────────── v0.5.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [25e41dd2] + ReinforcementLearningEnvironments v0.4.3
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v3.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.14.13
  [56f22d72] + Artifacts v1.3.0
  [6e34b625] + Bzip2_jll v1.0.6+5
  [83423d85] + Cairo_jll v1.16.0+6
  [d360d2e6] + ChainRulesCore v0.9.24
  [d842c3ba] + CommonRLInterface v0.2.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.25.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.53.4
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [b4f34e82] + Distances v0.10.0
  [ffbed154] + DocStringExtensions v0.8.3
  [da5c29d0] + EllipsisNotation v1.0.0
  [2e619515] + Expat_jll v2.2.7+6
  [d4d017d3] + ExponentialUtilities v1.8.0
  [b22a6f82] + FFMPEG_jll v4.3.1+4
  [9aa1b823] + FastClosures v0.3.2
  [6a86dc24] + FiniteDiff v2.7.2
  [a3f928ae] + Fontconfig_jll v2.13.1+14
  [f6369f11] + ForwardDiff v0.10.14
  [d7e528f0] + FreeType2_jll v2.10.1+5
  [559328eb] + FriBidi_jll v1.0.5+6
  [069b7b12] + FunctionWrappers v1.1.1
  [0656b61e] + GLFW_jll v3.3.2+1
  [28b8d3ca] + GR v0.53.0
  [d2c73de3] + GR_jll v0.53.0+0
  [01680d73] + GenericSVD v0.3.0
  [78b55507] + Gettext_jll v0.20.1+7
  [7746bdde] + Glib_jll v2.59.0+4
  [cd3eb016] + HTTP v0.8.19
  [d25df0c9] + Inflate v0.1.2
  [83e8ac13] + IniFile v0.5.0
  [8197267c] + IntervalSets v0.5.2
  [42fd0dbc] + IterativeSolvers v0.9.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.2.0
  [682c06a0] + JSON v0.21.1
  [aacddb02] + JpegTurbo_jll v2.0.1+3
  [c1c5ebd0] + LAME_jll v3.100.0+3
  [dd4b983a] + LZO_jll v2.10.0+3
  [2ee39098] + LabelledArrays v1.4.0
  [dd192d2f] + LibVPX_jll v1.9.0+1
  [e9f186c6] + Libffi_jll v3.2.1+4
  [d4300ac3] + Libgcrypt_jll v1.8.5+4
  [7e76a0d4] + Libglvnd_jll v1.3.0+3
  [7add5ba3] + Libgpg_error_jll v1.36.0+3
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [4b2f31a3] + Libmount_jll v2.34.0+3
  [89763e89] + Libtiff_jll v4.1.0+2
  [38a345b3] + Libuuid_jll v2.34.0+7
  [093fc24a] + LightGraphs v1.3.4
  [d3d80556] + LineSearches v7.1.1
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.3
  [c8ffd9c3] + MbedTLS_jll v2.16.8+1
  [e1d29d7a] + Missings v0.4.4
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.7.1
  [2774e3e8] + NLsolve v4.5.1
  [77ba4419] + NaNMath v0.3.5
  [8913a72c] + NonlinearSolve v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.1
  [e7412a2a] + Ogg_jll v1.3.4+2
  [458c3c95] + OpenSSL_jll v1.1.1+6
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [91d4177d] + Opus_jll v1.3.1+3
  [bac558e1] + OrderedCollections v1.3.2
  [1dea7af3] + OrdinaryDiffEq v5.49.1
  [2f80f16e] + PCRE_jll v8.42.0+4
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.15
  [30392449] + Pixman_jll v0.40.0+0
  [ede63266] + Qt_jll v5.15.2+1
  [3cdcf5f2] + RecipesBase v1.1.1
  [731186ca] + RecursiveArrayTools v2.10.0
  [f2c3362d] + RecursiveFactorization v0.1.6
  [189a3867] + Reexport v1.0.0
  [e575027e] + ReinforcementLearningBase v0.9.1
  [25e41dd2] + ReinforcementLearningEnvironments v0.4.3
  [ae029012] + Requires v1.1.2
  [21efa798] + SIMDPirates v0.8.26
  [476501e8] + SLEEFPirates v0.5.5
  [efcf1570] + Setfield v0.7.0
  [699a6c99] + SimpleTraits v0.9.3
  [a2af1166] + SortingAlgorithms v0.3.1
  [47a9eef4] + SparseDiffTools v1.12.0
  [276daf66] + SpecialFunctions v1.2.1
  [90137ffa] + StaticArrays v0.12.5
  [2913bbd2] + StatsBase v0.33.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.2.2
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [19fa3120] + VertexSafeGraphs v0.1.2
  [a2964d1f] + Wayland_jll v1.17.0+4
  [2381bf8a] + Wayland_protocols_jll v1.18.0+4
  [02c8fc9c] + XML2_jll v2.9.10+3
  [aed1982a] + XSLT_jll v1.1.33+4
  [4f6342f7] + Xorg_libX11_jll v1.6.9+4
  [0c0b7dd1] + Xorg_libXau_jll v1.0.9+4
  [935fb764] + Xorg_libXcursor_jll v1.2.0+4
  [a3789734] + Xorg_libXdmcp_jll v1.1.3+4
  [1082639a] + Xorg_libXext_jll v1.3.4+4
  [d091e8ba] + Xorg_libXfixes_jll v5.0.3+4
  [a51aa0fd] + Xorg_libXi_jll v1.7.10+4
  [d1454406] + Xorg_libXinerama_jll v1.1.4+4
  [ec84b674] + Xorg_libXrandr_jll v1.5.2+4
  [ea2f1a96] + Xorg_libXrender_jll v0.9.10+4
  [14d82f49] + Xorg_libpthread_stubs_jll v0.1.0+3
  [c7cfdc94] + Xorg_libxcb_jll v1.13.0+3
  [cc61e674] + Xorg_libxkbfile_jll v1.1.0+4
  [12413925] + Xorg_xcb_util_image_jll v0.4.0+1
  [2def613f] + Xorg_xcb_util_jll v0.4.0+1
  [975044d2] + Xorg_xcb_util_keysyms_jll v0.4.0+1
  [0d47668e] + Xorg_xcb_util_renderutil_jll v0.3.9+1
  [c22f9ab0] + Xorg_xcb_util_wm_jll v0.4.1+1
  [35661453] + Xorg_xkbcomp_jll v1.4.2+4
  [33bec58e] + Xorg_xkeyboard_config_jll v2.27.0+4
  [c5fb5394] + Xorg_xtrans_jll v1.4.0+3
  [83775a58] + Zlib_jll v1.2.11+18
  [3161d3a3] + Zstd_jll v1.4.5+2
  [700de1a5] + ZygoteRules v0.2.1
  [0ac62f75] + libass_jll v0.14.0+4
  [f638f0a6] + libfdk_aac_jll v0.1.6+4
  [b53b4c65] + libpng_jll v1.6.37+6
  [f27f6e37] + libvorbis_jll v1.3.6+6
  [1270edf5] + x264_jll v2020.7.14+2
  [dfaa095f] + x265_jll v3.0.0+3
  [d8fb68d0] + xkbcommon_jll v0.9.1+5
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building GR ──────────→ `~/.julia/packages/GR/RlE5Y/deps/build.log`
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`


################################################################################
# Testing: 2021-01-11T19:02:38.43
#

    Testing ReinforcementLearningEnvironments
Status `/tmp/jl_8aIKRR/Project.toml`
  [b7f77d8d] ArcadeLearningEnvironment v0.2.3
  [ceb70bd2] OpenSpiel v0.1.2
  [438e738f] PyCall v1.92.2
  [e575027e] ReinforcementLearningBase v0.9.1
  [25e41dd2] ReinforcementLearningEnvironments v0.4.3
  [860ef19b] StableRNGs v1.0.0
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_8aIKRR/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v3.0.0
  [b7f77d8d] ArcadeLearningEnvironment v0.2.3
  [52cbb755] ArcadeLearningEnvironment_jll v0.6.1+0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.14.13
  [56f22d72] Artifacts v1.3.0
  [1fd713ca] Attr_jll v2.4.48+0
  [6e34b625] Bzip2_jll v1.0.6+5
  [83423d85] Cairo_jll v1.16.0+6
  [d360d2e6] ChainRulesCore v0.9.24
  [d842c3ba] CommonRLInterface v0.2.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.25.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [8f4d0f93] Conda v1.5.0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [1f15a43c] CxxWrap v0.10.2
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.53.4
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [b4f34e82] Distances v0.10.0
  [ffbed154] DocStringExtensions v0.8.3
  [da5c29d0] EllipsisNotation v1.0.0
  [2e619515] Expat_jll v2.2.7+6
  [d4d017d3] ExponentialUtilities v1.8.0
  [b22a6f82] FFMPEG_jll v4.3.1+4
  [9aa1b823] FastClosures v0.3.2
  [6a86dc24] FiniteDiff v2.7.2
  [a3f928ae] Fontconfig_jll v2.13.1+14
  [f6369f11] ForwardDiff v0.10.14
  [d7e528f0] FreeType2_jll v2.10.1+5
  [559328eb] FriBidi_jll v1.0.5+6
  [069b7b12] FunctionWrappers v1.1.1
  [0656b61e] GLFW_jll v3.3.2+1
  [28b8d3ca] GR v0.53.0
  [d2c73de3] GR_jll v0.53.0+0
  [01680d73] GenericSVD v0.3.0
  [78b55507] Gettext_jll v0.20.1+7
  [7746bdde] Glib_jll v2.59.0+4
  [cd3eb016] HTTP v0.8.19
  [d25df0c9] Inflate v0.1.2
  [83e8ac13] IniFile v0.5.0
  [8197267c] IntervalSets v0.5.2
  [42fd0dbc] IterativeSolvers v0.9.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.2.0
  [682c06a0] JSON v0.21.1
  [aacddb02] JpegTurbo_jll v2.0.1+3
  [c1c5ebd0] LAME_jll v3.100.0+3
  [dd4b983a] LZO_jll v2.10.0+3
  [2ee39098] LabelledArrays v1.4.0
  [1e303b3e] LibArchive_jll v3.4.3+1
  [dd192d2f] LibVPX_jll v1.9.0+1
  [e9f186c6] Libffi_jll v3.2.1+4
  [d4300ac3] Libgcrypt_jll v1.8.5+4
  [7e76a0d4] Libglvnd_jll v1.3.0+3
  [7add5ba3] Libgpg_error_jll v1.36.0+3
  [94ce4f54] Libiconv_jll v1.16.0+7
  [4b2f31a3] Libmount_jll v2.34.0+3
  [89763e89] Libtiff_jll v4.1.0+2
  [38a345b3] Libuuid_jll v2.34.0+7
  [093fc24a] LightGraphs v1.3.4
  [d3d80556] LineSearches v7.1.1
  [bdcacae8] LoopVectorization v0.8.26
  [5ced341a] Lz4_jll v1.9.2+2
  [6ac74813] MD5 v0.2.1
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.3
  [c8ffd9c3] MbedTLS_jll v2.16.8+1
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.5.1
  [77ba4419] NaNMath v0.3.5
  [8913a72c] NonlinearSolve v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.1
  [e7412a2a] Ogg_jll v1.3.4+2
  [458c3c95] OpenSSL_jll v1.1.1+6
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [ceb70bd2] OpenSpiel v0.1.2
  [bd10a763] OpenSpiel_jll v0.1.2+0
  [91d4177d] Opus_jll v1.3.1+3
  [bac558e1] OrderedCollections v1.3.2
  [1dea7af3] OrdinaryDiffEq v5.49.1
  [2f80f16e] PCRE_jll v8.42.0+4
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.15
  [30392449] Pixman_jll v0.40.0+0
  [438e738f] PyCall v1.92.2
  [ede63266] Qt_jll v5.15.2+1
  [3cdcf5f2] RecipesBase v1.1.1
  [731186ca] RecursiveArrayTools v2.10.0
  [f2c3362d] RecursiveFactorization v0.1.6
  [189a3867] Reexport v1.0.0
  [e575027e] ReinforcementLearningBase v0.9.1
  [25e41dd2] ReinforcementLearningEnvironments v0.4.3
  [ae029012] Requires v1.1.2
  [21efa798] SIMDPirates v0.8.26
  [476501e8] SLEEFPirates v0.5.5
  [efcf1570] Setfield v0.7.0
  [699a6c99] SimpleTraits v0.9.3
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.12.0
  [276daf66] SpecialFunctions v1.2.1
  [860ef19b] StableRNGs v1.0.0
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.33.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.2.2
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [81def892] VersionParsing v1.2.0
  [19fa3120] VertexSafeGraphs v0.1.2
  [a2964d1f] Wayland_jll v1.17.0+4
  [2381bf8a] Wayland_protocols_jll v1.18.0+4
  [02c8fc9c] XML2_jll v2.9.10+3
  [aed1982a] XSLT_jll v1.1.33+4
  [ffd25f8a] XZ_jll v5.2.4+3
  [4f6342f7] Xorg_libX11_jll v1.6.9+4
  [0c0b7dd1] Xorg_libXau_jll v1.0.9+4
  [935fb764] Xorg_libXcursor_jll v1.2.0+4
  [a3789734] Xorg_libXdmcp_jll v1.1.3+4
  [1082639a] Xorg_libXext_jll v1.3.4+4
  [d091e8ba] Xorg_libXfixes_jll v5.0.3+4
  [a51aa0fd] Xorg_libXi_jll v1.7.10+4
  [d1454406] Xorg_libXinerama_jll v1.1.4+4
  [ec84b674] Xorg_libXrandr_jll v1.5.2+4
  [ea2f1a96] Xorg_libXrender_jll v0.9.10+4
  [14d82f49] Xorg_libpthread_stubs_jll v0.1.0+3
  [c7cfdc94] Xorg_libxcb_jll v1.13.0+3
  [cc61e674] Xorg_libxkbfile_jll v1.1.0+4
  [12413925] Xorg_xcb_util_image_jll v0.4.0+1
  [2def613f] Xorg_xcb_util_jll v0.4.0+1
  [975044d2] Xorg_xcb_util_keysyms_jll v0.4.0+1
  [0d47668e] Xorg_xcb_util_renderutil_jll v0.3.9+1
  [c22f9ab0] Xorg_xcb_util_wm_jll v0.4.1+1
  [35661453] Xorg_xkbcomp_jll v1.4.2+4
  [33bec58e] Xorg_xkeyboard_config_jll v2.27.0+4
  [c5fb5394] Xorg_xtrans_jll v1.4.0+3
  [83775a58] Zlib_jll v1.2.11+18
  [3161d3a3] Zstd_jll v1.4.5+2
  [700de1a5] ZygoteRules v0.2.1
  [ed5aba05] acl_jll v2.2.53+1
  [0ac62f75] libass_jll v0.14.0+4
  [3eaa8342] libcxxwrap_julia_jll v0.7.1+1
  [f638f0a6] libfdk_aac_jll v0.1.6+4
  [b53b4c65] libpng_jll v1.6.37+6
  [f27f6e37] libvorbis_jll v1.3.6+6
  [1270edf5] x264_jll v2020.7.14+2
  [dfaa095f] x265_jll v3.0.0+3
  [d8fb68d0] xkbcommon_jll v0.9.1+5
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
WARNING: using PyCall.getindex in module ReinforcementLearningEnvironments conflicts with an existing identifier.
┌ Info: testing AcrobotEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing CartPoleEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing KuhnPokerEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = MultiAgent{2}()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = InformationSet{Tuple{Vararg{Symbol,N} where N}}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = ZeroSum()
└   ChanceStyle(env) = ExplicitStochastic()
┌ Info: testing MontyHallEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = FullActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Int64}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing MountainCarEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing MountainCarEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing MultiArmBanditsEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Int64}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing PendulumEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing PendulumNonInteractiveEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing PigEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = MultiAgent{2}()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = PerfectInformation()
│   StateStyle(env) = Observation{Array{Int64,1}}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = ConstantSum()
└   ChanceStyle(env) = ExplicitStochastic()
┌ Info: testing RandomWalk1D, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = PerfectInformation()
│   StateStyle(env) = Observation{Int64}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Deterministic()
┌ Info: testing RockPaperScissorsEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = MultiAgent{2}()
│   DynamicStyle(env) = Simultaneous()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Int64}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = ZeroSum()
└   ChanceStyle(env) = Deterministic()
┌ Info: testing TicTacToeEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = MultiAgent{2}()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = FullActionSet()
│   InformationStyle(env) = PerfectInformation()
│   StateStyle(env) = (Observation{Int64}(), Observation{BitArray{3}}())
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = ZeroSum()
└   ChanceStyle(env) = Deterministic()
[ Info: initializing state info...
[ Info: finished initializing state info in 2.331821407 seconds
┌ Info: testing TigerProblemEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = (Observation{Int64}(), InternalState{Int64}())
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing TinyHanabiEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = MultiAgent{2}()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = InformationSet{Tuple{Vararg{Int64,N} where N}}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = IdenticalUtility()
└   ChanceStyle(env) = ExplicitStochastic()
A.L.E: Arcade Learning Environment (version 0.6.0)
[Powered by Stella]
Use -help for help screen.
Warning: couldn't load settings file: ./ale.cfg
gym envs: Error During Test at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/environments/3rd_party/gym.jl:1
  Got exception outside of a @test
  PyError (PyImport_ImportModule
  
  The Python package gym could not be imported by pyimport. Usually this means
  that you did not install gym in the Python version being used by PyCall.
  
  PyCall is currently configured to use the Julia-specific Python distribution
  installed by the Conda.jl package.  To install the gym module, you can
  use `pyimport_conda("gym", PKG)`, where PKG is the Anaconda
  package the contains the module gym, or alternatively you can use the
  Conda package directly (via `using Conda` followed by `Conda.add` etcetera).
  
  Alternatively, if you want to use a different Python distribution on your
  system, such as a system-wide Python (as opposed to the Julia-specific Python),
  you can re-configure PyCall with that Python.   As explained in the PyCall
  documentation, set ENV["PYTHON"] to the path/name of the python executable
  you want to use, run Pkg.build("PyCall"), and re-launch Julia.
  
  ) <class 'ModuleNotFoundError'>
  ModuleNotFoundError("No module named 'gym'")
  
  Stacktrace:
   [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/tqyST/src/PyCall.jl:547
   [2] list_gym_env_names(; modules::Array{String,1}) at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/src/environments/3rd_party/gym.jl:132
   [3] top-level scope at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/environments/3rd_party/gym.jl:2
   [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [5] top-level scope at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/environments/3rd_party/gym.jl:2
   [6] include(::String) at ./client.jl:457
   [7] macro expansion at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/environments/3rd_party/3rd_party.jl:5 [inlined]
   [8] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
   [9] top-level scope at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/environments/3rd_party/3rd_party.jl:3
   [10] include(::String) at ./client.jl:457
   [11] top-level scope at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/environments/environments.jl:2
   [12] include(::String) at ./client.jl:457
   [13] top-level scope at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/runtests.jl:13
   [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [15] top-level scope at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/runtests.jl:13
   [16] include(::String) at ./client.jl:457
   [17] top-level scope at none:6
   [18] eval(::Module, ::Any) at ./boot.jl:331
   [19] exec_options(::Base.JLOptions) at ./client.jl:272
   [20] _start() at ./client.jl:506
  
[ Info: testing OpenSpiel: tic_tac_toe
[ Info: testing OpenSpiel: kuhn_poker
┌ Warning: unexpected player -1, falling back to default state value.
└ @ ReinforcementLearningEnvironments ~/.julia/packages/ReinforcementLearningEnvironments/uXEID/src/environments/3rd_party/open_spiel.jl:123
[ Info: testing OpenSpiel: goofspiel(imp_info=True,num_cards=4,points_order=descending)
┌ Info: testing TigerProblemEnv |> ActionTransformedEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = (Observation{Int64}(), InternalState{Int64}())
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing TigerProblemEnv |> DefaultStateStyleEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = (Observation{Int64}(), InternalState{Int64}())
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing TigerProblemEnv |> MaxTimeoutEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = (Observation{Int64}(), InternalState{Int64}())
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing TigerProblemEnv |> RewardOverriddenEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = (Observation{Int64}(), InternalState{Int64}())
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing CartPoleEnv |> StateCachedEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = SingleAgent()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = Observation{Any}()
│   RewardStyle(env) = StepReward()
│   UtilityStyle(env) = GeneralSum()
└   ChanceStyle(env) = Stochastic()
┌ Info: testing StochasticEnv, you need to manually check these traits to make sure they are implemented correctly!
│   NumAgentStyle(env) = MultiAgent{2}()
│   DynamicStyle(env) = Sequential()
│   ActionStyle(env) = MinimalActionSet()
│   InformationStyle(env) = ImperfectInformation()
│   StateStyle(env) = InformationSet{Tuple{Vararg{Symbol,N} where N}}()
│   RewardStyle(env) = TerminalReward()
│   UtilityStyle(env) = ZeroSum()
└   ChanceStyle(env) = Stochastic()
Test Summary:                     |   Pass  Error   Total
ReinforcementLearningEnvironments | 253031      1  253032
  examples                        |  90482          90482
  3rd_party                       | 150211      1  150212
    atari                         | 144211         144211
    gym envs                      |             1       1
    OpenSpielEnv                  |   6000           6000
    snake game env                |                No tests
  wrappers                        |  12338          12338
ERROR: LoadError: Some tests did not pass: 253031 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ReinforcementLearningEnvironments/uXEID/test/runtests.jl:12

PkgEval failed: Package ReinforcementLearningEnvironments errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T19:10:36.336
CPU usage: 487.72s (464.46s user, 23.99s kernel)

Network usage:
- eth0: 303.997 MiB received, 1.915 MiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":579,"op":"Read","minor":0},{"major":259,"value":46,"op":"Write","minor":0},{"major":259,"value":598,"op":"Sync","minor":0},{"major":259,"value":27,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":625,"op":"Total","minor":0},{"major":253,"value":579,"op":"Read","minor":2},{"major":253,"value":46,"op":"Write","minor":2},{"major":253,"value":598,"op":"Sync","minor":2},{"major":253,"value":27,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":625,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":33673216,"op":"Read","minor":0},{"major":259,"value":319488,"op":"Write","minor":0},{"major":259,"value":33779712,"op":"Sync","minor":0},{"major":259,"value":212992,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":33992704,"op":"Total","minor":0},{"major":253,"value":33673216,"op":"Read","minor":2},{"major":253,"value":319488,"op":"Write","minor":2},{"major":253,"value":33779712,"op":"Sync","minor":2},{"major":253,"value":212992,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":33992704,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":2093166592,"max_usage":3524284416,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":231,"total_rss":235761664,"inactive_file":5406720,"inactive_anon":1246113792,"total_pgfault":9642468,"total_cache":1796227072,"total_rss_huge":0,"total_active_anon":751804416,"total_pgmajfault":231,"pgpgin":6870072,"rss_huge":0,"mapped_file":0,"total_inactive_file":5406720,"dirty":675840,"total_unevictable":0,"total_dirty":675840,"writeback":0,"pgpgout":6373969,"hierarchical_memsw_limit":0,"cache":1796227072,"active_file":28790784,"pgfault":9642468,"total_mapped_file":0,"total_pgpgout":6373969,"total_writeback":0,"rss":235761664,"unevictable":0,"total_inactive_anon":1246113792,"total_pgpgin":6870072,"active_anon":751804416,"total_active_file":28790784},"limit":540965302272},"name":"/ReinforcementLearningEnvironments-WgzAquyh","networks":{"eth0":{"rx_bytes":318764335,"rx_packets":49526,"tx_packets":27969,"tx_bytes":2007695,"tx_dropped":0,"rx_dropped":17,"tx_errors":0,"rx_errors":0}},"id":"762d543827702b59bbace4e7613b6625829db9e0e62e7c832582e2f33eb3259d","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":4900458454522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":464460000000,"usage_in_kernelmode":23990000000,"total_usage":487724365636,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,239591,487723456044,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4040,0,665961,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T19:10:36.954968834Z"}