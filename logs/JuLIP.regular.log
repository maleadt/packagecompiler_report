################################################################################
# PkgEval set-up: 2021-01-11T21:48:18.781
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T21:48:20.599
#

 Installing known registries into `~/.julia`
####################                                                      28.3%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed MbedTLS_jll ────────────────── v2.16.8+1
  Installed Zlib_jll ───────────────────── v1.2.11+18
  Installed Reexport ───────────────────── v0.2.0
  Installed NeighbourLists ─────────────── v0.5.0
  Installed CommonSubexpressions ───────── v0.3.0
  Installed JuLIP ──────────────────────── v0.8.2
  Installed MuladdMacro ────────────────── v0.2.2
  Installed TimeZones ──────────────────── v1.5.3
  Installed Mocking ────────────────────── v0.7.1
  Installed Calculus ───────────────────── v0.5.1
  Installed Dierckx ────────────────────── v0.4.2
  Installed FillArrays ─────────────────── v0.11.0
  Installed Requires ───────────────────── v1.1.2
  Installed DataStructures ─────────────── v0.18.8
  Installed Libiconv_jll ───────────────── v1.16.0+7
  Installed StatsBase ──────────────────── v0.33.2
  Installed PositiveFactorizations ─────── v0.2.4
  Installed FunctionWrappers ───────────── v1.1.1
  Installed MbedTLS ────────────────────── v1.0.3
  Installed DataAPI ────────────────────── v1.4.0
  Installed EzXML ──────────────────────── v1.1.0
  Installed DiffRules ──────────────────── v1.0.2
  Installed DiffResults ────────────────── v1.0.3
  Installed Parameters ─────────────────── v0.12.1
  Installed HTTP ───────────────────────── v0.9.2
  Installed XML2_jll ───────────────────── v2.9.10+3
  Installed libsodium_jll ──────────────── v1.0.18+1
  Installed SodiumSeal ─────────────────── v0.1.1
  Installed OrderedCollections ─────────── v1.3.2
  Installed RecipesBase ────────────────── v1.1.1
  Installed StaticArrays ───────────────── v0.12.5
  Installed CompatHelper ───────────────── v1.16.3
  Installed Missings ───────────────────── v0.4.4
  Installed NaNMath ────────────────────── v0.3.5
  Installed FiniteDiff ─────────────────── v2.7.2
  Installed MacroTools ─────────────────── v0.5.6
  Installed JSON ───────────────────────── v0.21.1
  Installed JLLWrappers ────────────────── v1.2.0
  Installed LineSearches ───────────────── v7.1.1
  Installed Optim ──────────────────────── v1.2.2
  Installed ArrayInterface ─────────────── v2.14.13
  Installed AlgebraicMultigrid ─────────── v0.3.0
  Installed ExprTools ──────────────────── v0.1.3
  Installed URIs ───────────────────────── v1.1.0
  Installed ForwardDiff ────────────────── v0.10.14
  Installed SpecialFunctions ───────────── v1.2.1
  Installed UnPack ─────────────────────── v1.0.2
  Installed IterativeSolvers ───────────── v0.8.5
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed Compat ─────────────────────── v3.25.0
  Installed NLSolversBase ──────────────── v7.7.1
  Installed Parsers ────────────────────── v1.0.15
  Installed BinaryProvider ─────────────── v0.5.10
  Installed ChainRulesCore ─────────────── v0.9.24
  Installed IniFile ────────────────────── v0.5.0
  Installed Artifacts ──────────────────── v1.3.0
  Installed GitHub ─────────────────────── v5.4.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [945c410c] + JuLIP v0.8.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [2169fc97] + AlgebraicMultigrid v0.3.0
  [4fba245c] + ArrayInterface v2.14.13
  [56f22d72] + Artifacts v1.3.0
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [d360d2e6] + ChainRulesCore v0.9.24
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.25.0
  [aa819f21] + CompatHelper v1.16.3
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.18.8
  [39dd38d3] + Dierckx v0.4.2
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.11.0
  [6a86dc24] + FiniteDiff v2.7.2
  [f6369f11] + ForwardDiff v0.10.14
  [069b7b12] + FunctionWrappers v1.1.1
  [bc5e4493] + GitHub v5.4.0
  [cd3eb016] + HTTP v0.9.2
  [83e8ac13] + IniFile v0.5.0
  [42fd0dbc] + IterativeSolvers v0.8.5
  [692b3bcd] + JLLWrappers v1.2.0
  [682c06a0] + JSON v0.21.1
  [945c410c] + JuLIP v0.8.2
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [d3d80556] + LineSearches v7.1.1
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.3
  [c8ffd9c3] + MbedTLS_jll v2.16.8+1
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.7.1
  [77ba4419] + NaNMath v0.3.5
  [2fcf5ba9] + NeighbourLists v0.5.0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [429524aa] + Optim v1.2.2
  [bac558e1] + OrderedCollections v1.3.2
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.15
  [85a6dd25] + PositiveFactorizations v0.2.4
  [3cdcf5f2] + RecipesBase v1.1.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.2
  [2133526b] + SodiumSeal v0.1.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v1.2.1
  [90137ffa] + StaticArrays v0.12.5
  [2913bbd2] + StatsBase v0.33.2
  [f269a46b] + TimeZones v1.5.3
  [5c2747f8] + URIs v1.1.0
  [3a884ed6] + UnPack v1.0.2
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [a9144af2] + libsodium_jll v1.0.18+1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/K98G0/deps/build.log`
   Building Dierckx ──→ `~/.julia/packages/Dierckx/ZTanR/deps/build.log`


################################################################################
# Testing: 2021-01-11T21:48:45.843
#

    Testing JuLIP
Status `/tmp/jl_LTdg6P/Project.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [39dd38d3] Dierckx v0.4.2
  [f6369f11] ForwardDiff v0.10.14
  [069b7b12] FunctionWrappers v1.1.1
  [682c06a0] JSON v0.21.1
  [945c410c] JuLIP v0.8.2
  [d3d80556] LineSearches v7.1.1
  [1914dd2f] MacroTools v0.5.6
  [2fcf5ba9] NeighbourLists v0.5.0
  [429524aa] Optim v1.2.2
  [189a3867] Reexport v0.2.0
  [90137ffa] StaticArrays v0.12.5
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_LTdg6P/Manifest.toml`
  [2169fc97] AlgebraicMultigrid v0.3.0
  [4fba245c] ArrayInterface v2.14.13
  [56f22d72] Artifacts v1.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.9.24
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.25.0
  [aa819f21] CompatHelper v1.16.3
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.18.8
  [39dd38d3] Dierckx v0.4.2
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.11.0
  [6a86dc24] FiniteDiff v2.7.2
  [f6369f11] ForwardDiff v0.10.14
  [069b7b12] FunctionWrappers v1.1.1
  [bc5e4493] GitHub v5.4.0
  [cd3eb016] HTTP v0.9.2
  [83e8ac13] IniFile v0.5.0
  [42fd0dbc] IterativeSolvers v0.8.5
  [692b3bcd] JLLWrappers v1.2.0
  [682c06a0] JSON v0.21.1
  [945c410c] JuLIP v0.8.2
  [94ce4f54] Libiconv_jll v1.16.0+7
  [d3d80556] LineSearches v7.1.1
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.3
  [c8ffd9c3] MbedTLS_jll v2.16.8+1
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [77ba4419] NaNMath v0.3.5
  [2fcf5ba9] NeighbourLists v0.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [429524aa] Optim v1.2.2
  [bac558e1] OrderedCollections v1.3.2
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.15
  [85a6dd25] PositiveFactorizations v0.2.4
  [3cdcf5f2] RecipesBase v1.1.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.2
  [2133526b] SodiumSeal v0.1.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v1.2.1
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.33.2
  [f269a46b] TimeZones v1.5.3
  [5c2747f8] URIs v1.1.0
  [3a884ed6] UnPack v1.0.2
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [a9144af2] libsodium_jll v1.0.18+1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
     JuLIP Tests     
≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡≡
[ Info: preparing the tests...
[ Info: Loading some interatomic potentials . .
 . . done.
[ Info: on CI : don't run solver tests
=======================
 Testset Miscellaneous 
=======================
==========
 Test Aux 
==========
--------------------------
matrix <-> vec conversions
--------------------------
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Atoms 
===============
check that `bulk` evaluates ok...
Test Passed
... and that we can repeat it.
Test Passed
check deepcopy and == ...
Test Passed
Check setindex! and getindex ...
Test Passed
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = top-level scope at test_atoms.jl:23
└ @ Core ~/.julia/packages/JuLIP/WO5HB/test/test_atoms.jl:23
Test Passed
Test Passed
set_positions ...
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
Test Passed
test set_positions!
Test Passed
Test Passed
test set_momenta!
Test Passed
test set_dofs!, etc
Test Passed
Test Passed
Test Passed
Test Passed
===============
 Testset Build 
===============
=================
 Testset File IO 
=================
Testing single `Atoms` <-> `Dict`
Test Passed
Test Passed
Test JSON fio
Test Passed
Test array of Atoms <-> Dict
Test Passed
Test JSON fio for array
Test Passed
============================
 Testset Analytic Potential 
============================
generate hand-coded morse potential
generate AD morse potential
typeof(morse1) = AnalyticFunction{var"#3#6"{Float64,Float64,Float64},var"#4#7"{Float64,Float64,Float64},var"#5#8"{Float64,Float64,Float64}}
Check consistency of hand-coded and analytic Morse potentials...
Test Passed
Test Passed
------------------------------------------
Performance tests: @analytic vs hand-coded
------------------------------------------
Evaluations of @analytic Potential
  55.120 μs (1000 allocations: 109.38 KiB)
Evaluations hand-coded Potential
  53.669 μs (1000 allocations: 109.38 KiB)
Grad of @analytic Potential
  90.420 μs (2000 allocations: 218.75 KiB)
Grad of hand-coded Potential
  87.589 μs (2000 allocations: 218.75 KiB)
====================
 Testset Potentials 
====================
--------------------------------------
Testing pair potential implementations
--------------------------------------
AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
AnalyticFunction{JuLIP.Potentials.var"#25#28"{Float64,Float64,Float64},JuLIP.Potentials.var"#26#29"{Float64,Float64,Float64},JuLIP.Potentials.var"#27#30"{Float64,Float64,Float64}}(JuLIP.Potentials.var"#25#28"{Float64,Float64,Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#26#29"{Float64,Float64,Float64}(4.0, 1.0, 1.0), JuLIP.Potentials.var"#27#30"{Float64,Float64,Float64}(4.0, 1.0, 1.0))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.19e+00  
 1.0e-03 | 1.23e-01  
 1.0e-04 | 1.23e-02  
 1.0e-05 | 1.23e-03  
 1.0e-06 | 1.23e-04  
 1.0e-07 | 1.23e-05  
 1.0e-08 | 1.13e-06  
 1.0e-09 | 3.33e-07  
 1.0e-10 | 4.64e-06  
 1.0e-11 | 3.61e-05  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SWCutoff{Float64},AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}(SWCutoff{Float64}(1.0, 3.0, 1.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 7.17e-04  
 1.0e-03 | 8.77e-05  
 1.0e-04 | 8.96e-06  
 1.0e-05 | 8.98e-07  
 1.0e-06 | 8.98e-08  
 1.0e-07 | 8.98e-09  
 1.0e-08 | 8.85e-10  
 1.0e-09 | 1.34e-10  
 1.0e-10 | 4.96e-10  
 1.0e-11 | 9.95e-10  
---------|----------- 
passed
Test Passed
JuLIP.Potentials.ProdPot{SplineCutoff,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}(SplineCutoff(2.0, 3.0), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.85e-05  
 1.0e-09 | 3.10e-05  
 1.0e-10 | 4.79e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
Shift{2,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}},Float64}(Val{2}(), AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}(JuLIP.Potentials.var"#16#19"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#17#20"{Float64,Float64}(1.0, 1.0), JuLIP.Potentials.var"#18#21"{Float64,Float64}(1.0, 1.0)), 2.0, -0.0615234375, 0.181640625, -0.6181640625)
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 6.21e+01  
 1.0e-03 | 6.55e+00  
 1.0e-04 | 6.59e-01  
 1.0e-05 | 6.59e-02  
 1.0e-06 | 6.59e-03  
 1.0e-07 | 6.59e-04  
 1.0e-08 | 5.84e-05  
 1.0e-09 | 2.90e-05  
 1.0e-10 | 4.62e-04  
 1.0e-11 | 4.01e-03  
---------|----------- 
passed
Test Passed
ZBLPotential{AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}}(5, 8, AnalyticFunction{JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64},JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}}(JuLIP.Potentials.var"#33#36"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(575.985814118274, 0.1818, 0.5099, 0.2802, 0.02817, 20.9148983873684, 6.158783984505388, 1.3176385984042092), JuLIP.Potentials.var"#34#37"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(575.985814118274, 0.1818, 0.5099, 0.2802, 0.02817, 20.9148983873684, 6.158783984505388, 1.3176385984042092), JuLIP.Potentials.var"#35#38"{Float64,Float64,Float64,Float64,Float64,Float64,Float64,Float64}(575.985814118274, 0.1818, 0.5099, 0.2802, 0.02817, 20.9148983873684, 6.158783984505388, 1.3176385984042092)))
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 3.84e+00  
 1.0e-03 | 3.90e-01  
 1.0e-04 | 3.91e-02  
 1.0e-05 | 3.91e-03  
 1.0e-06 | 3.91e-04  
 1.0e-07 | 3.92e-05  
 1.0e-08 | 3.01e-06  
 1.0e-09 | 2.23e-05  
 1.0e-10 | 2.15e-04  
 1.0e-11 | 1.27e-03  
---------|----------- 
passed
Test Passed
-----------------------
testing shift-cutoffs: 
-----------------------
HS
Test Passed
Test Passed
V0
Test Passed
Test Passed
V1
Test Passed
Test Passed
V2
Test Passed
Test Passed
----------------------------------
Testing calculator implementations
----------------------------------
--------------------------------
JuLIP.Potentials.ProdPot{SplineCutoff,AnalyticFunction{JuLIP.Potentials.var"#16#19"{Float64,Float64},JuLIP.Potentials.var"#17#20"{Float64,Float64},JuLIP.Potentials.var"#18#21"{Float64,Float64}}}
length(at_) = 72
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index(::StaticArrays.SArray{Tuple{3,3},Float64,2,9}, ::StaticArrays.SArray{Tuple{3},Float64,1,3}, ::StaticArrays.SArray{Tuple{3},Int32,1,3}) at cell_list.jl:48
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(::Int64, ::NeighbourLists.CellList{Float64,Int32}, ::StaticArrays.SArray{Tuple{3},Int32,1,3}, ::StaticArrays.SArray{Tuple{3,3},Float64,2,9}, ::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{StaticArrays.SArray{Tuple{3},Int32,1,3},1}) at cell_list.jl:235
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:235
┌ Warning: `a::StaticArray + b::Number` is deprecated, use `a .+ b` instead.
│   caller = position_to_cell_index at cell_list.jl:48 [inlined]
└ @ Core ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:48
┌ Warning: `a::StaticArray - b::Number` is deprecated, use `a .- b` instead.
│   caller = _find_neighbours_!(::Int64, ::NeighbourLists.CellList{Float64,Int32}, ::StaticArrays.SArray{Tuple{3},Int32,1,3}, ::StaticArrays.SArray{Tuple{3,3},Float64,2,9}, ::CartesianIndices{3,Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}}}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{StaticArrays.SArray{Tuple{3},Int32,1,3},1}) at cell_list.jl:266
└ @ NeighbourLists ~/.julia/packages/NeighbourLists/mW4WV/src/cell_list.jl:266
---------|----------- 
    h    | error 
---------|----------- 
 1.0e-02 | 1.76e-01  
 1.0e-03 | 1.76e-02  
 1.0e-04 | 1.76e-03  

No statistics gathered.