################################################################################
# PkgEval set-up: 2021-01-11T16:30:58.845
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T16:31:00.67
#

 Installing known registries into `~/.julia`
#####                                                                      7.6%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed EquationsOfState ───────────── v3.0.2
  Installed Zlib_jll ───────────────────── v1.2.11+18
  Installed TimeZones ──────────────────── v1.5.3
  Installed Reexport ───────────────────── v0.2.0
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed Mocking ────────────────────── v0.7.1
  Installed LsqFit ─────────────────────── v0.10.0
  Installed StatsBase ──────────────────── v0.32.2
  Installed DataStructures ─────────────── v0.17.20
  Installed FillArrays ─────────────────── v0.8.14
  Installed Polynomials ────────────────── v0.8.0
  Installed Libiconv_jll ───────────────── v1.16.0+7
  Installed QuadGK ─────────────────────── v2.4.1
  Installed Requires ───────────────────── v1.1.2
  Installed DataAPI ────────────────────── v1.4.0
  Installed EzXML ──────────────────────── v1.1.0
  Installed DiffRules ──────────────────── v1.0.2
  Installed DiffResults ────────────────── v1.0.3
  Installed ConstructionBase ───────────── v1.0.0
  Installed Roots ──────────────────────── v1.0.7
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed XML2_jll ───────────────────── v2.9.10+3
  Installed OrderedCollections ─────────── v1.3.2
  Installed Intervals ──────────────────── v1.5.0
  Installed StaticArrays ───────────────── v1.0.1
  Installed RecipesBase ────────────────── v1.1.1
  Installed Missings ───────────────────── v0.4.4
  Installed MacroTools ─────────────────── v0.5.6
  Installed JLLWrappers ────────────────── v1.2.0
  Installed NaNMath ────────────────────── v0.3.5
  Installed OptimBase ──────────────────── v2.0.1
  Installed ArrayInterface ─────────────── v2.14.13
  Installed FiniteDiff ─────────────────── v2.7.2
  Installed PDMats ─────────────────────── v0.9.12
  Installed Distributions ──────────────── v0.22.6
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed StatsFuns ──────────────────── v0.9.6
  Installed Unitful ────────────────────── v1.5.0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed ForwardDiff ────────────────── v0.10.14
  Installed ExprTools ──────────────────── v0.1.3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Arpack ─────────────────────── v0.4.0
  Installed NLSolversBase ──────────────── v7.7.1
  Installed IterTools ──────────────────── v1.3.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed Artifacts ──────────────────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [0438fec6] + EquationsOfState v3.0.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.14.13
  [56f22d72] + Artifacts v1.3.0
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] + ConstructionBase v1.0.0
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.17.20
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [31c24e10] + Distributions v0.22.6
  [0438fec6] + EquationsOfState v3.0.2
  [e2ba6199] + ExprTools v0.1.3
  [8f5d6c58] + EzXML v1.1.0
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.7.2
  [f6369f11] + ForwardDiff v0.10.14
  [d8418881] + Intervals v1.5.0
  [c8e1da08] + IterTools v1.3.0
  [692b3bcd] + JLLWrappers v1.2.0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [2fda8390] + LsqFit v0.10.0
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [78c3b35d] + Mocking v0.7.1
  [d41bc354] + NLSolversBase v7.7.1
  [77ba4419] + NaNMath v0.3.5
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [87e2bd06] + OptimBase v2.0.1
  [bac558e1] + OrderedCollections v1.3.2
  [90014a1f] + PDMats v0.9.12
  [f27b6e38] + Polynomials v0.8.0
  [1fd47b50] + QuadGK v2.4.1
  [3cdcf5f2] + RecipesBase v1.1.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.2
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.7
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v1.0.1
  [2913bbd2] + StatsBase v0.32.2
  [4c63d2b9] + StatsFuns v0.9.6
  [f269a46b] + TimeZones v1.5.3
  [1986cc42] + Unitful v1.5.0
  [02c8fc9c] + XML2_jll v2.9.10+3
  [83775a58] + Zlib_jll v1.2.11+18
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/K98G0/deps/build.log`


################################################################################
# Testing: 2021-01-11T16:31:18.277
#

    Testing EquationsOfState
Status `/tmp/jl_Q4JtdU/Project.toml`
  [187b0558] ConstructionBase v1.0.0
  [0438fec6] EquationsOfState v3.0.2
  [c8e1da08] IterTools v1.3.0
  [2fda8390] LsqFit v0.10.0
  [f27b6e38] Polynomials v0.8.0
  [f2b01f46] Roots v1.0.7
  [1986cc42] Unitful v1.5.0
  [a7773ee8] UnitfulAtomic v1.0.0
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Q4JtdU/Manifest.toml`
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.14.13
  [56f22d72] Artifacts v1.3.0
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.17.20
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [31c24e10] Distributions v0.22.6
  [0438fec6] EquationsOfState v3.0.2
  [e2ba6199] ExprTools v0.1.3
  [8f5d6c58] EzXML v1.1.0
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.7.2
  [f6369f11] ForwardDiff v0.10.14
  [d8418881] Intervals v1.5.0
  [c8e1da08] IterTools v1.3.0
  [692b3bcd] JLLWrappers v1.2.0
  [94ce4f54] Libiconv_jll v1.16.0+7
  [2fda8390] LsqFit v0.10.0
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [d41bc354] NLSolversBase v7.7.1
  [77ba4419] NaNMath v0.3.5
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [87e2bd06] OptimBase v2.0.1
  [bac558e1] OrderedCollections v1.3.2
  [90014a1f] PDMats v0.9.12
  [f27b6e38] Polynomials v0.8.0
  [1fd47b50] QuadGK v2.4.1
  [3cdcf5f2] RecipesBase v1.1.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.2
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.7
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v1.0.1
  [2913bbd2] StatsBase v0.32.2
  [4c63d2b9] StatsFuns v0.9.6
  [f269a46b] TimeZones v1.5.3
  [1986cc42] Unitful v1.5.0
  [a7773ee8] UnitfulAtomic v1.0.0
  [02c8fc9c] XML2_jll v2.9.10+3
  [83775a58] Zlib_jll v1.2.11+18
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test fitting energy with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:59
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(big(1), 2, big(3), 0))(Energy()), [1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, big.(result); atol = 0.0001)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{Energy,UnionAll},Array{Float64,1},Array{Float64,1}}, ::Array{BigFloat,1}, ::Array{Float64,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16 at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{Int64,1}, ::Array{Int64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{Int64,1}, ::Array{Int64,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:59
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:10
  
Test fitting energy with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:70
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(big(1), 2, 3, 0))(Energy()), BigFloat[1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, big.(result); atol = 0.0001)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{Energy,UnionAll},Array{BigFloat,1},Array{Float64,1}}, ::Array{BigFloat,1}, ::Array{Float64,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16 at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{BigFloat,1}, ::Array{Int64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{BigFloat,1}, ::Array{Int64,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:70
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:10
  
Test fitting energy with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:81
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(big(1.0), 2, 3, 0))(Energy()), [1, 2, 3, 4, 5], BigInt[5, 6, 9, 8, 7]) |> fieldvalues) |> collect, big.(result); atol = 0.0001)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{Energy,UnionAll},Array{Float64,1},Array{BigFloat,1}}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(::EquationsOfState.NonlinearFitting.var"#2#3"{Energy,UnionAll}, ::Array{Float64,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(::Function, ::Array{Float64,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{Int64,1}, ::Array{BigInt,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{Int64,1}, ::Array{BigInt,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:81
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:10
  
Test fitting pressure with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:143
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, big(3), 0))(Pressure()), [1, 2, 3, 4, 5], BigInt[5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-6)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{Pressure,UnionAll},Array{Float64,1},Array{BigFloat,1}}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(::EquationsOfState.NonlinearFitting.var"#2#3"{Pressure,UnionAll}, ::Array{Float64,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(::Function, ::Array{Float64,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{Int64,1}, ::Array{BigInt,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{Int64,1}, ::Array{BigInt,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:143
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:95
  
Test fitting pressure with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:154
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, big(3.0), 0))(Pressure()), [1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-6)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{Pressure,UnionAll},Array{Float64,1},Array{Float64,1}}, ::Array{BigFloat,1}, ::Array{Float64,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16 at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{Int64,1}, ::Array{Int64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{Int64,1}, ::Array{Int64,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:154
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:95
  
Test fitting pressure with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:165
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, big(3), 0))(Pressure()), [big(1), 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-6)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{Pressure,UnionAll},Array{BigFloat,1},Array{Float64,1}}, ::Array{BigFloat,1}, ::Array{Float64,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16 at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{BigInt,1}, ::Array{Int64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{BigInt,1}, ::Array{Int64,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:165
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:95
  
Test fitting bulk modulus with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:227
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, 3, big(0)))(BulkModulus()), [1, 2, 3, 4, 5], [5, 6, 9, 8, 7]) |> fieldvalues) |> collect, result; atol = 1.0e-5)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{BulkModulus,UnionAll},Array{Float64,1},Array{Float64,1}}, ::Array{BigFloat,1}, ::Array{Float64,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit(::Function, ::Array{BigFloat,1}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61
   [19] #curve_fit#16 at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115 [inlined]
   [20] curve_fit(::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{Int64,1}, ::Array{Int64,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{Int64,1}, ::Array{Int64,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:227
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:179
  
Test fitting bulk modulus with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:238
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, 3, big(0)))(BulkModulus()), [1, 2, 3, big(4.0), 5], [big(5), 6, 9, 8, 7.0]) |> fieldvalues) |> collect, result; atol = 1.0e-5)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{BulkModulus,UnionAll},Array{BigFloat,1},Array{BigFloat,1}}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(::EquationsOfState.NonlinearFitting.var"#2#3"{BulkModulus,UnionAll}, ::Array{BigFloat,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(::Function, ::Array{BigFloat,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{BigFloat,1}, ::Array{BigFloat,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:238
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:179
  
Test fitting bulk modulus with different element types: Error During Test at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:249
  Test threw exception
  Expression: isapprox((lsqfit((BirchMurnaghan3rd(1, 2, 3, big(0)))(BulkModulus()), [1, 2, 3, 4, 5], [big(5), 6, 9, 8, 7.0]) |> fieldvalues) |> collect, result; atol = 1.0e-5)
  UndefRefError: access to undefined reference
  Stacktrace:
   [1] getindex at ./array.jl:809 [inlined]
   [2] getindex at ./multidimensional.jl:557 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:614 [inlined]
   [4] _getindex at ./broadcast.jl:645 [inlined]
   [5] _getindex at ./broadcast.jl:644 [inlined]
   [6] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [7] _getindex at ./broadcast.jl:644 [inlined]
   [8] _broadcast_getindex at ./broadcast.jl:620 [inlined]
   [9] getindex at ./broadcast.jl:575 [inlined]
   [10] macro expansion at ./broadcast.jl:932 [inlined]
   [11] macro expansion at ./simdloop.jl:77 [inlined]
   [12] copyto! at ./broadcast.jl:931 [inlined]
   [13] copyto! at ./broadcast.jl:886 [inlined]
   [14] copy at ./broadcast.jl:862 [inlined]
   [15] materialize at ./broadcast.jl:837 [inlined]
   [16] alloc_DF(::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/NLSolversBase/QPnui/src/objective_types/abstract.jl:19
   [17] lmfit(::LsqFit.var"#18#20"{EquationsOfState.NonlinearFitting.var"#2#3"{BulkModulus,UnionAll},Array{Float64,1},Array{BigFloat,1}}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; autodiff::Symbol, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:63
   [18] lmfit at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:61 [inlined]
   [19] curve_fit(::EquationsOfState.NonlinearFitting.var"#2#3"{BulkModulus,UnionAll}, ::Array{Float64,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}; inplace::Bool, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:115
   [20] curve_fit(::Function, ::Array{Float64,1}, ::Array{BigFloat,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/LsqFit/NjkFI/src/curve_fit.jl:106
   [21] lsqfit(::Function, ::Array{Int64,1}, ::Array{BigFloat,1}; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:35
   [22] lsqfit(::Function, ::Array{Int64,1}, ::Array{BigFloat,1}) at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/src/NonlinearFitting.jl:31
   [23] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:249
   [24] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [25] top-level scope at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/NonlinearFitting.jl:179
  
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Method "Order0" failed because of Roots.ConvergenceFailed("Stopped at: xn = 41.03061570323671 Å^3. Too many steps taken. ").
[ Info: Using method "Order16"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Method "Bisection" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "FalsePosition"...
[ Info: Method "FalsePosition" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.BisectionExact"...
[ Info: Method "Roots.BisectionExact" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.A42"...
[ Info: Method "Roots.A42" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.AlefeldPotraShi"...
[ Info: Method "Roots.AlefeldPotraShi" failed because of ArgumentError("The interval [a,b] is not a bracketing interval.\nYou need f(a) and f(b) to have different signs (f(a) * f(b) < 0).\nConsider a different bracket or try fzero(f, c) with an initial guess c.\n\n").
[ Info: Using method "Roots.Brent"...
[ Info: Method "Roots.Brent" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Halley"...
[ Info: Method "Roots.Halley" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Schroder"...
[ Info: Method "Roots.Schroder" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Roots.Newton"...
[ Info: Method "Roots.Newton" failed because of BoundsError(#undef, #undef).
[ Info: Using method "Order0"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
[ Info: Using method "Bisection"...
Test Summary:                                            | Pass  Error  Total
EquationsOfState.jl                                      |  142      9    151
  Test EOS promotion                                     |   56            56
  Test default EOS parameter `e0` and promotion          |   26            26
  Test data from Pymatgen                                |    4             4
  Test fitting energy with different element types       |    4      3      7
  Test fitting pressure with different element types     |    4      3      7
  Test fitting bulk modulus with different element types |    4      3      7
  Test data from Pymatgen                                |    4             4
  Test Mg dataset                                        |    2             2
  Test Si dataset                                        |    2             2
  Test Ti dataset                                        |    2             2
  `Test w2k-lda-na.dat` from `Gibbs2`                    |    8             8
  `Test w2k-lda-k.dat` from `Gibbs2`                     |    7             7
  `Test mgo-sety1.dat` from `Gibbs2`                     |    7             7
  `Test test01a.dat` from `Gibbs2`                       |    7             7
  Test strain-volume-derivative                          |    4             4
  Test data from Pymatgen                                |              No tests
  Test `findvolume` with random unit                     |    1             1
ERROR: LoadError: Some tests did not pass: 142 passed, 0 failed, 9 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/EquationsOfState/p59Fv/test/runtests.jl:4

PkgEval failed: Package EquationsOfState errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T16:34:12.82
CPU usage: 193.62s (183.76s user, 10.19s kernel)

Network usage:
- eth0: 5.579 MiB received, 276.418 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":28,"op":"Write","minor":0},{"major":259,"value":19,"op":"Sync","minor":0},{"major":259,"value":9,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":28,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":28,"op":"Write","minor":2},{"major":253,"value":19,"op":"Sync","minor":2},{"major":253,"value":9,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":28,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":159744,"op":"Write","minor":0},{"major":259,"value":106496,"op":"Sync","minor":0},{"major":259,"value":53248,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":159744,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":159744,"op":"Write","minor":2},{"major":253,"value":106496,"op":"Sync","minor":2},{"major":253,"value":53248,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":159744,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":377212928,"max_usage":1850273792,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":231845888,"inactive_file":135168,"inactive_anon":90292224,"total_pgfault":4573338,"total_cache":112664576,"total_rss_huge":0,"total_active_anon":254251008,"total_pgmajfault":0,"pgpgin":2948682,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":2864522,"hierarchical_memsw_limit":0,"cache":112664576,"active_file":135168,"pgfault":4573338,"total_mapped_file":0,"total_pgpgout":2864522,"total_writeback":0,"rss":231845888,"unevictable":0,"total_inactive_anon":90292224,"total_pgpgin":2948682,"active_anon":254251008,"total_active_file":135168},"limit":540965302272},"name":"/EquationsOfState-yBUjs4DT","networks":{"eth0":{"rx_bytes":5850079,"rx_packets":2069,"tx_packets":2313,"tx_bytes":283052,"tx_dropped":0,"rx_dropped":7,"tx_errors":0,"rx_errors":0}},"id":"c15e12324d186b0f020a3633e021cb19684968138c27dd4eadf2908e04f5b649","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":3701435474522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":183760000000,"usage_in_kernelmode":10190000000,"total_usage":193619703475,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193619698005,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5470,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T16:34:12.895666322Z"}