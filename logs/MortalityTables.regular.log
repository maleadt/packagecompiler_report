################################################################################
# PkgEval set-up: 2021-01-11T23:39:57.732
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T23:39:59.505
#

 Installing known registries into `~/.julia`
######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed MbedTLS_jll ───────────────── v2.16.8+1
  Installed ZygoteRules ───────────────── v0.2.1
  Installed Zlib_jll ──────────────────── v1.2.11+18
  Installed TableTraits ───────────────── v1.0.0
  Installed MortalityTables ───────────── v1.0.1
  Installed XMLDict ───────────────────── v0.4.1
  Installed InitialValues ─────────────── v0.2.10
  Installed DataStructures ────────────── v0.18.8
  Installed Requires ──────────────────── v1.1.2
  Installed Tables ────────────────────── v1.2.2
  Installed Libiconv_jll ──────────────── v1.16.0+7
  Installed QuadGK ────────────────────── v2.4.1
  Installed MbedTLS ───────────────────── v1.0.3
  Installed DataAPI ───────────────────── v1.4.0
  Installed EzXML ─────────────────────── v1.1.0
  Installed Setfield ──────────────────── v0.7.0
  Installed ConstructionBase ──────────── v1.0.0
  Installed IterTools ─────────────────── v1.3.0
  Installed XML2_jll ──────────────────── v2.9.10+3
  Installed HTTP ──────────────────────── v0.8.19
  Installed OrderedCollections ────────── v1.3.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed ArgCheck ──────────────────── v2.1.0
  Installed DefineSingletons ──────────── v0.1.0
  Installed Adapt ─────────────────────── v2.4.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MacroTools ────────────────── v0.5.6
  Installed MicroCollections ──────────── v0.1.0
  Installed OffsetArrays ──────────────── v1.5.0
  Installed UnPack ────────────────────── v1.0.2
  Installed BangBang ──────────────────── v0.3.29
  Installed JLLWrappers ───────────────── v1.2.0
  Installed IniFile ───────────────────── v0.5.0
  Installed CompositionsBase ──────────── v0.1.0
  Installed Compat ────────────────────── v3.25.0
  Installed SplittablesBase ───────────── v0.1.10
  Installed Transducers ───────────────── v0.4.54
  Installed Parsers ───────────────────── v1.0.15
  Installed Artifacts ─────────────────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [4780e19d] + MortalityTables v1.0.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [79e6a3ab] + Adapt v2.4.0
  [dce04be8] + ArgCheck v2.1.0
  [56f22d72] + Artifacts v1.3.0
  [198e06fe] + BangBang v0.3.29
  [34da2185] + Compat v3.25.0
  [a33af91c] + CompositionsBase v0.1.0
  [187b0558] + ConstructionBase v1.0.0
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [244e2a9f] + DefineSingletons v0.1.0
  [8f5d6c58] + EzXML v1.1.0
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [22cec73e] + InitialValues v0.2.10
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.2.0
  [94ce4f54] + Libiconv_jll v1.16.0+7
  [1914dd2f] + MacroTools v0.5.6
  [739be429] + MbedTLS v1.0.3
  [c8ffd9c3] + MbedTLS_jll v2.16.8+1
  [128add7d] + MicroCollections v0.1.0
  [4780e19d] + MortalityTables v1.0.1
  [6fe1bfb0] + OffsetArrays v1.5.0
  [bac558e1] + OrderedCollections v1.3.2
  [69de0a69] + Parsers v1.0.15
  [1fd47b50] + QuadGK v2.4.1
  [ae029012] + Requires v1.1.2
  [efcf1570] + Setfield v0.7.0
  [171d559e] + SplittablesBase v0.1.10
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.2.2
  [28d57a85] + Transducers v0.4.54
  [3a884ed6] + UnPack v1.0.2
  [02c8fc9c] + XML2_jll v2.9.10+3
  [228000da] + XMLDict v0.4.1
  [83775a58] + Zlib_jll v1.2.11+18
  [700de1a5] + ZygoteRules v0.2.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2021-01-11T23:40:06.652
#

    Testing MortalityTables
Status `/tmp/jl_ced1dT/Project.toml`
  [336ed68f] CSV v0.8.2
  [682c06a0] JSON v0.21.1
  [4780e19d] MortalityTables v1.0.1
  [44cfe95a] Pkg
  [8dfed614] Test
Status `/tmp/jl_ced1dT/Manifest.toml`
  [79e6a3ab] Adapt v2.4.0
  [dce04be8] ArgCheck v2.1.0
  [56f22d72] Artifacts v1.3.0
  [198e06fe] BangBang v0.3.29
  [336ed68f] CSV v0.8.2
  [34da2185] Compat v3.25.0
  [a33af91c] CompositionsBase v0.1.0
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [244e2a9f] DefineSingletons v0.1.0
  [8f5d6c58] EzXML v1.1.0
  [cd3eb016] HTTP v0.8.19
  [83e8ac13] IniFile v0.5.0
  [22cec73e] InitialValues v0.2.10
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.2.0
  [682c06a0] JSON v0.21.1
  [94ce4f54] Libiconv_jll v1.16.0+7
  [1914dd2f] MacroTools v0.5.6
  [739be429] MbedTLS v1.0.3
  [c8ffd9c3] MbedTLS_jll v2.16.8+1
  [128add7d] MicroCollections v0.1.0
  [4780e19d] MortalityTables v1.0.1
  [6fe1bfb0] OffsetArrays v1.5.0
  [bac558e1] OrderedCollections v1.3.2
  [69de0a69] Parsers v1.0.15
  [2dfb63ee] PooledArrays v0.5.3
  [1fd47b50] QuadGK v2.4.1
  [ae029012] Requires v1.1.2
  [91c51154] SentinelArrays v1.2.16
  [efcf1570] Setfield v0.7.0
  [171d559e] SplittablesBase v0.1.10
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.2.2
  [28d57a85] Transducers v0.4.54
  [3a884ed6] UnPack v1.0.2
  [02c8fc9c] XML2_jll v2.9.10+3
  [228000da] XMLDict v0.4.1
  [83775a58] Zlib_jll v1.2.11+18
  [700de1a5] ZygoteRules v0.2.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
CSV and XTbML equality: 428: Error During Test at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3
  Got exception outside of a @test
  Parsers.Error (SUCCESS: OK ):
  initial value parsing succeeded
  attempted to parse Float64 from: "1986-92 Canadian Institute of Actuaries (CIA) - Male. Basis: Age Nearest Birthday. Minimum Ultimate Age: 15. Maximum Ultimate Age: 105"
  
  Stacktrace:
   [1] parse(::Type{Float64}, ::String, ::Parsers.Options{false,false,false,false,Nothing,Nothing,Nothing}; pos::Int64, len::Int64) at /home/pkgeval/.julia/packages/Parsers/2MBHI/src/Parsers.jl:133
   [2] parse at /home/pkgeval/.julia/packages/Parsers/2MBHI/src/Parsers.jl:131 [inlined] (repeats 2 times)
   [3] parsemaybe(::Type{T} where T, ::String) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:148
   [4] (::MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}})(::Int64) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:118
   [5] iterate at ./generator.jl:47 [inlined]
   [6] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:699
   [7] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}}}) at ./array.jl:628
   [8] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2162
   [9] (::MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64})(::Int64) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:113
   [10] iterate at ./generator.jl:47 [inlined]
   [11] collect_to!(::Array{OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}},1}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Int64, ::Int64) at ./array.jl:732
   [12] collect_to_with_first!(::Array{OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}},1}, ::OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Int64) at ./array.jl:710
   [13] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704
   [14] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}) at ./array.jl:628
   [15] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2162
   [16] MortalityTable(::CSV.File{false}) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:104
   [17] macro expansion at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:5 [inlined]
   [18] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1190 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3
   [22] include(::String) at ./client.jl:457
   [23] top-level scope at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/runtests.jl:11
   [24] include(::String) at ./client.jl:457
   [25] top-level scope at none:6
   [26] eval(::Module, ::Any) at ./boot.jl:331
   [27] exec_options(::Base.JLOptions) at ./client.jl:272
   [28] _start() at ./client.jl:506
  
CSV and XTbML equality: 1152: Error During Test at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3
  Got exception outside of a @test
  Parsers.Error (SUCCESS: OK ):
  initial value parsing succeeded
  attempted to parse Float64 from: "2001 Valuation Basic Table (VBT) Select and Ultimate Table - Female Nonsmoker. Basis: Age Nearest Birthday. Minimum Ultimate Age: 25. Maximum Ultimate Age: 120."
  
  Stacktrace:
   [1] parse(::Type{Float64}, ::String, ::Parsers.Options{false,false,false,false,Nothing,Nothing,Nothing}; pos::Int64, len::Int64) at /home/pkgeval/.julia/packages/Parsers/2MBHI/src/Parsers.jl:133
   [2] parse at /home/pkgeval/.julia/packages/Parsers/2MBHI/src/Parsers.jl:131 [inlined] (repeats 2 times)
   [3] parsemaybe(::Type{T} where T, ::String) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:148
   [4] (::MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}})(::Int64) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:118
   [5] iterate at ./generator.jl:47 [inlined]
   [6] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:699
   [7] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}}}) at ./array.jl:628
   [8] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2162
   [9] (::MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64})(::Int64) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:113
   [10] iterate at ./generator.jl:47 [inlined]
   [11] collect_to!(::Array{OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}},1}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Int64, ::Int64) at ./array.jl:732
   [12] collect_to_with_first!(::Array{OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}},1}, ::OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Int64) at ./array.jl:710
   [13] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704
   [14] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}) at ./array.jl:628
   [15] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2162
   [16] MortalityTable(::CSV.File{false}) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:104
   [17] macro expansion at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:5 [inlined]
   [18] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1190 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3
   [22] include(::String) at ./client.jl:457
   [23] top-level scope at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/runtests.jl:11
   [24] include(::String) at ./client.jl:457
   [25] top-level scope at none:6
   [26] eval(::Module, ::Any) at ./boot.jl:331
   [27] exec_options(::Base.JLOptions) at ./client.jl:272
   [28] _start() at ./client.jl:506
  
CSV and XTbML equality: 3302: Error During Test at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3
  Got exception outside of a @test
  Parsers.Error (SUCCESS: OK ):
  initial value parsing succeeded
  attempted to parse Float64 from: "2017 Loaded CSO Preferred Structure Nonsmoker, Super Preferred, Female, Select and Ultimate Table. Basis: Age Nearest Birthday. Minimum Ultimate Age: 18. Maximum Ultimate Age: 120."
  
  Stacktrace:
   [1] parse(::Type{Float64}, ::String, ::Parsers.Options{false,false,false,false,Nothing,Nothing,Nothing}; pos::Int64, len::Int64) at /home/pkgeval/.julia/packages/Parsers/2MBHI/src/Parsers.jl:133
   [2] parse at /home/pkgeval/.julia/packages/Parsers/2MBHI/src/Parsers.jl:131 [inlined] (repeats 2 times)
   [3] parsemaybe(::Type{T} where T, ::String) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:148
   [4] (::MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}})(::Int64) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:118
   [5] iterate at ./generator.jl:47 [inlined]
   [6] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:699
   [7] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#74#80"{Int64,Int64,CSV.File{false}}}) at ./array.jl:628
   [8] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2162
   [9] (::MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64})(::Int64) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:113
   [10] iterate at ./generator.jl:47 [inlined]
   [11] collect_to!(::Array{OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}},1}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Int64, ::Int64) at ./array.jl:732
   [12] collect_to_with_first!(::Array{OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}},1}, ::OffsetArrays.OffsetArray{Float64,1,Array{Float64,1}}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Int64) at ./array.jl:710
   [13] _collect(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at ./array.jl:704
   [14] collect_similar(::UnitRange{Int64}, ::Base.Generator{UnitRange{Int64},MortalityTables.var"#73#79"{CSV.File{false},Int64,Int64,Int64}}) at ./array.jl:628
   [15] map(::Function, ::UnitRange{Int64}) at ./abstractarray.jl:2162
   [16] MortalityTable(::CSV.File{false}) at /home/pkgeval/.julia/packages/MortalityTables/TpClP/src/CSV.jl:104
   [17] macro expansion at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:5 [inlined]
   [18] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1190 [inlined]
   [19] macro expansion at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3 [inlined]
   [20] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
   [21] top-level scope at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:3
   [22] include(::String) at ./client.jl:457
   [23] top-level scope at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/runtests.jl:11
   [24] include(::String) at ./client.jl:457
   [25] top-level scope at none:6
   [26] eval(::Module, ::Any) at ./boot.jl:331
   [27] exec_options(::Base.JLOptions) at ./client.jl:272
   [28] _start() at ./client.jl:506
  
Test Summary:                  | Pass  Error  Total
CSV equality                   |    1      3      4
  CSV and XTbML equality: 17   |    1             1
  CSV and XTbML equality: 428  |           1      1
  CSV and XTbML equality: 1152 |           1      1
  CSV and XTbML equality: 3302 |           1      1
ERROR: LoadError: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/CSV.jl:2
in expression starting at /home/pkgeval/.julia/packages/MortalityTables/TpClP/test/runtests.jl:11

PkgEval failed: Package MortalityTables errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T23:41:42.378
CPU usage: 104.56s (96.52s user, 8.24s kernel)

Network usage:
- eth0: 10.436 MiB received, 250.200 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":4,"op":"Read","minor":0},{"major":259,"value":24,"op":"Write","minor":0},{"major":259,"value":23,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":28,"op":"Total","minor":0},{"major":253,"value":4,"op":"Read","minor":2},{"major":253,"value":24,"op":"Write","minor":2},{"major":253,"value":23,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":28,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":229376,"op":"Read","minor":0},{"major":259,"value":143360,"op":"Write","minor":0},{"major":259,"value":335872,"op":"Sync","minor":0},{"major":259,"value":36864,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":372736,"op":"Total","minor":0},{"major":253,"value":229376,"op":"Read","minor":2},{"major":253,"value":143360,"op":"Write","minor":2},{"major":253,"value":335872,"op":"Sync","minor":2},{"major":253,"value":36864,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":372736,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":378937344,"max_usage":1237118976,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":214470656,"inactive_file":270336,"inactive_anon":112865280,"total_pgfault":2976072,"total_cache":133033984,"total_rss_huge":0,"total_active_anon":234246144,"total_pgmajfault":0,"pgpgin":1969539,"rss_huge":0,"mapped_file":0,"total_inactive_file":270336,"dirty":270336,"total_unevictable":0,"total_dirty":270336,"writeback":0,"pgpgout":1884721,"hierarchical_memsw_limit":0,"cache":133033984,"active_file":135168,"pgfault":2976072,"total_mapped_file":0,"total_pgpgout":1884721,"total_writeback":0,"rss":214470656,"unevictable":0,"total_inactive_anon":112865280,"total_pgpgin":1969539,"active_anon":234246144,"total_active_file":135168},"limit":540965302272},"name":"/MortalityTables-0Wgn2RNd","networks":{"eth0":{"rx_bytes":10943321,"rx_packets":1963,"tx_packets":2198,"tx_bytes":256205,"tx_dropped":0,"rx_dropped":4,"tx_errors":0,"rx_errors":0}},"id":"67bc858311db892967d852cbc23e0c7412159305fb25550003cb22d5bef5c41f","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":6979019444522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":96520000000,"usage_in_kernelmode":8240000000,"total_usage":104557834070,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222206916,0,0,104335627154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T23:41:42.797940211Z"}