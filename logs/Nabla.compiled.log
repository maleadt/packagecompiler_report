################################################################################
# PackageCompiler set-up: 2021-01-11T22:33:13.741
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0



################################################################################
# Installation: 2021-01-11T22:33:15.44
#

 Installing known registries into `~/.julia`
###############################################                           65.5%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed Calculus ───────────────────── v0.5.1
  Installed DualNumbers ────────────────── v0.6.3
  Installed DiffRules ──────────────────── v0.0.10
  Installed SpecialFunctions ───────────── v1.2.1
  Installed JLLWrappers ────────────────── v1.2.0
  Installed Nabla ──────────────────────── v0.12.2
  Installed PackageCompiler ────────────── v1.2.5
  Installed MuladdMacro ────────────────── v0.2.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed FDM ────────────────────────── v0.6.1
  Installed Artifacts ──────────────────── v1.3.0
  Installed NaNMath ────────────────────── v0.3.5
  Installed ChainRulesCore ─────────────── v0.9.24
Updating `~/.julia/environments/v1.5/Project.toml`
  [49c96f43] + Nabla v0.12.2
  [9b87118b] + PackageCompiler v1.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [49dc2e85] + Calculus v0.5.1
  [d360d2e6] + ChainRulesCore v0.9.24
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [b552c78f] + DiffRules v0.0.10
  [fa6b7ba4] + DualNumbers v0.6.3
  [e25cca7e] + FDM v0.6.1
  [692b3bcd] + JLLWrappers v1.2.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.5
  [49c96f43] + Nabla v0.12.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [9b87118b] + PackageCompiler v1.2.5
  [276daf66] + SpecialFunctions v1.2.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Compiling: 2021-01-11T22:33:22.503
#

[ Info: PackageCompiler: creating system image object file, this might take a while...
Generated system image is 155.433 MiB, compilation took 187 seconds


################################################################################
# PkgEval set-up: 2021-01-11T22:36:36.916
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0

Base.julia_cmd() = `/usr/local/julia/bin/julia -Cnative -J/cache/Nabla-k2dhooSg.so -g1`


################################################################################
# Installation: 2021-01-11T22:36:38.707
#

 Installing known registries into `~/.julia`
######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed Nabla ──────────────────────── v0.12.2
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed DualNumbers ────────────────── v0.6.3
  Installed DiffRules ──────────────────── v0.0.10
  Installed NaNMath ────────────────────── v0.3.5
  Installed SpecialFunctions ───────────── v1.2.1
  Installed JLLWrappers ────────────────── v1.2.0
  Installed ChainRulesCore ─────────────── v0.9.24
  Installed MuladdMacro ────────────────── v0.2.2
  Installed Calculus ───────────────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed FDM ────────────────────────── v0.6.1
  Installed Artifacts ──────────────────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [49c96f43] + Nabla v0.12.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [49dc2e85] + Calculus v0.5.1
  [d360d2e6] + ChainRulesCore v0.9.24
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [b552c78f] + DiffRules v0.0.10
  [fa6b7ba4] + DualNumbers v0.6.3
  [e25cca7e] + FDM v0.6.1
  [692b3bcd] + JLLWrappers v1.2.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.5
  [49c96f43] + Nabla v0.12.2
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v1.2.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2021-01-11T22:36:44.437
#

    Testing Nabla
Status `/tmp/jl_OnrRqc/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [b552c78f] DiffRules v0.0.10
  [31c24e10] Distributions v0.24.10
  [fa6b7ba4] DualNumbers v0.6.3
  [e25cca7e] FDM v0.6.1
  [49c96f43] Nabla v0.12.2
  [276daf66] SpecialFunctions v1.2.1
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_OnrRqc/Manifest.toml`
  [56f22d72] Artifacts v1.3.0
  [6e4b80f9] BenchmarkTools v0.5.0
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.9.24
  [34da2185] Compat v3.25.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.18.8
  [b552c78f] DiffRules v0.0.10
  [31c24e10] Distributions v0.24.10
  [fa6b7ba4] DualNumbers v0.6.3
  [e25cca7e] FDM v0.6.1
  [1a297f60] FillArrays v0.10.2
  [692b3bcd] JLLWrappers v1.2.0
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.5
  [49c96f43] Nabla v0.12.2
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [bac558e1] OrderedCollections v1.3.2
  [90014a1f] PDMats v0.10.1
  [69de0a69] Parsers v1.0.15
  [1fd47b50] QuadGK v2.4.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v1.2.1
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.6
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = in_domain(::Function, ::Float64) at finite_differencing.jl:129
└ @ Nabla /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:129
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #Branch#13 at core.jl:83 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/core.jl:83
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = #47 at finite_differencing.jl:24 [inlined]
└ @ Core /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = (::Nabla.var"#58#62"{Float64,typeof(lbeta)})(::Float64) at finite_differencing.jl:198
└ @ Nabla /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:198
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = Branch(::Function, ::Tuple{Leaf{Float64},Leaf{Float64}}, ::Tape; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at core.jl:83
└ @ Nabla /home/pkgeval/.julia/packages/Nabla/mv2wx/src/core.jl:83
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = (::Nabla.var"#47#48"{typeof(lbeta),Float64,Tuple{Float64,Float64},Tuple{Float64,Float64}})(::Float64) at finite_differencing.jl:24
└ @ Nabla /home/pkgeval/.julia/packages/Nabla/mv2wx/src/finite_differencing.jl:24
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = broadcast(::Function, ::Float64) at broadcast.jl:778
└ @ Base.Broadcast ./broadcast.jl:778
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf(::typeof(lgamma), ::Float64) at broadcast.jl:648
└ @ Base.Broadcast ./broadcast.jl:648
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = _broadcast_getindex_evalf at broadcast.jl:648 [inlined]
└ @ Core ./broadcast.jl:648
┌ Warning: `lbeta(x::Real, w::Real)` is deprecated, use `(logabsbeta(x, w))[1]` instead.
│   caller = broadcast(::Function, ::Float64, ::Float64) at broadcast.jl:778
└ @ Base.Broadcast ./broadcast.jl:778
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(+), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:411
└ @ Base ./reduce.jl:411
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = MappingRF at reduce.jl:93 [inlined]
└ @ Core ./reduce.jl:93
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:408
└ @ Base ./reduce.jl:408
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = _mapreduce(::typeof(lgamma), ::typeof(Base.add_sum), ::IndexLinear, ::Array{Float64,1}) at reduce.jl:411
└ @ Base ./reduce.jl:411
Test Summary: | Pass  Total
Nabla.jl      | 3575   3575
    Testing Nabla tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2021-01-11T22:42:25.841
CPU usage: 348.90s (342.59s user, 6.67s kernel)

Network usage:
- eth0: 3.949 MiB received, 164.059 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":19,"op":"Write","minor":0},{"major":259,"value":14,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":19,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":19,"op":"Write","minor":2},{"major":253,"value":14,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":19,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":86016,"op":"Write","minor":0},{"major":259,"value":57344,"op":"Sync","minor":0},{"major":259,"value":28672,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":86016,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":86016,"op":"Write","minor":2},{"major":253,"value":57344,"op":"Sync","minor":2},{"major":253,"value":28672,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":86016,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":338223104,"max_usage":1248600064,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":209661952,"inactive_file":135168,"inactive_anon":83398656,"total_pgfault":2557929,"total_cache":97460224,"total_rss_huge":0,"total_active_anon":223703040,"total_pgmajfault":0,"pgpgin":1243737,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":1168776,"hierarchical_memsw_limit":0,"cache":97460224,"active_file":135168,"pgfault":2557929,"total_mapped_file":0,"total_pgpgout":1168776,"total_writeback":0,"rss":209661952,"unevictable":0,"total_inactive_anon":83398656,"total_pgpgin":1243737,"active_anon":223703040,"total_active_file":135168},"limit":540965302272},"name":"/Nabla-OEcCUD9x","networks":{"eth0":{"rx_bytes":4140391,"rx_packets":1257,"tx_packets":1338,"tx_bytes":167996,"tx_dropped":0,"rx_dropped":12,"tx_errors":0,"rx_errors":0}},"id":"596c42143adfef26877ef3e960e198ee6655d734d29823277c4333531fa37e43","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":44},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":6524441084522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":342590000000,"usage_in_kernelmode":6670000000,"total_usage":348897414637,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,348897878418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2880,1265650,0,0,0,0,0]}},"read":"2021-01-11T22:42:25.848946506Z"}