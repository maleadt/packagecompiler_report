################################################################################
# PkgEval set-up: 2021-01-11T21:32:34.503
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T21:32:36.3
#

 Installing known registries into `~/.julia`
#####                                                                      7.6%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed DataAPI ───────────────────── v1.4.0
  Installed Missings ──────────────────── v0.4.4
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MacroTools ────────────────── v0.5.6
  Installed Requires ──────────────────── v1.1.2
  Installed Query ─────────────────────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.1
  Installed TableTraitsUtils ──────────── v1.0.1
  Installed IterableTables ────────────── v1.0.0
  Installed QueryOperators ────────────── v0.9.2
  Installed OrderedCollections ────────── v1.3.2
  Installed TableShowUtils ────────────── v0.2.5
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataStructures ────────────── v0.17.20
  Installed Parsers ───────────────────── v1.0.15
  Installed DataValues ────────────────── v0.4.13
Updating `~/.julia/environments/v1.5/Project.toml`
  [1a8c2f83] + Query v1.0.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [e7dc6d0d] + DataValues v0.4.13
  [1c8ee90f] + IterableTables v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.1
  [1914dd2f] + MacroTools v0.5.6
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.2
  [69de0a69] + Parsers v1.0.15
  [1a8c2f83] + Query v1.0.0
  [2aef5ad7] + QueryOperators v0.9.2
  [ae029012] + Requires v1.1.2
  [5e66a065] + TableShowUtils v0.2.5
  [3783bdb8] + TableTraits v1.0.0
  [382cd787] + TableTraitsUtils v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2021-01-11T21:32:41.554
#

    Testing Query
Status `/tmp/jl_eG0ivQ/Project.toml`
  [a93c6f00] DataFrames v0.22.2
  [e7dc6d0d] DataValues v0.4.13
  [e30172f5] Documenter v0.26.1
  [6deec6e2] IndexedTables v0.13.0
  [1c8ee90f] IterableTables v1.0.0
  [1914dd2f] MacroTools v0.5.6
  [1a8c2f83] Query v1.0.0
  [2aef5ad7] QueryOperators v0.9.2
  [9d95f2ec] TypedTables v1.2.0
  [ade2ca70] Dates
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_eG0ivQ/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.4.0
  [324d7699] CategoricalArrays v0.9.0
  [34da2185] Compat v3.25.0
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.4.0
  [a93c6f00] DataFrames v0.22.2
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [85a47980] Dictionaries v0.3.6
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.26.1
  [59287772] Formatting v0.4.2
  [b5f81e59] IOCapture v0.1.1
  [6deec6e2] IndexedTables v0.13.0
  [313cdc1a] Indexing v1.1.0
  [41ab1584] InvertedIndices v1.0.0
  [1c8ee90f] IterableTables v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [1914dd2f] MacroTools v0.5.6
  [e1d29d7a] Missings v0.4.4
  [925886fa] OnlineStatsBase v1.4.4
  [bac558e1] OrderedCollections v1.3.2
  [69de0a69] Parsers v1.0.15
  [2dfb63ee] PooledArrays v0.5.3
  [08abe8d2] PrettyTables v0.10.1
  [1a8c2f83] Query v1.0.0
  [2aef5ad7] QueryOperators v0.9.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.2
  [a2af1166] SortingAlgorithms v0.3.1
  [03a91e81] SplitApplyCombine v1.1.3
  [2913bbd2] StatsBase v0.33.2
  [09ab397b] StructArrays v0.4.4
  [856f2bd8] StructTypes v1.2.1
  [5e66a065] TableShowUtils v0.2.5
  [3783bdb8] TableTraits v1.0.0
  [382cd787] TableTraitsUtils v1.0.1
  [bd369af6] Tables v1.2.2
  [9d95f2ec] TypedTables v1.2.0
  [ea10d353] WeakRefStrings v0.6.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/gettingstarted.md:9-28
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = df |>
│   @filter(_.age>50) |>
│   @map({_.name, _.children}) |>
│   DataFrame
│ 
│ println(x)
│ 
│ # output
│ 
│ 1×2 DataFrame
│ │ Row │ name   │ children │
│ │     │ String │ Int64    │
│ ├─────┼────────┼──────────┤
│ │ 1   │ Kirk   │ 2        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = df |>
│   @filter(_.age>50) |>
│   @map({_.name, _.children}) |>
│   DataFrame
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 1×2 DataFrame
│  Row │ name    children
│      │ String  Int64
│ ─────┼──────────────────
│    1 │ Kirk           2
│ 
│ Expected output:
│ 
│ 1×2 DataFrame
│ │ Row │ name   │ children │
│ │     │ String │ Int64    │
│ ├─────┼────────┼──────────┤
│ │ 1   │ Kirk   │ 2        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×2 DataFrame
│    │ DataFrame
│     Row │ name   │ children │
│    │     │ String │ Int64    │
│    ├─────┼────────┼──────────┤
│    │ 1   name    children
│         │ Kirk   String  Int64
│    ─────┼──────────────────
│       1 │ 2        │Kirk           2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/gettingstarted.md:45-65
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @where i.age>50
│     @select {i.name, i.children}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 1×2 DataFrame
│ │ Row │ name   │ children │
│ │     │ String │ Int64    │
│ ├─────┼────────┼──────────┤
│ │ 1   │ Kirk   │ 2        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @where i.age>50
│     @select {i.name, i.children}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 1×2 DataFrame
│  Row │ name    children
│      │ String  Int64
│ ─────┼──────────────────
│    1 │ Kirk           2
│ 
│ Expected output:
│ 
│ 1×2 DataFrame
│ │ Row │ name   │ children │
│ │     │ String │ Int64    │
│ ├─────┼────────┼──────────┤
│ │ 1   │ Kirk   │ 2        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×2 DataFrame
│    │ DataFrame
│     Row │ name   │ children │
│    │     │ String │ Int64    │
│    ├─────┼────────┼──────────┤
│    │ 1   name    children
│         │ Kirk   String  Int64
│    ─────┼──────────────────
│       1 │ 2        │Kirk           2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/sinks.md:34-55
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @select {i.name, i.age, Children=i.children}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 3×3 DataFrame
│ │ Row │ name   │ age     │ Children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ John   │ 23.0    │ 3        │
│ │ 2   │ Sally  │ 42.0    │ 5        │
│ │ 3   │ Kirk   │ 59.0    │ 2        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @select {i.name, i.age, Children=i.children}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 3×3 DataFrame
│  Row │ name    age      Children
│      │ String  Float64  Int64
│ ─────┼───────────────────────────
│    1 │ John       23.0         3
│    2 │ Sally      42.0         5
│    3 │ Kirk       59.0         2
│ 
│ Expected output:
│ 
│ 3×3 DataFrame
│ │ Row │ name   │ age     │ Children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ John   │ 23.0    │ 3        │
│ │ 2   │ Sally  │ 42.0    │ 5        │
│ │ 3   │ Kirk   │ 59.0    │ 2        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 DataFrame
│    │ DataFrame
│     Row │ name   │ age     │ Children │
│    │     │ String │ Float64 │ Int64    │
│    ├─────┼────────┼─────────┼──────────┤
│    │ 1   │ John   │ 23.0    │ 3        │
│    │ 2   │ Sally  │ 42.0    │ 5        │
│    name    age      Children
│         │ 3   String  Float64  Int64
│    ─────┼───────────────────────────
│       1 │ Kirk   John       23.0         3
│       2 │ 59.0    Sally      42.0         5
│       3 │ 2        │Kirk       59.0         2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:9-34
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[2,1,1,2,1,3],b=[2,2,1,1,3,2])
│ 
│ x = @from i in df begin
│     @orderby descending(i.a), i.b
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 6×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 2     │
│ │ 2   │ 2     │ 1     │
│ │ 3   │ 2     │ 2     │
│ │ 4   │ 1     │ 1     │
│ │ 5   │ 1     │ 2     │
│ │ 6   │ 1     │ 3     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[2,1,1,2,1,3],b=[2,2,1,1,3,2])
│ 
│ x = @from i in df begin
│     @orderby descending(i.a), i.b
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 6×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     3      2
│    2 │     2      1
│    3 │     2      2
│    4 │     1      1
│    5 │     1      2
│    6 │     1      3
│ 
│ Expected output:
│ 
│ 6×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 2     │
│ │ 2   │ 2     │ 1     │
│ │ 3   │ 2     │ 2     │
│ │ 4   │ 1     │ 1     │
│ │ 5   │ 1     │ 2     │
│ │ 6   │ 1     │ 3     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    6×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 3     │ 2     │
│    │ 2   │ 2     │ 1     │
│    │ 3   │ 2     │ 2     │
│    │ 4   │ 1     │ 1     │
│    │ 5   │ 1     │ 2     │
│    │ 6   │ 1     │ 3     │3      2
│       2 │     2      1
│       3 │     2      2
│       4 │     1      1
│       5 │     1      2
│       6 │     1      3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:42-62
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @where i.age > 30. && i.children > 2
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 1×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ Sally  │ 42.0    │ 5        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @where i.age > 30. && i.children > 2
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 1×3 DataFrame
│  Row │ name    age      children
│      │ String  Float64  Int64
│ ─────┼───────────────────────────
│    1 │ Sally      42.0         5
│ 
│ Expected output:
│ 
│ 1×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ Sally  │ 42.0    │ 5        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×3 DataFrame
│    │ DataFrame
│     Row │ name   │ age     │ children │
│    │     │ String │ Float64 │ Int64    │
│    ├─────┼────────┼─────────┼──────────┤
│    │ 1   │ Sally  name    age      children
│         │ 42.0    String  Float64  Int64
│    ─────┼───────────────────────────
│       1 │ 5        │Sally      42.0         5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:90-111
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @select {i.name, Age=i.age}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 3×2 DataFrame
│ │ Row │ name   │ Age     │
│ │     │ String │ Float64 │
│ ├─────┼────────┼─────────┤
│ │ 1   │ John   │ 23.0    │
│ │ 2   │ Sally  │ 42.0    │
│ │ 3   │ Kirk   │ 59.0    │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @select {i.name, Age=i.age}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 3×2 DataFrame
│  Row │ name    Age
│      │ String  Float64
│ ─────┼─────────────────
│    1 │ John       23.0
│    2 │ Sally      42.0
│    3 │ Kirk       59.0
│ 
│ Expected output:
│ 
│ 3×2 DataFrame
│ │ Row │ name   │ Age     │
│ │     │ String │ Float64 │
│ ├─────┼────────┼─────────┤
│ │ 1   │ John   │ 23.0    │
│ │ 2   │ Sally  │ 42.0    │
│ │ 3   │ Kirk   │ 59.0    │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×2 DataFrame
│    │ DataFrame
│     Row │ name   │ Age     │
│    │     │ String │ Float64 │
│    ├─────┼────────┼─────────┤
│    │ 1   │ John   │ 23.0    │
│    │ 2   │ Sally  name    Age
│         │ 42.0    │
│    String  Float64
│    ─────┼─────────────────
│       1 │ 3   John       23.0
│       2 │ Kirk   Sally      42.0
│       3 │ 59.0    │Kirk       59.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:121-145
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ source = Dict(:a=>[1,2,3], :b=>[4,5])
│ 
│ q = @from i in source begin
│     @from j in i.second
│     @select {Key=i.first,Value=j}
│     @collect DataFrame
│ end
│ 
│ println(q)
│ 
│ # output
│ 
│ 5×2 DataFrame
│ │ Row │ Key    │ Value │
│ │     │ Symbol │ Int64 │
│ ├─────┼────────┼───────┤
│ │ 1   │ a      │ 1     │
│ │ 2   │ a      │ 2     │
│ │ 3   │ a      │ 3     │
│ │ 4   │ b      │ 4     │
│ │ 5   │ b      │ 5     │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ source = Dict(:a=>[1,2,3], :b=>[4,5])
│ 
│ q = @from i in source begin
│     @from j in i.second
│     @select {Key=i.first,Value=j}
│     @collect DataFrame
│ end
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 5×2 DataFrame
│  Row │ Key     Value
│      │ Symbol  Int64
│ ─────┼───────────────
│    1 │ a           1
│    2 │ a           2
│    3 │ a           3
│    4 │ b           4
│    5 │ b           5
│ 
│ Expected output:
│ 
│ 5×2 DataFrame
│ │ Row │ Key    │ Value │
│ │     │ Symbol │ Int64 │
│ ├─────┼────────┼───────┤
│ │ 1   │ a      │ 1     │
│ │ 2   │ a      │ 2     │
│ │ 3   │ a      │ 3     │
│ │ 4   │ b      │ 4     │
│ │ 5   │ b      │ 5     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    5×2 DataFrame
│    │ DataFrame
│     Row │ Key    │ Value │
│    │     │ Symbol │ Int64 │
│    ├─────┼────────┼───────┤
│    │ 1   │ a      │ 1     │
│    │ 2   │ a      │ 2     │
│    │ 3   │ a      │ 3     │
│    Key     Value
│         │ 4   Symbol  Int64
│    ─────┼───────────────
│       1 │ b      a           1
│       2 │ 4     │
│    a           2
│       3 │ 5   a           3
│       4 │ b      b           4
│       5 │ 5     │b           5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:157-179
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = @from i in df1 begin
│     @join j in df2 on i.a equals j.c
│     @select {i.a,i.b,j.c,j.d}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 2×4 DataFrame
│ │ Row │ a     │ b       │ c     │ d      │
│ │     │ Int64 │ Float64 │ Int64 │ String │
│ ├─────┼───────┼─────────┼───────┼────────┤
│ │ 1   │ 2     │ 2.0     │ 2     │ John   │
│ │ 2   │ 2     │ 2.0     │ 2     │ Sally  │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = @from i in df1 begin
│     @join j in df2 on i.a equals j.c
│     @select {i.a,i.b,j.c,j.d}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 2×4 DataFrame
│  Row │ a      b        c      d
│      │ Int64  Float64  Int64  String
│ ─────┼───────────────────────────────
│    1 │     2      2.0      2  John
│    2 │     2      2.0      2  Sally
│ 
│ Expected output:
│ 
│ 2×4 DataFrame
│ │ Row │ a     │ b       │ c     │ d      │
│ │     │ Int64 │ Float64 │ Int64 │ String │
│ ├─────┼───────┼─────────┼───────┼────────┤
│ │ 1   │ 2     │ 2.0     │ 2     │ John   │
│ │ 2   │ 2     │ 2.0     │ 2     │ Sally  │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×4 DataFrame
│    │ DataFrame
│     Row │ a     │ b       │ c     a      b        c      d
│         │ d      │
│    Int64  Float64  Int64  String
│    ─────┼───────────────────────────────
│       1 │     │ Int64 │ Float64 │ Int64 │ String │
│    ├─────┼───────┼─────────┼───────┼────────┤
│    │ 1   │ 2     │ 2.0     │ 2     │ John   │
│    │ 2   │ 2     │ 2.0     │ 2     │ Sally  │2      2.0      2  John
│       2 │     2      2.0      2  Sally
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:187-210
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = @from i in df1 begin
│     @join j in df2 on i.a equals j.c into k
│     @select {t1=i.a,t2=length(k)}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 3×2 DataFrame
│ │ Row │ t1    │ t2    │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 0     │
│ │ 2   │ 2     │ 2     │
│ │ 3   │ 3     │ 0     │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = @from i in df1 begin
│     @join j in df2 on i.a equals j.c into k
│     @select {t1=i.a,t2=length(k)}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 3×2 DataFrame
│  Row │ t1     t2
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      0
│    2 │     2      2
│    3 │     3      0
│ 
│ Expected output:
│ 
│ 3×2 DataFrame
│ │ Row │ t1    │ t2    │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 0     │
│ │ 2   │ 2     │ 2     │
│ │ 3   │ 3     │ 0     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×2 DataFrame
│    │ DataFrame
│     Row │ t1    t1     t2
│         │ t2    │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 0     │
│    │ 2   │ 2     │ 2     │
│    │ 3   │ 3     │ 0     │1      0
│       2 │     2      2
│       3 │     3      0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:218-242
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ source_df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ source_df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ q = @from i in source_df1 begin
│     @left_outer_join j in source_df2 on i.a equals j.c
│     @select {i.a,i.b,j.c,j.d}
│     @collect DataFrame
│ end
│ 
│ println(q)
│ 
│ # output
│ 
│ 4×4 DataFrame
│ │ Row │ a     │ b       │ c       │ d       │
│ │     │ Int64 │ Float64 │ Int64⍰  │ String⍰ │
│ ├─────┼───────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1     │ 1.0     │ missing │ missing │
│ │ 2   │ 2     │ 2.0     │ 2       │ John    │
│ │ 3   │ 2     │ 2.0     │ 2       │ Sally   │
│ │ 4   │ 3     │ 3.0     │ missing │ missing │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ source_df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ source_df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ q = @from i in source_df1 begin
│     @left_outer_join j in source_df2 on i.a equals j.c
│     @select {i.a,i.b,j.c,j.d}
│     @collect DataFrame
│ end
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 4×4 DataFrame
│  Row │ a      b        c        d
│      │ Int64  Float64  Int64?   String?
│ ─────┼──────────────────────────────────
│    1 │     1      1.0  missing  missing
│    2 │     2      2.0        2  John
│    3 │     2      2.0        2  Sally
│    4 │     3      3.0  missing  missing
│ 
│ Expected output:
│ 
│ 4×4 DataFrame
│ │ Row │ a     │ b       │ c       │ d       │
│ │     │ Int64 │ Float64 │ Int64⍰  │ String⍰ │
│ ├─────┼───────┼─────────┼─────────┼─────────┤
│ │ 1   │ 1     │ 1.0     │ missing │ missing │
│ │ 2   │ 2     │ 2.0     │ 2       │ John    │
│ │ 3   │ 2     │ 2.0     │ 2       │ Sally   │
│ │ 4   │ 3     │ 3.0     │ missing │ missing │
│ 
│   diff =
│    Warning: Diff output requires color.
│    4×4 DataFrame
│    │ DataFrame
│     Row │ a     │ b       │ c       a      b        c        d
│         │ d       │
│    Int64  Float64  Int64?   String?
│    ─────┼──────────────────────────────────
│       1 │     │ Int64 │ Float64 │ Int64⍰  │ String⍰ │
│    ├─────┼───────┼─────────┼─────────┼─────────┤
│    │ 1   │ 1     │ 1.0     │ missing │ missing │
│    │ 2   │ 2     │ 2.0     │ 2       │ John    │
│    │ 3   │ 2     │ 2.0     │ 2       │ Sally   │
│    │ 4   │ 3     │ 3.0     │ missing │ missing │1      1.0  missing  missing
│       2 │     2      2.0        2  John
│       3 │     2      2.0        2  Sally
│       4 │     3      3.0  missing  missing
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:271-292
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,2,2])
│ 
│ x = @from i in df begin
│     @group i by i.children into g
│     @select {Key=key(g),Count=length(g)}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ Key   │ Count │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 1     │
│ │ 2   │ 2     │ 2     │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,2,2])
│ 
│ x = @from i in df begin
│     @group i by i.children into g
│     @select {Key=key(g),Count=length(g)}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ Key    Count
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     3      1
│    2 │     2      2
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ Key   │ Count │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 1     │
│ │ 2   │ 2     │ 2     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ Key   Key    Count
│         │ Count │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 3     │ 1     │
│    │ 2   │ 2     │ 2     │3      1
│       2 │     2      2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:300-323
│ 
│ ```jldoctest
│ using Query, DataFrames, Statistics
│ 
│ df = DataFrame(name=repeat(["John", "Sally", "Kirk"],inner=[1],outer=[2]), 
│      age=vcat([10., 20., 30.],[10., 20., 30.].+3), 
│      children=repeat([3,2,2],inner=[1],outer=[2]),state=[:a,:a,:a,:b,:b,:b])
│ 
│ x = @from i in df begin
│     @group i by i.state into g
│     @select {group=key(g),mage=mean(g.age), oldest=maximum(g.age), youngest=minimum(g.age)}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 2×4 DataFrame
│ │ Row │ group  │ mage    │ oldest  │ youngest │
│ │     │ Symbol │ Float64 │ Float64 │ Float64  │
│ ├─────┼────────┼─────────┼─────────┼──────────┤
│ │ 1   │ a      │ 20.0    │ 30.0    │ 10.0     │
│ │ 2   │ b      │ 23.0    │ 33.0    │ 13.0     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames, Statistics
│ 
│ df = DataFrame(name=repeat(["John", "Sally", "Kirk"],inner=[1],outer=[2]), 
│      age=vcat([10., 20., 30.],[10., 20., 30.].+3), 
│      children=repeat([3,2,2],inner=[1],outer=[2]),state=[:a,:a,:a,:b,:b,:b])
│ 
│ x = @from i in df begin
│     @group i by i.state into g
│     @select {group=key(g),mage=mean(g.age), oldest=maximum(g.age), youngest=minimum(g.age)}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 2×4 DataFrame
│  Row │ group   mage     oldest   youngest
│      │ Symbol  Float64  Float64  Float64
│ ─────┼────────────────────────────────────
│    1 │ a          20.0     30.0      10.0
│    2 │ b          23.0     33.0      13.0
│ 
│ Expected output:
│ 
│ 2×4 DataFrame
│ │ Row │ group  │ mage    │ oldest  │ youngest │
│ │     │ Symbol │ Float64 │ Float64 │ Float64  │
│ ├─────┼────────┼─────────┼─────────┼──────────┤
│ │ 1   │ a      │ 20.0    │ 30.0    │ 10.0     │
│ │ 2   │ b      │ 23.0    │ 33.0    │ 13.0     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×4 DataFrame
│    │ DataFrame
│     Row │ group  │ mage    │ oldest  │ youngest │
│    │     │ Symbol │ Float64 │ Float64 group   mage     oldest   youngest
│         │ Symbol  Float64  │
│    ├─────┼────────┼─────────┼─────────┼──────────┤
│    │ 1   │ a      │ 20.0    │ 30.0    │ 10.0     │
│    │ 2   │ b      │ 23.0    Float64  Float64
│    ─────┼────────────────────────────────────
│       1 │ 33.0    a          20.0     30.0      10.0
│       2 │ 13.0     │b          23.0     33.0      13.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/linqquerycommands.md:331-353
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,2,2])
│ 
│ x = @from i in df begin
│     @let count = length(i.name)
│     @let kids_per_year = i.children / i.age
│     @where count > 4
│     @select {Name=i.name, Count=count, KidsPerYear=kids_per_year}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 1×3 DataFrame
│ │ Row │ Name   │ Count │ KidsPerYear │
│ │     │ String │ Int64 │ Float64     │
│ ├─────┼────────┼───────┼─────────────┤
│ │ 1   │ Sally  │ 5     │ 0.047619    │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,2,2])
│ 
│ x = @from i in df begin
│     @let count = length(i.name)
│     @let kids_per_year = i.children / i.age
│     @where count > 4
│     @select {Name=i.name, Count=count, KidsPerYear=kids_per_year}
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 1×3 DataFrame
│  Row │ Name    Count  KidsPerYear
│      │ String  Int64  Float64
│ ─────┼────────────────────────────
│    1 │ Sally       5     0.047619
│ 
│ Expected output:
│ 
│ 1×3 DataFrame
│ │ Row │ Name   │ Count │ KidsPerYear │
│ │     │ String │ Int64 │ Float64     │
│ ├─────┼────────┼───────┼─────────────┤
│ │ 1   │ Sally  │ 5     │ 0.047619    │
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×3 DataFrame
│    │ DataFrame
│     Row │ Name   │ Count │ KidsPerYear │
│    │     │ String │ Int64 │ Float64     │
│    ├─────┼────────┼───────┼─────────────┤
│    │ 1   Name    Count  KidsPerYear
│         │ Sally  String  Int64  Float64
│    ─────┼────────────────────────────
│       1 │ Sally       5     │ 0.047619    │0.047619
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/sources.md:11-32
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 3×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ John   │ 23.0    │ 3        │
│ │ 2   │ Sally  │ 42.0    │ 5        │
│ │ 3   │ Kirk   │ 59.0    │ 2        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in df begin
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 3×3 DataFrame
│  Row │ name    age      children
│      │ String  Float64  Int64
│ ─────┼───────────────────────────
│    1 │ John       23.0         3
│    2 │ Sally      42.0         5
│    3 │ Kirk       59.0         2
│ 
│ Expected output:
│ 
│ 3×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ John   │ 23.0    │ 3        │
│ │ 2   │ Sally  │ 42.0    │ 5        │
│ │ 3   │ Kirk   │ 59.0    │ 2        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 DataFrame
│    │ DataFrame
│     Row │ name   │ age     │ children │
│    │     │ String │ Float64 │ Int64    │
│    ├─────┼────────┼─────────┼──────────┤
│    │ 1   │ John   │ 23.0    │ 3        │
│    │ 2   │ Sally  │ 42.0    │ 5        │
│    name    age      children
│         │ 3   String  Float64  Int64
│    ─────┼───────────────────────────
│       1 │ Kirk   John       23.0         3
│       2 │ 59.0    Sally      42.0         5
│       3 │ 2        │Kirk       59.0         2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/sources.md:40-61
│ 
│ ```jldoctest
│ using Query, DataFrames, TypedTables
│ 
│ tt = Table(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in tt begin
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ # output
│ 
│ 3×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ John   │ 23.0    │ 3        │
│ │ 2   │ Sally  │ 42.0    │ 5        │
│ │ 3   │ Kirk   │ 59.0    │ 2        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames, TypedTables
│ 
│ tt = Table(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = @from i in tt begin
│     @select i
│     @collect DataFrame
│ end
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 3×3 DataFrame
│  Row │ name    age      children
│      │ String  Float64  Int64
│ ─────┼───────────────────────────
│    1 │ John       23.0         3
│    2 │ Sally      42.0         5
│    3 │ Kirk       59.0         2
│ 
│ Expected output:
│ 
│ 3×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ John   │ 23.0    │ 3        │
│ │ 2   │ Sally  │ 42.0    │ 5        │
│ │ 3   │ Kirk   │ 59.0    │ 2        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 DataFrame
│    │ DataFrame
│     Row │ name   │ age     │ children │
│    │     │ String │ Float64 │ Int64    │
│    ├─────┼────────┼─────────┼──────────┤
│    │ 1   │ John   │ 23.0    │ 3        │
│    │ 2   │ Sally  │ 42.0    │ 5        │
│    name    age      children
│         │ 3   String  Float64  Int64
│    ─────┼───────────────────────────
│       1 │ Kirk   John       23.0         3
│       2 │ 59.0    Sally      42.0         5
│       3 │ 2        │Kirk       59.0         2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:6-26
│ 
│ ```jldoctest
│ using Query, DataFrames, Statistics
│ 
│ df = DataFrame(a=[1,1,2,3], b=[4,5,6,8])
│ 
│ df2 = df |>
│     @groupby(_.a) |>
│     @map({a=key(_), b=mean(_.b)}) |>
│     @filter(_.b > 5) |>
│     @orderby_descending(_.b) |>
│     DataFrame
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b       │
│ │     │ Int64 │ Float64 │
│ ├─────┼───────┼─────────┤
│ │ 1   │ 3     │ 8.0     │
│ │ 2   │ 2     │ 6.0     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames, Statistics
│ 
│ df = DataFrame(a=[1,1,2,3], b=[4,5,6,8])
│ 
│ df2 = df |>
│     @groupby(_.a) |>
│     @map({a=key(_), b=mean(_.b)}) |>
│     @filter(_.b > 5) |>
│     @orderby_descending(_.b) |>
│     DataFrame
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ a      b
│      │ Int64  Float64
│ ─────┼────────────────
│    1 │     3      8.0
│    2 │     2      6.0
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b       │
│ │     │ Int64 │ Float64 │
│ ├─────┼───────┼─────────┤
│ │ 1   │ 3     │ 8.0     │
│ │ 2   │ 2     │ 6.0     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b       │
│    Int64  Float64
│    ─────┼────────────────
│       1 │     │ Int64 │ Float64 │
│    ├─────┼───────┼─────────┤
│    │ 1   │ 3     │ 8.0     │
│    │ 2   │ 2     │ 6.0     │3      8.0
│       2 │     2      6.0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:57-73
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = df |> @filter(_.age > 30 && _.children > 2) |> DataFrame
│ 
│ println(x)
│ 
│ # output
│ 
│ 1×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ Sally  │ 42.0    │ 5        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,5,2])
│ 
│ x = df |> @filter(_.age > 30 && _.children > 2) |> DataFrame
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 1×3 DataFrame
│  Row │ name    age      children
│      │ String  Float64  Int64
│ ─────┼───────────────────────────
│    1 │ Sally      42.0         5
│ 
│ Expected output:
│ 
│ 1×3 DataFrame
│ │ Row │ name   │ age     │ children │
│ │     │ String │ Float64 │ Int64    │
│ ├─────┼────────┼─────────┼──────────┤
│ │ 1   │ Sally  │ 42.0    │ 5        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    1×3 DataFrame
│    │ DataFrame
│     Row │ name   │ age     │ children │
│    │     │ String │ Float64 │ Int64    │
│    ├─────┼────────┼─────────┼──────────┤
│    │ 1   │ Sally  name    age      children
│         │ 42.0    String  Float64  Int64
│    ─────┼───────────────────────────
│       1 │ 5        │Sally      42.0         5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:85-105
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,2,2])
│ 
│ x = df |>
│     @groupby(_.children) |>
│     @map({Key=key(_), Count=length(_)}) |>
│     DataFrame
│ 
│ println(x)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ Key   │ Count │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 1     │
│ │ 2   │ 2     │ 2     │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df = DataFrame(name=["John", "Sally", "Kirk"], age=[23., 42., 59.], children=[3,2,2])
│ 
│ x = df |>
│     @groupby(_.children) |>
│     @map({Key=key(_), Count=length(_)}) |>
│     DataFrame
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ Key    Count
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     3      1
│    2 │     2      2
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ Key   │ Count │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 1     │
│ │ 2   │ 2     │ 2     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ Key   Key    Count
│         │ Count │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 3     │ 1     │
│    │ 2   │ 2     │ 2     │3      1
│       2 │     2      2
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:115-136
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[2,1,1,2,1,3],b=[2,2,1,1,3,2])
│ 
│ x = df |> @orderby_descending(_.a) |> @thenby(_.b) |> DataFrame
│ 
│ println(x)
│ 
│ # output
│ 
│ 6×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 2     │
│ │ 2   │ 2     │ 1     │
│ │ 3   │ 2     │ 2     │
│ │ 4   │ 1     │ 1     │
│ │ 5   │ 1     │ 2     │
│ │ 6   │ 1     │ 3     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[2,1,1,2,1,3],b=[2,2,1,1,3,2])
│ 
│ x = df |> @orderby_descending(_.a) |> @thenby(_.b) |> DataFrame
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 6×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     3      2
│    2 │     2      1
│    3 │     2      2
│    4 │     1      1
│    5 │     1      2
│    6 │     1      3
│ 
│ Expected output:
│ 
│ 6×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 3     │ 2     │
│ │ 2   │ 2     │ 1     │
│ │ 3   │ 2     │ 2     │
│ │ 4   │ 1     │ 1     │
│ │ 5   │ 1     │ 2     │
│ │ 6   │ 1     │ 3     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    6×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 3     │ 2     │
│    │ 2   │ 2     │ 1     │
│    │ 3   │ 2     │ 2     │
│    │ 4   │ 1     │ 1     │
│    │ 5   │ 1     │ 2     │
│    │ 6   │ 1     │ 3     │3      2
│       2 │     2      1
│       3 │     2      2
│       4 │     1      1
│       5 │     1      2
│       6 │     1      3
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:144-163
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = df1 |> @groupjoin(df2, _.a, _.c, {t1=_.a, t2=length(__)}) |> DataFrame
│ 
│ println(x)
│ 
│ # output
│ 
│ 3×2 DataFrame
│ │ Row │ t1    │ t2    │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 0     │
│ │ 2   │ 2     │ 2     │
│ │ 3   │ 3     │ 0     │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = df1 |> @groupjoin(df2, _.a, _.c, {t1=_.a, t2=length(__)}) |> DataFrame
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 3×2 DataFrame
│  Row │ t1     t2
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      0
│    2 │     2      2
│    3 │     3      0
│ 
│ Expected output:
│ 
│ 3×2 DataFrame
│ │ Row │ t1    │ t2    │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 0     │
│ │ 2   │ 2     │ 2     │
│ │ 3   │ 3     │ 0     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×2 DataFrame
│    │ DataFrame
│     Row │ t1    t1     t2
│         │ t2    │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 0     │
│    │ 2   │ 2     │ 2     │
│    │ 3   │ 3     │ 0     │1      0
│       2 │     2      2
│       3 │     3      0
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:171-189
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = df1 |> @join(df2, _.a, _.c, {_.a, _.b, __.c, __.d}) |> DataFrame
│ 
│ println(x)
│ 
│ # output
│ 
│ 2×4 DataFrame
│ │ Row │ a     │ b       │ c     │ d      │
│ │     │ Int64 │ Float64 │ Int64 │ String │
│ ├─────┼───────┼─────────┼───────┼────────┤
│ │ 1   │ 2     │ 2.0     │ 2     │ John   │
│ │ 2   │ 2     │ 2.0     │ 2     │ Sally  │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ df1 = DataFrame(a=[1,2,3], b=[1.,2.,3.])
│ df2 = DataFrame(c=[2,4,2], d=["John", "Jim","Sally"])
│ 
│ x = df1 |> @join(df2, _.a, _.c, {_.a, _.b, __.c, __.d}) |> DataFrame
│ 
│ println(x)
│ 
│ Evaluated output:
│ 
│ 2×4 DataFrame
│  Row │ a      b        c      d
│      │ Int64  Float64  Int64  String
│ ─────┼───────────────────────────────
│    1 │     2      2.0      2  John
│    2 │     2      2.0      2  Sally
│ 
│ Expected output:
│ 
│ 2×4 DataFrame
│ │ Row │ a     │ b       │ c     │ d      │
│ │     │ Int64 │ Float64 │ Int64 │ String │
│ ├─────┼───────┼─────────┼───────┼────────┤
│ │ 1   │ 2     │ 2.0     │ 2     │ John   │
│ │ 2   │ 2     │ 2.0     │ 2     │ Sally  │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×4 DataFrame
│    │ DataFrame
│     Row │ a     │ b       │ c     a      b        c      d
│         │ d      │
│    Int64  Float64  Int64  String
│    ─────┼───────────────────────────────
│       1 │     │ Int64 │ Float64 │ Int64 │ String │
│    ├─────┼───────┼─────────┼───────┼────────┤
│    │ 1   │ 2     │ 2.0     │ 2     │ John   │
│    │ 2   │ 2     │ 2.0     │ 2     │ Sally  │2      2.0      2  John
│       2 │     2      2.0      2  Sally
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:197-217
│ 
│ ```jldoctest
│ using DataFrames, Query
│ 
│ source = Dict(:a=>[1,2,3], :b=>[4,5])
│ 
│ q = source |> @mapmany(_.second, {Key=_.first, Value=__}) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 5×2 DataFrame
│ │ Row │ Key    │ Value │
│ │     │ Symbol │ Int64 │
│ ├─────┼────────┼───────┤
│ │ 1   │ a      │ 1     │
│ │ 2   │ a      │ 2     │
│ │ 3   │ a      │ 3     │
│ │ 4   │ b      │ 4     │
│ │ 5   │ b      │ 5     │
│ ```
│ 
│ Subexpression:
│ 
│ using DataFrames, Query
│ 
│ source = Dict(:a=>[1,2,3], :b=>[4,5])
│ 
│ q = source |> @mapmany(_.second, {Key=_.first, Value=__}) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 5×2 DataFrame
│  Row │ Key     Value
│      │ Symbol  Int64
│ ─────┼───────────────
│    1 │ a           1
│    2 │ a           2
│    3 │ a           3
│    4 │ b           4
│    5 │ b           5
│ 
│ Expected output:
│ 
│ 5×2 DataFrame
│ │ Row │ Key    │ Value │
│ │     │ Symbol │ Int64 │
│ ├─────┼────────┼───────┤
│ │ 1   │ a      │ 1     │
│ │ 2   │ a      │ 2     │
│ │ 3   │ a      │ 3     │
│ │ 4   │ b      │ 4     │
│ │ 5   │ b      │ 5     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    5×2 DataFrame
│    │ DataFrame
│     Row │ Key    │ Value │
│    │     │ Symbol │ Int64 │
│    ├─────┼────────┼───────┤
│    │ 1   │ a      │ 1     │
│    │ 2   │ a      │ 2     │
│    │ 3   │ a      │ 3     │
│    Key     Value
│         │ 4   Symbol  Int64
│    ─────┼───────────────
│       1 │ b      a           1
│       2 │ 4     │
│    a           2
│       3 │ 5   a           3
│       4 │ b      b           4
│       5 │ 5     │b           5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:283-301
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q1 = df |> @select(2:3, occursin("ui"), -:amount) |> DataFrame
│ 
│ println(q1)
│ 
│ # output
│ 
│ 3×2 DataFrame
│ │ Row │ price   │ fruit  │
│ │     │ Float64 │ String │
│ ├─────┼─────────┼────────┤
│ │ 1   │ 1.2     │ Apple  │
│ │ 2   │ 2.0     │ Banana │
│ │ 3   │ 0.4     │ Cherry │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q1 = df |> @select(2:3, occursin("ui"), -:amount) |> DataFrame
│ 
│ println(q1)
│ 
│ Evaluated output:
│ 
│ 3×2 DataFrame
│  Row │ price    fruit
│      │ Float64  String
│ ─────┼─────────────────
│    1 │     1.2  Apple
│    2 │     2.0  Banana
│    3 │     0.4  Cherry
│ 
│ Expected output:
│ 
│ 3×2 DataFrame
│ │ Row │ price   │ fruit  │
│ │     │ Float64 │ String │
│ ├─────┼─────────┼────────┤
│ │ 1   │ 1.2     │ Apple  │
│ │ 2   │ 2.0     │ Banana │
│ │ 3   │ 0.4     │ Cherry │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×2 DataFrame
│    │ DataFrame
│     Row │ price   price    fruit
│         │ fruit  │
│    Float64  String
│    ─────┼─────────────────
│       1 │     │ Float64 │ String │
│    ├─────┼─────────┼────────┤
│    │ 1   │ 1.2     │ Apple  │
│    │ 2   │ 2.0     │ Banana │
│    │ 3   │ 0.4     │ Cherry │1.2  Apple
│       2 │     2.0  Banana
│       3 │     0.4  Cherry
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:303-321
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q2 = df |> @select(!endswith("t"), 1) |> DataFrame
│ 
│ println(q2)
│ 
│ # output
│ 
│ 3×3 DataFrame
│ │ Row │ price   │ isyellow │ fruit  │
│ │     │ Float64 │ Bool     │ String │
│ ├─────┼─────────┼──────────┼────────┤
│ │ 1   │ 1.2     │ 0        │ Apple  │
│ │ 2   │ 2.0     │ 1        │ Banana │
│ │ 3   │ 0.4     │ 0        │ Cherry │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q2 = df |> @select(!endswith("t"), 1) |> DataFrame
│ 
│ println(q2)
│ 
│ Evaluated output:
│ 
│ 3×3 DataFrame
│  Row │ price    isyellow  fruit
│      │ Float64  Bool      String
│ ─────┼───────────────────────────
│    1 │     1.2     false  Apple
│    2 │     2.0      true  Banana
│    3 │     0.4     false  Cherry
│ 
│ Expected output:
│ 
│ 3×3 DataFrame
│ │ Row │ price   │ isyellow │ fruit  │
│ │     │ Float64 │ Bool     │ String │
│ ├─────┼─────────┼──────────┼────────┤
│ │ 1   │ 1.2     │ 0        │ Apple  │
│ │ 2   │ 2.0     │ 1        │ Banana │
│ │ 3   │ 0.4     │ 0        │ Cherry │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×3 DataFrame
│    │ DataFrame
│     Row │ price   │ isyellow price    isyellow  fruit
│         │ fruit  │
│    Float64  Bool      String
│    ─────┼───────────────────────────
│       1 │     │ Float64 │ Bool     │ String │
│    ├─────┼─────────┼──────────┼────────┤
│    │ 1   │ 1.2     │ 0        │ Apple  │
│    │ 2   │ 2.0     │ 1        │ Banana │
│    │ 3   │ false  Apple
│       2 │     2.0      true  Banana
│       3 │     0.4     │ 0        │ Cherry │false  Cherry
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:327-345
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q = df |> @rename(:fruit => :food, :price => :cost, :food => :name) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 3×4 DataFrame
│ │ Row │ name   │ amount │ cost    │ isyellow │
│ │     │ String │ Int64  │ Float64 │ Bool     │
│ ├─────┼────────┼────────┼─────────┼──────────┤
│ │ 1   │ Apple  │ 2      │ 1.2     │ 0        │
│ │ 2   │ Banana │ 6      │ 2.0     │ 1        │
│ │ 3   │ Cherry │ 1000   │ 0.4     │ 0        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q = df |> @rename(:fruit => :food, :price => :cost, :food => :name) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 3×4 DataFrame
│  Row │ name    amount  cost     isyellow
│      │ String  Int64   Float64  Bool
│ ─────┼───────────────────────────────────
│    1 │ Apple        2      1.2     false
│    2 │ Banana       6      2.0      true
│    3 │ Cherry    1000      0.4     false
│ 
│ Expected output:
│ 
│ 3×4 DataFrame
│ │ Row │ name   │ amount │ cost    │ isyellow │
│ │     │ String │ Int64  │ Float64 │ Bool     │
│ ├─────┼────────┼────────┼─────────┼──────────┤
│ │ 1   │ Apple  │ 2      │ 1.2     │ 0        │
│ │ 2   │ Banana │ 6      │ 2.0     │ 1        │
│ │ 3   │ Cherry │ 1000   │ 0.4     │ 0        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×4 DataFrame
│    │ DataFrame
│     Row │ name   │ amount │ cost    │ isyellow │
│    │     │ String │ Int64  │ Float64 │ Bool     │
│    ├─────┼────────┼────────┼─────────┼──────────┤
│    │ 1   name    amount  cost     isyellow
│         │ Apple  String  Int64   Float64  Bool
│    ─────┼───────────────────────────────────
│       1 │ Apple        2      │ 1.2     │ 0        │
│    │ 2   │ Banana false
│       2 │ Banana       6      │ 2.0     │ 1        │
│    │ 3   │ Cherry │ 1000   2.0      true
│       3 │ Cherry    1000      0.4     │ 0        │false
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:349-367
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q = df |> @mutate(price = 2 * _.price + _.amount, isyellow = _.fruit == "Apple") |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 3×4 DataFrame
│ │ Row │ fruit  │ amount │ price   │ isyellow │
│ │     │ String │ Int64  │ Float64 │ Bool     │
│ ├─────┼────────┼────────┼─────────┼──────────┤
│ │ 1   │ Apple  │ 2      │ 4.4     │ 1        │
│ │ 2   │ Banana │ 6      │ 10.0    │ 0        │
│ │ 3   │ Cherry │ 1000   │ 1000.8  │ 0        │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(fruit=["Apple","Banana","Cherry"],amount=[2,6,1000],price=[1.2,2.0,0.4],isyellow=[false,true,false])
│ 
│ q = df |> @mutate(price = 2 * _.price + _.amount, isyellow = _.fruit == "Apple") |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 3×4 DataFrame
│  Row │ fruit   amount  price    isyellow
│      │ String  Int64   Float64  Bool
│ ─────┼───────────────────────────────────
│    1 │ Apple        2      4.4      true
│    2 │ Banana       6     10.0     false
│    3 │ Cherry    1000   1000.8     false
│ 
│ Expected output:
│ 
│ 3×4 DataFrame
│ │ Row │ fruit  │ amount │ price   │ isyellow │
│ │     │ String │ Int64  │ Float64 │ Bool     │
│ ├─────┼────────┼────────┼─────────┼──────────┤
│ │ 1   │ Apple  │ 2      │ 4.4     │ 1        │
│ │ 2   │ Banana │ 6      │ 10.0    │ 0        │
│ │ 3   │ Cherry │ 1000   │ 1000.8  │ 0        │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×4 DataFrame
│    │ DataFrame
│     Row │ fruit  │ amount │ price   │ isyellow │
│    │     │ String │ Int64  │ Float64 │ Bool     │
│    ├─────┼────────┼────────┼─────────┼──────────┤
│    │ 1   fruit   amount  price    isyellow
│         │ Apple  String  Int64   Float64  Bool
│    ─────┼───────────────────────────────────
│       1 │ Apple        2      │ 4.4     │ 1        │
│    │ 2   │ Banana │ 6      │ 10.0    │ 0        │
│    │ 3   4.4      true
│       2 │ Cherry Banana       6     10.0     false
│       3 │ Cherry    1000   │ 1000.8  │ 0        │1000.8     false
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:375-392
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,3], b=[4,missing,5])
│ 
│ q = df |> @dropna() |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 5     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,3], b=[4,missing,5])
│ 
│ q = df |> @dropna() |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      4
│    2 │     3      5
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 5     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 4     │
│    │ 2   │ 3     │ 5     │1      4
│       2 │     3      5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:396-413
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,3], b=[4,missing,5])
│ 
│ q = df |> @dropna(:b) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 5     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,3], b=[4,missing,5])
│ 
│ q = df |> @dropna(:b) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      4
│    2 │     3      5
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 5     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 4     │
│    │ 2   │ 3     │ 5     │1      4
│       2 │     3      5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:417-434
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,3], b=[4,missing,5])
│ 
│ q = df |> @dropna(:b, :a) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 5     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,3], b=[4,missing,5])
│ 
│ q = df |> @dropna(:b, :a) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      4
│    2 │     3      5
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 5     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 4     │
│    │ 2   │ 3     │ 5     │1      4
│       2 │     3      5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:442-459
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,missing,3], b=[4,5,6])
│ 
│ q = df |> @filter(!isna(_.a)) |> @dissallowna() |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 6     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,missing,3], b=[4,5,6])
│ 
│ q = df |> @filter(!isna(_.a)) |> @dissallowna() |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      4
│    2 │     3      6
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 3     │ 6     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 4     │
│    │ 2   │ 3     │ 6     │1      4
│       2 │     3      6
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:463-480
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,missing], b=[4,missing,5])
│ 
│ q = df |> @filter(!isna(_.b)) |> @dissallowna(:b) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 2×2 DataFrame
│ │ Row │ a       │ b     │
│ │     │ Int64⍰  │ Int64 │
│ ├─────┼─────────┼───────┤
│ │ 1   │ 1       │ 4     │
│ │ 2   │ missing │ 5     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,missing], b=[4,missing,5])
│ 
│ q = df |> @filter(!isna(_.b)) |> @dissallowna(:b) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 2×2 DataFrame
│  Row │ a        b
│      │ Int64?   Int64
│ ─────┼────────────────
│    1 │       1      4
│    2 │ missing      5
│ 
│ Expected output:
│ 
│ 2×2 DataFrame
│ │ Row │ a       │ b     │
│ │     │ Int64⍰  │ Int64 │
│ ├─────┼─────────┼───────┤
│ │ 1   │ 1       │ 4     │
│ │ 2   │ missing │ 5     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    2×2 DataFrame
│    │ DataFrame
│     Row │ a       │ b     │
│    │     │ Int64⍰  │ Int64 │
│    ├─────┼─────────┼───────┤
│    │ 1   │ 1       │ 4     │
│    │ 2   a        b
│         │ missing Int64?   Int64
│    ─────┼────────────────
│       1 │       1      4
│       2 │ 5     │missing      5
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:492-510
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,missing,3], b=[4,5,6])
│ 
│ q = df |> @replacena(0) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 3×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 0     │ 5     │
│ │ 3   │ 3     │ 6     │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,missing,3], b=[4,5,6])
│ 
│ q = df |> @replacena(0) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 3×2 DataFrame
│  Row │ a      b
│      │ Int64  Int64
│ ─────┼──────────────
│    1 │     1      4
│    2 │     0      5
│    3 │     3      6
│ 
│ Expected output:
│ 
│ 3×2 DataFrame
│ │ Row │ a     │ b     │
│ │     │ Int64 │ Int64 │
│ ├─────┼───────┼───────┤
│ │ 1   │ 1     │ 4     │
│ │ 2   │ 0     │ 5     │
│ │ 3   │ 3     │ 6     │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b     │
│    Int64  Int64
│    ─────┼──────────────
│       1 │     │ Int64 │ Int64 │
│    ├─────┼───────┼───────┤
│    │ 1   │ 1     │ 4     │
│    │ 2   │ 0     │ 5     │
│    │ 3   │ 3     │ 6     │1      4
│       2 │     0      5
│       3 │     3      6
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/Query/85Sw7/docs/src/standalonequerycommands.md:514-532
│ 
│ ```jldoctest
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,missing], b=["One",missing,"Three"])
│ 
│ q = df |> @replacena(:b=>"Unknown", :a=>0) |> DataFrame
│ 
│ println(q)
│ 
│ # output
│ 
│ 3×2 DataFrame
│ │ Row │ a     │ b       │
│ │     │ Int64 │ String  │
│ ├─────┼───────┼─────────┤
│ │ 1   │ 1     │ One     │
│ │ 2   │ 2     │ Unknown │
│ │ 3   │ 0     │ Three   │
│ ```
│ 
│ Subexpression:
│ 
│ using Query, DataFrames
│ 
│ df = DataFrame(a=[1,2,missing], b=["One",missing,"Three"])
│ 
│ q = df |> @replacena(:b=>"Unknown", :a=>0) |> DataFrame
│ 
│ println(q)
│ 
│ Evaluated output:
│ 
│ 3×2 DataFrame
│  Row │ a      b
│      │ Int64  String
│ ─────┼────────────────
│    1 │     1  One
│    2 │     2  Unknown
│    3 │     0  Three
│ 
│ Expected output:
│ 
│ 3×2 DataFrame
│ │ Row │ a     │ b       │
│ │     │ Int64 │ String  │
│ ├─────┼───────┼─────────┤
│ │ 1   │ 1     │ One     │
│ │ 2   │ 2     │ Unknown │
│ │ 3   │ 0     │ Three   │
│ 
│   diff =
│    Warning: Diff output requires color.
│    3×2 DataFrame
│    │ DataFrame
│     Row │ a     a      b
│         │ b       │
│    Int64  String
│    ─────┼────────────────
│       1 │     │ Int64 │ String  │
│    ├─────┼───────┼─────────┤
│    │ 1   │ 1     │ One     │
│    │ 2   │ 2     │ Unknown │
│    │ 3   │ 0     │ Three   │1  One
│       2 │     2  Unknown
│       3 │     0  Three
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Builder.jl:217
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Utilities/Selectors.jl:170
│     [4] #2 at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:249 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{6,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules, :doctestfilters),Tuple{String,String,String,Symbol,Array{Module,1},Array{Regex,1}}}}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:248
│     [7] (::Documenter.var"#all_doctests#35"{Bool,Array{Regex,1},Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:813
│     [8] macro expansion at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830 [inlined]
│     [9] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
│     [10] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String, doctestfilters::Array{Regex,1}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830
│     [11] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:769
│     [12] doctest(::Module) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:756
│     [13] top-level scope at /home/pkgeval/.julia/packages/Query/85Sw7/test/runtests.jl:501
│     [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
│     [15] top-level scope at /home/pkgeval/.julia/packages/Query/85Sw7/test/runtests.jl:15
│     [16] include(::String) at ./client.jl:457
│     [17] top-level scope at none:6
│     [18] eval(::Module, ::Any) at ./boot.jl:331
│     [19] exec_options(::Base.JLOptions) at ./client.jl:272
│     [20] _start() at ./client.jl:506
└ @ Documenter ~/.julia/packages/Documenter/FuXcO/src/Documenter.jl:823
Doctests: Query: Test Failed at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
 [3] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String, doctestfilters::Array{Regex,1}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830
Test Summary:            | Pass  Fail  Total
Queries                  |  261     1    262
  Utilities              |   17           17
  shift_access!          |    2            2
  a.b Syntax (dplyr API) |    8            8
  Pipe Syntax            |    4            4
  Select Macro           |   13           13
  Rename Macro           |    6            6
  Mutate Macro           |    3            3
  @dropna                |    6            6
  @replacena             |    6            6
  @dissallowna           |    4            4
  Doctests: Query        |          1      1
ERROR: LoadError: Some tests did not pass: 261 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Query/85Sw7/test/runtests.jl:13

PkgEval failed: Package Query errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T21:35:17.335
CPU usage: 162.64s (153.63s user, 9.25s kernel)

Network usage:
- eth0: 7.423 MiB received, 240.927 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":24,"op":"Write","minor":0},{"major":259,"value":19,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":24,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":24,"op":"Write","minor":2},{"major":253,"value":19,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":24,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":139264,"op":"Write","minor":0},{"major":259,"value":106496,"op":"Sync","minor":0},{"major":259,"value":32768,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":139264,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":139264,"op":"Write","minor":2},{"major":253,"value":106496,"op":"Sync","minor":2},{"major":253,"value":32768,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":139264,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":347471872,"max_usage":1620271104,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":200560640,"inactive_file":135168,"inactive_anon":89210880,"total_pgfault":3595944,"total_cache":115011584,"total_rss_huge":0,"total_active_anon":226271232,"total_pgmajfault":0,"pgpgin":2221956,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":270336,"pgpgout":2144893,"hierarchical_memsw_limit":0,"cache":115011584,"active_file":135168,"pgfault":3595944,"total_mapped_file":0,"total_pgpgout":2144893,"total_writeback":270336,"rss":200560640,"unevictable":0,"total_inactive_anon":89210880,"total_pgpgin":2221956,"active_anon":226271232,"total_active_file":135168},"limit":540965302272},"name":"/Query-5Wo1B3UH","networks":{"eth0":{"rx_bytes":7783105,"rx_packets":1879,"tx_packets":2056,"tx_bytes":246709,"tx_dropped":0,"rx_dropped":6,"tx_errors":0,"rx_errors":0}},"id":"3b3fe4b600317d36c30de52ca50aaa2caf7a691a14a266c336a71553a135ef8b","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":6009727924522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":153630000000,"usage_in_kernelmode":9250000000,"total_usage":162636829181,"percpu_usage":[0,0,0,0,162636810731,0,0,18450,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T21:35:17.338120814Z"}