################################################################################
# PackageCompiler set-up: 2020-12-03T10:32:45.196
#

Julia Version 1.5.3
Commit 788b2c77c1 (2020-11-09 13:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_DEPOT_PATH = /home/pkgeval/.julia:/usr/local/share/julia



################################################################################
# Installation: 2020-12-03T10:32:47.96
#

  Resolving package versions...
  Installed REPLTreeViews ─── v0.1.0
  Installed TreeViews ─────── v0.3.0
  Installed IterTools ─────── v1.3.0
  Installed PackageCompiler ─ v1.2.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b87118b] + PackageCompiler v1.2.3
  [00000000] + REPLTreeViews v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [c8e1da08] + IterTools v1.3.0
  [9b87118b] + PackageCompiler v1.2.3
  [00000000] + REPLTreeViews v0.1.0
  [a2a6695c] + TreeViews v0.3.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Compiling: 2020-12-03T10:32:51.172
#


┌ Warning: Package REPLTreeViews does not have REPL in its dependencies:
│ - If you have REPLTreeViews checked out for development and have
│   added REPL as a dependency but haven't updated your primary
│   environment's manifest file, try `Pkg.resolve()`.
│ - Otherwise you may need to report an issue with REPLTreeViews
└ Loading REPL into REPLTreeViews from project dependency, future warnings for REPLTreeViews are suppressed.
[ Info: PackageCompiler: creating system image object file, this might take a while...
ERROR: LoadError: LoadError: ArgumentError: Package REPLTreeViews does not have REPL in its dependencies:
- If you have REPLTreeViews checked out for development and have
  added REPL as a dependency but haven't updated your primary
  environment's manifest file, try `Pkg.resolve()`.
- Otherwise you may need to report an issue with REPLTreeViews
Stacktrace:
 [1] require(::Module, ::Symbol) at ./loading.jl:906
 [2] include(::Function, ::Module, ::String) at ./Base.jl:380
 [3] include at ./Base.jl:368 [inlined]
 [4] include(::String) at /home/pkgeval/.julia/packages/REPLTreeViews/gEB1z/src/REPLTreeViews.jl:1
 [5] top-level scope at /home/pkgeval/.julia/packages/REPLTreeViews/gEB1z/src/REPLTreeViews.jl:25
 [6] include(::Function, ::Module, ::String) at ./Base.jl:380
 [7] include at ./Base.jl:368 [inlined]
 [8] _require(::Base.PkgId) at ./loading.jl:1059
 [9] require(::Base.PkgId) at ./loading.jl:928
 [10] require(::Module, ::Symbol) at ./loading.jl:923
in expression starting at /home/pkgeval/.julia/packages/REPLTreeViews/gEB1z/src/renderer.jl:4
in expression starting at /home/pkgeval/.julia/packages/REPLTreeViews/gEB1z/src/REPLTreeViews.jl:25
ERROR: failed process: Process(`/opt/julia/bin/julia --color=yes --startup-file=no --cpu-target=native --sysimage=/opt/julia/lib/julia/sys.so --project=/home/pkgeval/.julia/environments/v1.5 --output-o=/tmp/jl_w5W6PJ.o -e 'Base.reinit_stdio()
@eval Sys BINDIR = ccall(:jl_get_julia_bindir, Any, ())::String
Base.init_load_path()
Base.init_depot_path()
import REPLTreeViews
# This @eval prevents symbols from being put into Main
@eval Module() begin
    PrecompileStagingArea = Module()
    for (_pkgid, _mod) in Base.loaded_modules
        if !(_pkgid.name in ("Main", "Core", "Base"))
            eval(PrecompileStagingArea, :(const $(Symbol(_mod)) = $_mod))
        end
    end
    precompile_statements = String[]
        append!(precompile_statements, readlines("/tmp/jl_aWGayH"))

    for statement in sort(precompile_statements)
        # println(statement)
        # The compiler has problem caching signatures with \`Vararg{?, N}\`. Replacing
        # N with a large number seems to work around it.
        statement = replace(statement, r"Vararg{(.*?), N} where N" => s"Vararg{\1, 100}")
        try
            Base.include_string(PrecompileStagingArea, statement)
        catch
            # See julia issue #28808
            @debug "failed to execute $statement"
        end
    end
end # module
empty!(LOAD_PATH)
empty!(DEPOT_PATH)
'`, ProcessExited(1)) [1]

Stacktrace:
 [1] pipeline_error at ./process.jl:525 [inlined]
 [2] run(::Cmd; wait::Bool) at ./process.jl:440
 [3] run at ./process.jl:438 [inlined]
 [4] create_sysimg_object_file(::String, ::Array{String,1}; project::String, base_sysimage::String, precompile_execution_file::Array{String,1}, precompile_statements_file::Array{String,1}, cpu_target::String, script::Nothing, isapp::Bool) at /home/pkgeval/.julia/packages/PackageCompiler/AerNj/src/PackageCompiler.jl:295
 [5] create_sysimage(::Symbol; sysimage_path::String, project::String, precompile_execution_file::Array{String,1}, precompile_statements_file::Array{String,1}, incremental::Bool, filter_stdlibs::Bool, replace_default::Bool, cpu_target::String, script::Nothing, base_sysimage::Nothing, isapp::Bool) at /home/pkgeval/.julia/packages/PackageCompiler/AerNj/src/PackageCompiler.jl:426
 [6] top-level scope at none:21

