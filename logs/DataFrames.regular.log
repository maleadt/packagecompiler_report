################################################################################
# PkgEval set-up: 2021-01-11T20:07:32.413
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T20:07:34.194
#

 Installing known registries into `~/.julia`
#########################################                                 58.0%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed Reexport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.2.0
  Installed TableTraits â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
  Installed DataAPI â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.0
  Installed Tables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.2
  Installed CategoricalArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.9.0
  Installed DataStructures â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.18.8
  Installed OrderedCollections â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.3.2
  Installed DataFrames â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.22.2
  Installed InvertedIndices â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
  Installed DataValueInterfaces â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.0
  Installed Missings â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.4
  Installed PooledArrays â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.5.3
  Installed StructTypes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.2.1
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.1
  Installed Crayons â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v4.0.4
  Installed Formatting â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.4.2
  Installed IteratorInterfaceExtensions â”€ v1.0.0
  Installed SortingAlgorithms â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.3.1
  Installed Compat â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v3.25.0
  Installed PrettyTables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.10.1
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.15
Updating `~/.julia/environments/v1.5/Project.toml`
  [a93c6f00] + DataFrames v0.22.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.9.0
  [34da2185] + Compat v3.25.0
  [a8cc5b0e] + Crayons v4.0.4
  [9a962f9c] + DataAPI v1.4.0
  [a93c6f00] + DataFrames v0.22.2
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [59287772] + Formatting v0.4.2
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.2
  [69de0a69] + Parsers v1.0.15
  [2dfb63ee] + PooledArrays v0.5.3
  [08abe8d2] + PrettyTables v0.10.1
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [856f2bd8] + StructTypes v1.2.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.2.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2021-01-11T20:07:39.467
#

    Testing DataFrames
Status `/tmp/jl_Em2aqR/Project.toml`
  [324d7699] CategoricalArrays v0.9.0
  [34da2185] Compat v3.25.0
  [9a962f9c] DataAPI v1.4.0
  [a93c6f00] DataFrames v0.22.2
  [864edb3b] DataStructures v0.18.8
  [e7dc6d0d] DataValues v0.4.13
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [e1d29d7a] Missings v0.4.4
  [2dfb63ee] PooledArrays v0.5.3
  [08abe8d2] PrettyTables v0.10.1
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.2.2
  [ade2ca70] Dates
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Status `/tmp/jl_Em2aqR/Manifest.toml`
  [324d7699] CategoricalArrays v0.9.0
  [34da2185] Compat v3.25.0
  [a8cc5b0e] Crayons v4.0.4
  [9a962f9c] DataAPI v1.4.0
  [a93c6f00] DataFrames v0.22.2
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [59287772] Formatting v0.4.2
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.2
  [69de0a69] Parsers v1.0.15
  [2dfb63ee] PooledArrays v0.5.3
  [08abe8d2] PrettyTables v0.10.1
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [856f2bd8] StructTypes v1.2.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.2.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running tests:
Test Summary: | Pass  Total
make_unique   |    3      3
Test Summary: | Pass  Total
repeat count  |    5      5
Test Summary:      | Pass  Total
repeat inner_outer |    8      8
Test Summary: | Pass  Total
repeat! count |    8      8
Test Summary:       | Pass  Total
repeat! inner_outer |   11     11
Test Summary: | Pass  Total
funname       |    1      1
	[1m[32mPASSED[0m: utils.jl
Test Summary: | Pass  Total
hcat          |   10     10
Test Summary: | Pass  Total
hcat: copying |   26     26
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
Test Summary:          | Pass  Total
hcat ::AbstractVectors |   11     11
Test Summary:  | Pass  Total
hcat: copycols |   76     76
Test Summary: | Pass  Total
vcat          |   21     21
Test Summary: | Pass  Total
vcat copy     |    2      2
Test Summary: | Pass  Total
vcat >2 args  |    4      4
Test Summary:       | Pass  Total
vcat mixed coltypes |   19     19
Test Summary:     | Pass  Total
vcat out of order |   21     21
Test Summary:         | Pass  Total
vcat with cols=:union |    6      6
Test Summary:             | Pass  Total
vcat with cols=:intersect |    6      6
Test Summary:          | Pass  Total
vcat with cols::Vector |   30     30
Test Summary:          | Pass  Total
vcat thrown exceptions |   32     32
Test Summary:  | Pass  Total
vcat with view |    1      1
	[1m[32mPASSED[0m: cat.jl
Test Summary: | Pass  Total
constructors  |   40     40
Test Summary:                 | Pass  Total
completecases and dropmissing |  236    236
Test Summary:                          | Pass  Total
dropmissing and unique view kwarg test |   16     16
Test Summary: | Pass  Total
merge         |   19     19
Test Summary: | Pass  Total
join tests    |    3      3
Test Summary:                                     | Pass  Total
nonunique, nonunique, unique! with extra argument |   41     41
Test Summary:          | Pass  Total
filter() and filter!() |   46     46
Test Summary:          | Pass  Total
filter view kwarg test |   56     56
Test Summary:                        | Pass  Total
filter and filter! with SubDataFrame |    4      4
Test Summary:                   | Pass  Total
filter and filter! with AsTable |    4      4
Test Summary:                   | Pass  Total
empty arg to filter and filter! |   24     24
Test Summary:   | Pass  Total
names with cols |   25     25
Test Summary:    | Pass  Total
empty and empty! |   10     10
	[1m[32mPASSED[0m: data.jl
Test Summary:  | Pass  Total
Index indexing |   57     57
Test Summary: | Pass  Total
rename!       |   19     19
Test Summary: | Pass  Total
SubIndex      |   74     74
Test Summary:     | Pass  Total
selector mutation |   16     16
Test Summary:  | Pass  Total
fuzzy matching |   12     12
Test Summary:  | Pass  Total
Regex indexing |   52     52
Test Summary: | Pass  Total
Not indexing  |   36     36
Test Summary:    | Pass  Total
Between indexing |   36     36
Test Summary: | Pass  Total
All indexing  |    2      2
Test Summary: | Pass  Total
Cols indexing |   43     43
Test Summary: | Pass  Total
views         |   11     11
	[1m[32mPASSED[0m: index.jl
Test Summary:                |  Pass  Total
randomized tests for rename! | 14295  14295
Test Summary:            | Pass  Total
additional rename! tests | 6610   6610
Test Summary:              | Pass  Total
rename with integer source |   29     29
Test Summary: | Pass  Total
equality      |    9      9
Test Summary: | Pass  Total
copying       |   24     24
Test Summary:      | Pass  Total
similar / missings |    2      2
Test Summary: | Pass  Total
hasproperty   |    5      5
Test Summary: | Pass  Total
insertcols!   |   95     95
Test Summary:           | Pass  Total
unsupported insertcols! |    1      1
Test Summary:          | Pass  Total
DataFrame constructors |    7      7
Test Summary:  | Pass  Total
push!(df, row) |   69     69
Test Summary: | Pass  Total
delete!       |   44     44
Test Summary: | Pass  Total
describe      |   11     11
Test Summary: | Pass  Total
append!       |   35     35
Test Summary:           | Pass  Total
append! default options |   11     11
Test Summary:            | Pass  Total
append! advanced options |  174    174
Test Summary:               | Pass  Total
new append! and push! tests |   30     30
Test Summary: | Pass  Total
rename        |   97     97
Test Summary:             | Pass  Total
flexible rename arguments |   30     30
Test Summary: | Pass  Total
size          |    5      5
Test Summary:        | Pass  Total
first, last and only |   11     11
Test Summary:      | Pass  Total
column conversions |  172    172
Test Summary:        | Pass  Total
test disallowmissing |  730    730
Test Summary:     | Pass  Total
test allowmissing |  360    360
Test Summary: | Pass  Total
similar       |    8      8
Test Summary:                | Pass  Total
passing range to a DataFrame |    1      1
Test Summary:                | Pass  Total
test getindex using ! syntax |   15     15
Test Summary:                | Pass  Total
test corner case of getindex |    2      2
Test Summary:             | Pass  Total
empty data frame getindex |    9      9
Test Summary:               | Pass  Total
handling of end in indexing |   22     22
Test Summary:        | Pass  Total
aliasing in indexing |    5      5
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |   10     10
Test Summary:          | Pass  Total
duplicate column names |    1      1
Test Summary:         | Pass  Total
parent, size and axes |   11     11
Test Summary:                | Pass  Total
0-row DataFrame corner cases |    4      4
Test Summary:         |
And and Between tests | No tests
Test Summary:                   | Pass  Total
vcat and push! with :orderequal |   15     15
Test Summary:      | Pass  Total
push! with :subset |   18     18
Test Summary:         | Pass  Total
push! with :intersect |   12     12
Test Summary:              | Pass  Total
push!(df, row) with :union |   56     56
Test Summary:                       | Pass  Total
push!(df, row) with promote options |   22     22
Test Summary:                                    | Pass  Total
push! with :setequal and wrong number of entries |    2      2
Test Summary:  | Pass  Total
names for Type |    6      6
	[1m[32mPASSED[0m: dataframe.jl
Test Summary: | Pass  Total
select! Not   |   13     13
Test Summary: | Pass  Total
select Not    |   58     58
Test Summary:              | Pass  Total
select Not on SubDataFrame |   70     70
Test Summary: | Pass  Total
select!       |   35     35
Test Summary: | Pass  Total
select        |   66     66
Test Summary:          | Pass  Total
select on SubDataFrame |   78     78
Test Summary:          | Pass  Total
select! on all columns |   21     21
Test Summary:                                     | Pass  Total
select and select! with multiple selectors passed |   22     22
Test Summary:               | Pass  Total
select and select! renaming |   23     23
Test Summary:                          | Pass  Total
select and select! many columns naming |   24     24
Test Summary:                                | Pass  Total
select and select! many different transforms |   25     25
Test Summary:  | Pass  Total
nrow in select |   24     24
Test Summary:                             | Pass  Total
select and select! reserved return values |   35     35
Test Summary:                      | Pass  Total
select and select! empty selection |   16     16
Test Summary:            | Pass  Total
wrong selection patterns |    4      4
Test Summary:                 | Pass  Total
select and select! duplicates |   15     15
Test Summary:          | Pass  Total
SubDataFrame selection |   17     17
Test Summary:       | Pass  Total
pseudo-broadcasting |  140    140
Test Summary:          | Pass  Total
copycols special cases |   11     11
Test Summary: | Pass  Total
empty select  |    5      5
Test Summary:            | Pass  Total
transform and transform! |   30     30
Test Summary:    | Pass  Total
vectors of pairs |   18     18
Test Summary: | Pass  Total
AsTable tests |   16     16
Test Summary:                      | Pass  Total
make sure select! is safe on error |    3      3
Test Summary:             | Pass  Total
combine AbstractDataFrame |   23     23
Test Summary:                          | Pass  Total
select and transform AbstractDataFrame |   30     30
Test Summary:                            | Pass  Total
select! and transform! AbstractDataFrame |   12     12
Test Summary:          | Pass  Total
renamecols=false tests |   13     13
Test Summary:                                             | Pass  Total
transformation function with a function as first argument |  153    153
Test Summary:                                                | Pass  Total
transformation function with multiple columns as destination |  156    156
Test Summary:                               | Pass  Total
check correctness of duplicate column names |   14     14
Test Summary: | Pass  Total
empty ByRow   |   54     54
	[1m[32mPASSED[0m: select.jl
Test Summary:         | Pass  Total
the output of unstack |   27     27
Test Summary:                               | Pass  Total
unstack promotion to support missing values |    8      8
Test Summary:                         | Pass  Total
duplicate entries in unstack warnings |    9      9
Test Summary:            | Pass  Total
missing values in colkey |   10     10
Test Summary:             | Pass  Total
stack-unstack correctness |    4      4
Test Summary: | Pass  Total
reshape       |   78     78
Test Summary:           | Pass  Total
column names duplicates |    5      5
Test Summary:         | Pass  Total
flatten single column |   13     13
Test Summary:            | Pass  Total
flatten multiple columns |   13     13
Test Summary:          | Pass  Total
stack categorical test |   31     31
Test Summary:     | Pass  Total
test stack eltype |    8      8
Test Summary:            | Pass  Total
additional unstack tests |  205    205
Test Summary:                         | Pass  Total
additional unstack tests not sortable |    2      2
Test Summary: | Pass  Total
permutedims   |   32     32
	[1m[32mPASSED[0m: reshape.jl
Test Summary: | Pass  Total
constructors  |   28     28
Test Summary:          | Pass  Total
getindex and setindex! |   53     53
Test Summary: | Pass  Total
equality      |   17     17
Test Summary: | Pass  Total
isless        |   15     15
Test Summary: | Pass  Total
hashing       |    6      6
Test Summary: | Pass  Total
grouping      |    6      6
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |    6      6
Test Summary:                    | Pass  Total
keys, values and iteration, size |   31     31
Test Summary:           | Pass  Total
convert, copy and merge |   24     24
Test Summary:            | Pass  Total
parent and parentindices |   34     34
Test Summary:         | Pass  Total
iteration and collect |   10     10
Test Summary:    | Pass  Total
duplicate column |    2      2
Test Summary:        | Pass  Total
conversion and push! |   15     15
Test Summary: | Pass  Total
show          |   11     11
Test Summary:     | Pass  Total
check Vector type |    1      1
Test Summary: | Pass  Total
DataFrameRow  |    2      2
Test Summary: | Pass  Total
rownumber     |   39     39
	[1m[32mPASSED[0m: dataframerow.jl
Test Summary: | Pass  Total
LaTeX export  |    4      4
Test Summary:     | Pass  Total
Huge LaTeX export |    2      2
Test Summary: | Pass  Total
HTML output   |   11     11
Test Summary:   | Pass  Total
limit attribute |    2      2
Test Summary: | Pass  Total
printtable    |    1      1
Test Summary:  | Pass  Total
csv/tsv output |    6      6
Test Summary:                          | Pass  Total
Markdown as text/plain and as text/csv |    2      2
Test Summary:    | Pass  Total
Markdown as HTML |    1      1
Test Summary:                     | Pass  Total
empty data frame and DataFrameRow |   12     12
Test Summary: | Pass  Total
consistency   |    8      8
Test Summary: | Pass  Total
summary tests |   16     16
Test Summary: | Pass  Total
eltypes tests |   18     18
improved printing of special types: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/io.jl:551
  Expression: str == "\e[1m9Ã—2 DataFrame\e[0m\n\e[1m Row \e[0mâ”‚\e[1m A     \e[0m\e[1m B                                 \e[0m\n\e[1m     \e[0mâ”‚\e[90m Int64 \e[0m\e[90m Any                               \e[0m\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚     1 \e[90m 9Ã—2 DataFrame                     \e[0m\n   2 â”‚     2 \e[90m 2-element DataFrameRow            \e[0m\n   3 â”‚     3 \e[90m 1Ã—2 SubDataFrame                  \e[0m\n   4 â”‚     4 \e[90m 9-element DataFrameRows           \e[0m\n   5 â”‚     5 \e[90m 2-element DataFrameColumns        \e[0m\n   6 â”‚     6 \e[90m GroupedDataFrame with 9 groups bâ€¦ \e[0m\n   7 â”‚     7 \e[90m missing                           \e[0m\n   8 â”‚     8 \e[90m                                   \e[0m\n   9 â”‚     9 \e[90m #undef                            \e[0m"
   Evaluated: "9Ã—2 DataFrame\n Row â”‚ A      B\n     â”‚ Int64  Any\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚     1  9Ã—2 DataFrame\n   2 â”‚     2  2-element DataFrameRow\n   3 â”‚     3  1Ã—2 SubDataFrame\n   4 â”‚     4  9-element DataFrameRows\n   5 â”‚     5  2-element DataFrameColumns\n   6 â”‚     6  GroupedDataFrame with 9 groups bâ€¦\n   7 â”‚     7  missing\n   8 â”‚     8\n   9 â”‚     9  #undef" == "\e[1m9Ã—2 DataFrame\e[0m\n\e[1m Row \e[0mâ”‚\e[1m A     \e[0m\e[1m B                                 \e[0m\n\e[1m     \e[0mâ”‚\e[90m Int64 \e[0m\e[90m Any                               \e[0m\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚     1 \e[90m 9Ã—2 DataFrame                     \e[0m\n   2 â”‚     2 \e[90m 2-element DataFrameRow            \e[0m\n   3 â”‚     3 \e[90m 1Ã—2 SubDataFrame                  \e[0m\n   4 â”‚     4 \e[90m 9-element DataFrameRows           \e[0m\n   5 â”‚     5 \e[90m 2-element DataFrameColumns        \e[0m\n   6 â”‚     6 \e[90m GroupedDataFrame with 9 groups bâ€¦ \e[0m\n   7 â”‚     7 \e[90m missing                           \e[0m\n   8 â”‚     8 \e[90m                                   \e[0m\n   9 â”‚     9 \e[90m #undef                            \e[0m"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/io.jl:551
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/io.jl:521
Test Summary:                      | Pass  Fail  Total
improved printing of special types |    7     1      8
	[1m[31mFAILED[0m: io.jl
LoadError: Some tests did not pass: 7 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/io.jl:520
Test Summary: | Pass  Total
constructors  |   52     52
Test Summary:                          | Pass  Total
DataFrame keyword argument constructor |   21     21
Test Summary:         | Pass  Total
DataFrame constructor |   18     18
Test Summary:    | Pass  Total
pair constructor |   22     22
Test Summary: | Pass  Total
associative   |   14     14
Test Summary:       | Pass  Total
vector constructors |   43     43
Test Summary: | Pass  Total
recyclers     |    4      4
Test Summary:                 | Pass  Total
constructor thrown exceptions |   17     17
Test Summary: | Pass  Total
column types  |    3      3
Test Summary:                             | Pass  Total
expansion of Ref and 0-dimensional arrays |    2      2
Test Summary:            | Pass  Total
broadcasting into 0 rows |    6      6
Test Summary:                | Pass  Total
Dict constructor corner case |    5      5
	[1m[32mPASSED[0m: constructors.jl
Test Summary:    | Pass  Total
Conversion tests |   72     72
	[1m[32mPASSED[0m: conversions.jl
Test Summary:  | Pass  Total
standard tests |  190    190
Test Summary:          | Pass  Total
non standard selectors |    4      4
Test Summary:   | Pass  Total
view kwarg test |    8      8
	[1m[32mPASSED[0m: sort.jl
Test Summary: | Pass  Total
parent        |    3      3
Test Summary: | Pass  Total
consistency   |    2      2
Test Summary:    | Pass  Total
accepted columns |   14     14
Test Summary:                                       | Pass  Total
groupby and combine(::Function, ::GroupedDataFrame) | 1185   1185
Test Summary:          | Pass  Total
grouping with missings | 1372   1372
Test Summary:                                       | Pass  Total
grouping arrays that allow missing without missings | 5488   5488
Test Summary:                   | Pass  Total
grouping refarray with fallback |    8      8
Test Summary:            | Pass  Total
grouping with three keys | 2744   2744
Test Summary:                 | Pass  Total
grouping with hash collisions |    2      2
Test Summary:               | Pass  Total
combine with pair interface |  131    131
Test Summary:                                                                     | Pass  Total
combine with aggregation functions (skipmissing=false, sort=false, indices=false) |  370    370
Test Summary:                                                                    | Pass  Total
combine with aggregation functions (skipmissing=false, sort=false, indices=true) |  471    471
Test Summary:                                                                    | Pass  Total
combine with aggregation functions (skipmissing=false, sort=true, indices=false) |  370    370
Test Summary:                                                                   | Pass  Total
combine with aggregation functions (skipmissing=false, sort=true, indices=true) |  471    471
Test Summary:                                                                    | Pass  Total
combine with aggregation functions (skipmissing=true, sort=false, indices=false) |  370    370
Test Summary:                                                                   | Pass  Total
combine with aggregation functions (skipmissing=true, sort=false, indices=true) |  471    471
Test Summary:                                                                   | Pass  Total
combine with aggregation functions (skipmissing=true, sort=true, indices=false) |  370    370
Test Summary:                                                                  | Pass  Total
combine with aggregation functions (skipmissing=true, sort=true, indices=true) |  471    471
Test Summary:                                 | Pass  Total
combine with columns named like grouping keys |   17     17
Test Summary:      | Pass  Total
iteration protocol |    4      4
Test Summary:                  | Pass  Total
type stability of index fields |    1      1
Test Summary:       | Pass  Total
Array-like getindex |   41     41
Test Summary:  | Pass  Total
== and isequal |   19     19
Test Summary: | Pass  Total
show          |   15     15
Test Summary: | Pass  Total
DataFrame     |   22     22
Test Summary:                          | Pass  Total
groupindices, groupcols, and valuecols |   28     28
Test Summary:               | Pass  Total
non standard cols arguments |   35     35
Test Summary:                         | Pass  Total
GroupedDataFrame dictionary interface |   78     78
Test Summary:          | Pass  Total
GroupKey and GroupKeys |  266    266
Test Summary:                                | Pass  Total
GroupedDataFrame indexing with array of keys |  312    312
Test Summary:                       | Pass  Total
InvertedIndex with GroupedDataFrame |   33     33
Test Summary:                            | Pass  Total
GroupedDataFrame array index homogeneity |   49     49
Test Summary:                  | Pass  Total
Parent DataFrame names changed |   13     13
Test Summary:       | Pass  Total
haskey for GroupKey |   26     26
Test Summary:                     | Pass  Total
Check aggregation of DataFrameRow |    4      4
Test Summary:                                             | Pass  Total
Allow returning DataFrame() or NamedTuple() to drop group | 3026   3026
Test Summary:                              | Pass  Total
auto-splatting, ByRow, and column renaming |    9      9
Test Summary:                   | Pass  Total
hard tabular return value cases |   26     26
Test Summary:                                   | Pass  Total
last Pair interface with multiple return values |    8      8
Test Summary: | Pass  Total
keepkeys      |    3      3
Test Summary:            | Pass  Total
additional do_call tests |   13     13
Test Summary:                                              | Pass  Total
mixing of different return lengths and pseudo-broadcasting |  101    101
Test Summary:   | Pass  Total
passing columns |   29     29
Test Summary:              | Pass  Total
correct dropping of groups |   10     10
Test Summary: | Pass  Total
AsTable tests |   14     14
Test Summary:                  | Pass  Total
test correctness of ungrouping |    5      5
Test Summary:            | Pass  Total
combine GroupedDataFrame |  138    138
Test Summary:                         | Pass  Total
select and transform GroupedDataFrame |  320    320
Test Summary:                           | Pass  Total
select! and transform! GroupedDataFrame |  144    144
Test Summary:                         | Pass  Total
group ordering after select/transform |   16     16
Test Summary:                                     | Pass  Total
handling empty data frame / selectors / groupcols |   99     99
Test Summary:                          | Pass  Total
groupcols order after select/transform |    8      8
Test Summary:                | Pass  Total
corner cases of group_reduce |   72     72
Test Summary: | Pass  Total
filter        |  268    268
Test Summary:                 | Pass  Total
select/transform column order |   58     58
Test Summary:               | Pass  Total
combine on empty data frame |    7      7
Test Summary:                    | Pass  Total
disallowed tuple column selector |    2      2
Test Summary:    | Pass  Total
new map behavior |    1      1
Test Summary:                                            | Pass  Total
check isagg correctly uses fast path only when it should | 1191   1191
Test Summary:          | Pass  Total
renamecols=false tests |   14     14
Test Summary: | Pass  Total
empty ByRow   |   13     13
Test Summary:                   | Pass  Total
aggregation of reordered groups |   36     36
Test Summary:                                         | Pass  Total
basic tests of advanced rules with multicolumn output |   28     28
Test Summary:                                   | Pass  Total
tests of invariants of transformation functions |    4      4
Test Summary:                            | Pass  Total
extra CategoricalArray aggregation tests |   44     44
Test Summary:             | Pass  Total
hashing of pooled vectors |    8      8
	[1m[32mPASSED[0m: grouping.jl
Test Summary: | Pass  Total
join types    |   17     17
Test Summary:       | Pass  Total
Test empty inputs 1 |   21     21
Test Summary:       | Pass  Total
Test empty inputs 2 |   21     21
Test Summary: | Pass  Total
issue #960    |    4      4
Test Summary: | Pass  Total
all joins     |   30     30
Test Summary:                    | Pass  Total
all joins with CategoricalArrays |   32     32
Test Summary:                                                     | Pass  Total
maintain CategoricalArray levels ordering on join - non-`on` cols |    6      6
Test Summary:                                                          | Pass  Total
maintain CategoricalArray levels ordering on join - ordering conflicts |   10     10
Test Summary:                                                           | Pass  Total
maintain CategoricalArray levels ordering on join - left is categorical |   10     10
Test Summary:                                   | Pass  Total
join on columns with different left/right names |   19     19
Test Summary:                  | Pass  Total
join with a column of type Any |   16     16
Test Summary:                                       | Pass  Total
joins with categorical columns and no matching rows |   24     24
Test Summary:     | Pass  Total
indicator columns |    4      4
Test Summary:                       | Pass  Total
test checks of merge key uniqueness |   46     46
Test Summary: | Pass  Total
consistency   |    3      3
Test Summary:         | Pass  Total
multi data frame join |   10     10
Test Summary:       | Pass  Total
flexible on in join |    4      4
Test Summary:             | Pass  Total
check naming of indicator |    6      6
Test Summary:                      | Pass  Total
validate error message composition |   47     47
Test Summary:    | Pass  Total
renamecols tests |  609    609
Test Summary:          | Pass  Total
careful indicator test |  847    847
Test Summary:         | Pass  Total
removed join function |    2      2
Test Summary:                          | Pass  Total
join mixing DataFrame and SubDataFrame |    1      1
	[1m[32mPASSED[0m: join.jl
Test Summary:       | Pass  Total
eachrow and eachcol |   45     45
Test Summary: | Pass  Total
mapcols       |    9      9
Test Summary: | Pass  Total
mapcols!      |   11     11
Test Summary: | Pass  Total
SubDataFrame  |    5      5
Test Summary:   | Pass  Total
parent mutation |    4      4
Test Summary:                 | Pass  Total
getproperty and propertynames |   22     22
Test Summary:             |
overload Compat functions | No tests
Test Summary:                      | Pass  Total
keys, values and pairs for eachcol |   11     11
Test Summary:                                    | Pass  Total
findfirst, findnext, findlast, findprev, findall |   22     22
	[1m[32mPASSED[0m: iteration.jl
Test Summary: | Pass  Total
nonunique     |   18     18
	[1m[32mPASSED[0m: duplicates.jl
Test Summary:                            | Pass  Total
Basic show test with allrows and allcols |    9      9
Test Summary:    | Pass  Total
displaysize test |    4      4
Test Summary:             | Pass  Total
IOContext parameters test |    2      2
Test Summary:          | Pass  Total
SubDataFrame show test |    1      1
Test Summary:                                 | Pass  Total
Test showing StackedVector and RepeatedVector |    3      3
Test colors and non-standard values: missing and nothing: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:220
  Expression: sprint(show, df, context = :color => true) == "\e[1m2Ã—2 DataFrame\e[0m\n\e[1m Row \e[0mâ”‚\e[1m Fish   \e[0m\e[1m Mass      \e[0m\n\e[1m     \e[0mâ”‚\e[90m String \e[0m\e[90m Float64?  \e[0m\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚ Suzy          1.5\n   2 â”‚ Amir   \e[90m missing   \e[0m"
   Evaluated: "2Ã—2 DataFrame\n Row â”‚ Fish    Mass\n     â”‚ String  Float64?\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚ Suzy          1.5\n   2 â”‚ Amir    missing" == "\e[1m2Ã—2 DataFrame\e[0m\n\e[1m Row \e[0mâ”‚\e[1m Fish   \e[0m\e[1m Mass      \e[0m\n\e[1m     \e[0mâ”‚\e[90m String \e[0m\e[90m Float64?  \e[0m\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚ Suzy          1.5\n   2 â”‚ Amir   \e[90m missing   \e[0m"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:220
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:219
Test colors and non-standard values: missing and nothing: Test Failed at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:231
  Expression: sprint(show, df, context = :color => true) == "\e[1m3Ã—3 DataFrame\e[0m\n\e[1m Row \e[0mâ”‚\e[1m A       \e[0m\e[1m B       \e[0m\e[1m C       \e[0m\n\e[1m     \e[0mâ”‚\e[90m Symbol? \e[0m\e[90m String? \e[0m\e[90m Any     \e[0m\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚ Symbol  \e[90m missing \e[0m missing\n   2 â”‚\e[90m missing \e[0m String   missing\n   3 â”‚ missing  missing \e[90m missing \e[0m"
   Evaluated: "3Ã—3 DataFrame\n Row â”‚ A        B        C\n     â”‚ Symbol?  String?  Any\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚ Symbol   missing  missing\n   2 â”‚ missing  String   missing\n   3 â”‚ missing  missing  missing" == "\e[1m3Ã—3 DataFrame\e[0m\n\e[1m Row \e[0mâ”‚\e[1m A       \e[0m\e[1m B       \e[0m\e[1m C       \e[0m\n\e[1m     \e[0mâ”‚\e[90m Symbol? \e[0m\e[90m String? \e[0m\e[90m Any     \e[0m\nâ”€â”€â”€â”€â”€â”¼â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n   1 â”‚ Symbol  \e[90m missing \e[0m missing\n   2 â”‚\e[90m missing \e[0m String   missing\n   3 â”‚ missing  missing \e[90m missing \e[0m"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:231
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
 [3] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:219
Test Summary:                                            | Pass  Fail  Total
Test colors and non-standard values: missing and nothing |    1     2      3
	[1m[31mFAILED[0m: show.jl
LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/show.jl:218
Test Summary:       | Pass  Total
copy - SubDataFrame |    5      5
Test Summary:     | Pass  Total
view -- DataFrame |   77     77
Test Summary:        | Pass  Total
view -- SubDataFrame |   62     62
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |    8      8
Test Summary: | Pass  Total
index         |   11     11
Test Summary: | Pass  Total
delete!       |    1      1
Test Summary: | Pass  Total
parent        |    6      6
Test Summary:    | Pass  Total
duplicate column |    1      1
Test Summary:           | Pass  Total
conversion to DataFrame |   12     12
Test Summary:     | Pass  Total
setindex! in view |    4      4
	[1m[32mPASSED[0m: subdataframe.jl
Test Summary: | Pass  Total
Tables        |  101    101
Test Summary:                  | Pass  Total
DataFrame without copying cols |    8      8
Test Summary: | Pass  Total
columnindex   |   23     23
Test Summary:                   | Pass  Total
eachrow and eachcol integration |   29     29
Test Summary:                 | Pass  Total
test constructor with vectors |   18     18
	[1m[32mPASSED[0m: tables.jl
Test Summary: | Pass  Total
TableTraits   |   10     10
	[1m[32mPASSED[0m: tabletraits.jl
Test Summary:      | Pass  Total
getindex DataFrame |   87     87
Test Summary:       | Pass  Total
getindex df[!, col] |   13     13
Test Summary:  | Pass  Total
view DataFrame |  131    131
Test Summary:         | Pass  Total
getindex SubDataFrame |  140    140
Test Summary:     | Pass  Total
view SubDataFrame |  143    143
Test Summary:         | Pass  Total
getindex DataFrameRow |   22     22
Test Summary:     | Pass  Total
view DataFrameRow |   25     25
Test Summary:                             | Pass  Total
additional tests of post-! getindex rules |  230    230
Test Summary:          | Pass  Total
setindex! on DataFrame |  115    115
Test Summary:             | Pass  Total
setindex! on SubDataFrame |  283    283
Test Summary:             | Pass  Total
setindex! on DataFrameRow |  101    101
Test Summary:                           | Pass  Total
setindex! with ! or : and multiple cols |   24     24
Test Summary:              | Pass  Total
additional setindex! tests |    5      5
Test Summary:      | Pass  Total
invalid view tests |   28     28
Test Summary:   | Pass  Total
string indexing |  115    115
Test Summary:              | Pass  Total
setindex! for DataFrameRow |   12     12
Test Summary:                           | Pass  Total
setindex! for ncols(df)+1 and old tests |    3      3
Test Summary:       | Pass  Total
begin and end tests |   20     20
Test Summary:                                                     | Pass  Total
unsupported df[col] and df[col] for getindex, view, and setindex! |   54     54
Test Summary:             | Pass  Total
setproperty! corner cases |    6      6
Test Summary:                             | Pass  Total
disallowed getindex and setindex! methods |    6      6
	[1m[32mPASSED[0m: indexing.jl
Test Summary:  | Pass  Total
CartesianIndex |   24     24
Test Summary:                             | Pass  Total
broadcasting of AbstractDataFrame objects |   28     28
Test Summary:                                               | Pass  Total
broadcasting of AbstractDataFrame objects thrown exceptions |   10     10
Test Summary:          | Pass  Total
broadcasting expansion |    5      5
Test Summary:                                          | Pass  Total
broadcasting of AbstractDataFrame objects corner cases |   34     34
Test Summary:                                                               | Pass  Total
normal data frame and data frame row in broadcasted assignment - one column |  117    117
Test Summary:                                                                 | Pass  Total
normal data frame and data frame view in broadcasted assignment - two columns |  104    104
Test Summary:                                       | Pass  Total
assignment to a whole data frame and data frame row |    8      8
Test Summary:                                               | Pass  Total
extending data frame in broadcasted assignment - one column |   40     40
Test Summary:                | Pass  Total
empty data frame corner case |  191    191
Test Summary:           | Pass  Total
test categorical values |  126    126
Test Summary:       | Pass  Total
scalar broadcasting |    3      3
Test Summary:      | Pass  Total
tuple broadcasting |    8      8
Test Summary:             | Pass  Total
scalar on assignment side |    4      4
Test Summary: | Pass  Total
nothing test  |    4      4
Test Summary: | Pass  Total
aliasing test |  154    154
Test Summary: | Pass  Total
@. test       |    2      2
Test Summary:     | Pass  Total
test common cases |   11     11
Test Summary:                                             | Pass  Total
data frame only on left hand side broadcasting assignment |   26     26
Test Summary:                          | Pass  Total
broadcasting with 3-dimensional object |    4      4
Test Summary:                                  | Pass  Total
additional checks of post-! broadcasting rules |  168    168
Test Summary:                                   | Pass  Total
DataFrameRow getproperty broadcasted assignment |    8      8
Test Summary:                                | Pass  Total
make sure that : is in place and ! allocates |   10     10
Test Summary:                                            | Pass  Total
add new correct rules for df[row, col] .= v broadcasting |   12     12
Test Summary:                 | Pass  Total
broadcasting into df[!, cols] |  223    223
Test Summary:                          | Pass  Total
broadcasting over heterogenous columns |    1      1
Test Summary:        | Pass  Total
@views on df[!, col] |    3      3
Test Summary:                      | Pass  Total
broadcasting of df[:, col] = value |   12     12
	[1m[32mPASSED[0m: broadcasting.jl
Test Summary: | Pass  Total
iteration     |   12     12
Test Summary: | Pass  Total
joins         |   24     24
Test Summary: | Pass  Total
reshape       |    6      6
Test Summary: | Pass  Total
selection     |   13     13
Test Summary: | Pass  Total
tables        |    4      4
Test Summary:       | Pass  Total
split-apply-combine |   15     15
Test Summary: | Pass  Total
DataFrameRow  |   13     13
Test Summary:                        | Pass  Total
names, propertynames and hasproperty |   43     43
Test Summary:     | Pass  Total
append! and push! |    5      5
	[1m[32mPASSED[0m: string.jl
Test Summary: | Pass  Total
precompile    |    2      2
	[1m[32mPASSED[0m: precompile.jl
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = ip:0x0
â”” @ Core :-1
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:12
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:12
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:18
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:18
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:22
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:22
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:26
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:26
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:30
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:30
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:34
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:34
â”Œ Warning: `DataFrame(columns::NTuple{N, AbstractVector}; copycols::Bool = true) where N` is deprecated, use `DataFrame(collect(columns), Symbol.(:x, 1:length(columns)), copycols = copycols)` instead.
â”‚   caller = ip:0x0
â”” @ Core :-1
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:39
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:39
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:44
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:44
â”Œ Warning: `DataFrame!(args...; kwargs...)` is deprecated, use `DataFrame(args...; copycols = false, kwargs...)` instead.
â”‚   caller = top-level scope at deprecated.jl:49
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:49
Test Summary: | Pass  Total
DataFrame!    |   22     22
â”Œ Warning: `categorical(df)` is deprecated. Use `transform(df, names(df, Union{Missing, AbstractString}) .=> categorical(x, compress=false), renamecols=false)` instead.
â”‚   caller = categorical(::DataFrame) at deprecated.jl:43
â”” @ DataFrames ~/.julia/packages/DataFrames/yqToF/src/deprecated.jl:43
â”Œ Warning: `categorical(df, T)` is deprecated. Use transform(df, names(df, T) .=> categorical(x, compress=false), renamecols=false)` instead.
â”‚   caller = macro expansion at deprecated.jl:68 [inlined]
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:68
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = macro expansion at deprecated.jl:79 [inlined]
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:79
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, cols => categorical, renamecols=false)` instead.
â”‚   caller = macro expansion at deprecated.jl:91 [inlined]
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:91
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, cols => categorical, renamecols=false)` instead.
â”‚   caller = macro expansion at deprecated.jl:103 [inlined]
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:103
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = macro expansion at deprecated.jl:115 [inlined]
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:115
â”Œ Warning: `categorical(df)` is deprecated. Use `transform(df, names(df, Union{Missing, AbstractString}) .=> categorical(x, compress=false), renamecols=false)` instead.
â”‚   caller = categorical(::SubDataFrame{DataFrame,DataFrames.Index,Base.OneTo{Int64}}) at deprecated.jl:43
â”” @ DataFrames ~/.julia/packages/DataFrames/yqToF/src/deprecated.jl:43
Test Summary:    | Pass  Total
test categorical |  496    496
â”Œ Warning: `categorical!(df)` is deprecated. Use `transform!(df, names(df, Union{Missing, AbstractString}) .=> (x -> categorical(x, compress=false)), renamecols=false)` instead.
â”‚   caller = categorical!(::DataFrame) at deprecated.jl:90
â”” @ DataFrames ~/.julia/packages/DataFrames/yqToF/src/deprecated.jl:90
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:133
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:133
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, cols .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:135
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:135
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, cols .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:137
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:137
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, cols => categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:139
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:139
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:141
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:141
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:143
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:143
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:147
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:147
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:149
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:149
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:151
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:151
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:153
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:153
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:155
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:155
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:157
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:157
Test Summary:     | Pass  Total
test categorical! |   14     14
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:167
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:167
â”Œ Warning: `categorical!(df)` is deprecated. Use `transform!(df, names(df, Union{Missing, AbstractString}) .=> (x -> categorical(x, compress=true)), renamecols=false)` instead.
â”‚   caller = ip:0x0
â”” @ Core :-1
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, cols .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:177
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:177
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:189
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:189
â”Œ Warning: `categorical!(df, T)` is deprecated. Use `transform!(df, names(df, T) .=> (x -> categorical(x, compress=false)), renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:202
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:202
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:215
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:215
Test Summary: | Pass  Total
categorical!  |   11     11
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:221
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:221
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:222
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:222
â”Œ Warning: `categorical(df, cols)` is deprecated. Use `transform(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:223
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:223
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:224
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:224
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:225
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:225
â”Œ Warning: `categorical!(df, cols)` is deprecated. Use `transform!(df, names(df, cols) .=> categorical, renamecols=false)` instead.
â”‚   caller = top-level scope at deprecated.jl:226
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:226
Test Summary:                          |
categorical with Cols, All and Between | No tests
â”Œ Warning: name => function order is deprecated; use function => name instead
â”‚   caller = ip:0x0
â”” @ Core :-1
Test Summary:              | Pass  Total
deprecated describe syntax |    1      1
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:237
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:237
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:238
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:238
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:239
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:239
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:240
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:240
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:241
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:241
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:242
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:242
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:243
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:243
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:244
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:244
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:246
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:246
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:247
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:247
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:248
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:248
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:249
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:249
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:250
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:250
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:251
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:251
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:252
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:252
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:253
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:253
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:255
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:255
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:256
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:256
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:257
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:257
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:258
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:258
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:259
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:259
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:261
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:261
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:262
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:262
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:263
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:263
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:264
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:264
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:265
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:265
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:266
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:266
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:268
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:268
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:269
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:269
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:270
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:270
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:271
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:271
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:272
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:272
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:273
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:273
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:275
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:275
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:276
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:276
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:277
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:277
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:278
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:278
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:281
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:281
â”Œ Warning: All(args...) is deprecated, use Cols(args...) instead
â”‚   caller = top-level scope at deprecated.jl:282
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:282
Test Summary: | Pass  Total
All indexing  |   39     39
â”Œ Warning: `convert(::Type{DataFrame}, A::AbstractMatrix)` is deprecated, use `DataFrame(Tables.table(A, header = Symbol.(:x, axes(A, 2))))` instead.
â”‚   caller = top-level scope at deprecated.jl:299
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:299
â”Œ Warning: `DataFrame` constructor with passed eltypes is deprecated. Pass explicitly created columns to a `DataFrame` constructor instead.
â”‚   caller = top-level scope at deprecated.jl:371
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:371
â”Œ Warning: `DataFrame` constructor with passed eltypes is deprecated. Pass explicitly created columns to a `DataFrame` constructor instead.
â”‚   caller = top-level scope at deprecated.jl:382
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:382
â”Œ Warning: `DataFrame` constructor with passed eltypes is deprecated. Pass explicitly created columns to a `DataFrame` constructor instead.
â”‚   caller = top-level scope at deprecated.jl:393
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:393
â”Œ Warning: `DataFrame` constructor with passed eltypes is deprecated. Pass explicitly created columns to a `DataFrame` constructor instead.
â”‚   caller = DataFrame(::Array{Union,1}, ::Array{Symbol,1}) at deprecated.jl:130
â”” @ DataFrames ~/.julia/packages/DataFrames/yqToF/src/deprecated.jl:130
â”Œ Warning: `DataFrame` constructor with passed eltypes is deprecated. Pass explicitly created columns to a `DataFrame` constructor instead.
â”‚   caller = DataFrame(::Array{Union,1}, ::Array{String,1}) at deprecated.jl:143
â”” @ DataFrames ~/.julia/packages/DataFrames/yqToF/src/deprecated.jl:143
â”Œ Warning: `convert(::Type{DataFrame}, A::AbstractMatrix)` is deprecated, use `DataFrame(Tables.table(A, header = Symbol.(:x, axes(A, 2))))` instead.
â”‚   caller = top-level scope at deprecated.jl:420
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:420
â”Œ Warning: `convert(::Type{DataFrame}, A::AbstractMatrix)` is deprecated, use `DataFrame(Tables.table(A, header = Symbol.(:x, axes(A, 2))))` instead.
â”‚   caller = top-level scope at deprecated.jl:426
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:426
â”Œ Warning: `convert(::Type{DataFrame}, A::AbstractMatrix)` is deprecated, use `DataFrame(Tables.table(A, header = Symbol.(:x, axes(A, 2))))` instead.
â”‚   caller = top-level scope at deprecated.jl:432
â”” @ Core ~/.julia/packages/DataFrames/yqToF/test/deprecated.jl:432
Test Summary:                     | Pass  Total
deprecated DataFrame constructors |   97     97
	[1m[32mPASSED[0m: deprecated.jl
ERROR: LoadError: "Tests failed"
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/runtests.jl:56
 [2] include(::String) at ./client.jl:457
 [3] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/DataFrames/yqToF/test/runtests.jl:55

PkgEval failed: Package DataFrames errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T20:27:16.916
CPU usage: 1183.16s (1170.22s user, 14.27s kernel)

Network usage:
- eth0: 6.358 MiB received, 145.197 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":24,"op":"Write","minor":0},{"major":259,"value":19,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":24,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":24,"op":"Write","minor":2},{"major":253,"value":19,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":24,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":135168,"op":"Write","minor":0},{"major":259,"value":106496,"op":"Sync","minor":0},{"major":259,"value":28672,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":135168,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":135168,"op":"Write","minor":2},{"major":253,"value":106496,"op":"Sync","minor":2},{"major":253,"value":28672,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":135168,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":342863872,"max_usage":2249342976,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":199802880,"inactive_file":135168,"inactive_anon":84615168,"total_pgfault":7388139,"total_cache":111497216,"total_rss_huge":0,"total_active_anon":217890816,"total_pgmajfault":0,"pgpgin":2971716,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":2895714,"hierarchical_memsw_limit":0,"cache":111497216,"active_file":8785920,"pgfault":7388139,"total_mapped_file":0,"total_pgpgout":2895714,"total_writeback":0,"rss":199802880,"unevictable":0,"total_inactive_anon":84615168,"total_pgpgin":2971716,"active_anon":217890816,"total_active_file":8785920},"limit":540965302272},"name":"/DataFrames-NXSMGafi","networks":{"eth0":{"rx_bytes":6666590,"rx_packets":1704,"tx_packets":1341,"tx_bytes":148682,"tx_dropped":0,"rx_dropped":40,"tx_errors":0,"rx_errors":0}},"id":"e81eb1f338aec445f32f388459f31895ef3a62a1733874320a5a8813c0a5262e","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":5488495604522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":1170220000000,"usage_in_kernelmode":14270000000,"total_usage":1183162974274,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1183159701613,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95490,3177171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T20:27:17.08306557Z"}