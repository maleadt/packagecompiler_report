################################################################################
# PackageCompiler set-up: 2021-01-11T15:45:30.535
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD Ryzen Threadripper 2990WX 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver1)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0



################################################################################
# Installation: 2021-01-11T15:45:32.118
#

 Installing known registries into `~/.julia`
                                                                           0.6%#################################################                         68.1%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed Artifacts ──────────────────── v1.3.0
  Installed MacroTools ─────────────────── v0.5.6
  Installed ForwardDiff ────────────────── v0.10.14
  Installed NaNMath ────────────────────── v0.3.5
  Installed DiffResults ────────────────── v1.0.3
  Installed CommonSubexpressions ───────── v0.3.0
  Installed ChainRulesCore ─────────────── v0.9.24
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed DiffRules ──────────────────── v1.0.2
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed SpecialFunctions ───────────── v1.2.1
  Installed StaticArrays ───────────────── v1.0.1
  Installed JLLWrappers ────────────────── v1.2.0
  Installed PackageCompiler ────────────── v1.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [f6369f11] + ForwardDiff v0.10.14
  [9b87118b] + PackageCompiler v1.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [d360d2e6] + ChainRulesCore v0.9.24
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [f6369f11] + ForwardDiff v0.10.14
  [692b3bcd] + JLLWrappers v1.2.0
  [1914dd2f] + MacroTools v0.5.6
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [9b87118b] + PackageCompiler v1.2.5
  [276daf66] + SpecialFunctions v1.2.1
  [90137ffa] + StaticArrays v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Compiling: 2021-01-11T15:45:37.555
#

[ Info: PackageCompiler: creating system image object file, this might take a while...
Generated system image is 160.967 MiB, compilation took 183 seconds


################################################################################
# PkgEval set-up: 2021-01-11T15:48:47.398
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD Ryzen Threadripper 2990WX 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver1)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0

Base.julia_cmd() = `/usr/local/julia/bin/julia -Cnative -J/cache/ForwardDiff-SFrtQ415.so -g1`


################################################################################
# Installation: 2021-01-11T15:48:48.898
#

 Installing known registries into `~/.julia`
                                                                           0.6%#################################################                         68.1%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed ForwardDiff ────────────────── v0.10.14
  Installed Artifacts ──────────────────── v1.3.0
  Installed NaNMath ────────────────────── v0.3.5
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DiffResults ────────────────── v1.0.3
  Installed MacroTools ─────────────────── v0.5.6
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed ChainRulesCore ─────────────── v0.9.24
  Installed DiffRules ──────────────────── v1.0.2
  Installed JLLWrappers ────────────────── v1.2.0
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed SpecialFunctions ───────────── v1.2.1
  Installed StaticArrays ───────────────── v1.0.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [f6369f11] + ForwardDiff v0.10.14
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [d360d2e6] + ChainRulesCore v0.9.24
  [bbf7d656] + CommonSubexpressions v0.3.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [f6369f11] + ForwardDiff v0.10.14
  [692b3bcd] + JLLWrappers v1.2.0
  [1914dd2f] + MacroTools v0.5.6
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [276daf66] + SpecialFunctions v1.2.1
  [90137ffa] + StaticArrays v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2021-01-11T15:48:53.425
#

    Testing ForwardDiff
Status `/tmp/jl_JAHw8i/Project.toml`
  [49dc2e85] Calculus v0.5.1
  [bbf7d656] CommonSubexpressions v0.3.0
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [de460e47] DiffTests v0.1.1
  [f6369f11] ForwardDiff v0.10.14
  [77ba4419] NaNMath v0.3.5
  [276daf66] SpecialFunctions v1.2.1
  [90137ffa] StaticArrays v1.0.1
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_JAHw8i/Manifest.toml`
  [56f22d72] Artifacts v1.3.0
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.9.24
  [bbf7d656] CommonSubexpressions v0.3.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [de460e47] DiffTests v0.1.1
  [f6369f11] ForwardDiff v0.10.14
  [692b3bcd] JLLWrappers v1.2.0
  [1914dd2f] MacroTools v0.5.6
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.5
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [276daf66] SpecialFunctions v1.2.1
  [90137ffa] StaticArrays v1.0.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Testing Partials...
  ...testing Partials{0,Int64}
  ...testing Partials{0,Float32}
  ...testing Partials{0,Float64}
  ...testing Partials{3,Int64}
  ...testing Partials{3,Float32}
  ...testing Partials{3,Float64}
done (took 2.673350741 seconds).
Testing Dual...
  ...testing Dual{TestTag(),Int64,0} and Dual{TestTag(),Dual{TestTag(),Int64,0},0}
  ...testing Dual{TestTag(),Float32,0} and Dual{TestTag(),Dual{TestTag(),Float32,0},0}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing Base.mod2pi with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
  ...testing Dual{TestTag(),Int64,0} and Dual{TestTag(),Dual{TestTag(),Int64,4},0}
  ...testing Dual{TestTag(),Float32,0} and Dual{TestTag(),Dual{TestTag(),Float32,4},0}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing Base.mod2pi with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
  ...testing Dual{TestTag(),Int64,3} and Dual{TestTag(),Dual{TestTag(),Int64,0},3}
  ...testing Dual{TestTag(),Float32,3} and Dual{TestTag(),Dual{TestTag(),Float32,0},3}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing Base.mod2pi with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
  ...testing Dual{TestTag(),Int64,3} and Dual{TestTag(),Dual{TestTag(),Int64,4},3}
  ...testing Dual{TestTag(),Float32,3} and Dual{TestTag(),Dual{TestTag(),Float32,4},3}
       ...auto-testing Base.asind with 1 arguments
       ...auto-testing Base.log1p with 1 arguments
       ...auto-testing Base.acsch with 1 arguments
       ...auto-testing SpecialFunctions.erfc with 1 arguments
       ...auto-testing SpecialFunctions.digamma with 1 arguments
       ...auto-testing NaNMath.acos with 1 arguments
       ...auto-testing Base.asec with 1 arguments
       ...auto-testing Base.acosh with 1 arguments
       ...auto-testing Base.\ with 2 arguments
       ...auto-testing NaNMath.log10 with 1 arguments
       ...auto-testing Base.mod2pi with 1 arguments
       ...auto-testing Base.acsc with 1 arguments
       ...auto-testing SpecialFunctions.airybiprime with 1 arguments
       ...auto-testing Base.cscd with 1 arguments
       ...auto-testing SpecialFunctions.logbeta with 2 arguments
       ...auto-testing Base.hypot with 2 arguments
       ...auto-testing NaNMath.log with 1 arguments
       ...auto-testing Base.tand with 1 arguments
       ...auto-testing NaNMath.atanh with 1 arguments
       ...auto-testing Base.deg2rad with 1 arguments
       ...auto-testing Base.log10 with 1 arguments
       ...auto-testing Base.csch with 1 arguments
       ...auto-testing Base.asinh with 1 arguments
       ...auto-testing SpecialFunctions.airyai with 1 arguments
       ...auto-testing Base.abs2 with 1 arguments
       ...auto-testing SpecialFunctions.gamma with 1 arguments
       ...auto-testing SpecialFunctions.erfcx with 1 arguments
       ...auto-testing NaNMath.log1p with 1 arguments
       ...auto-testing SpecialFunctions.bessely0 with 1 arguments
       ...auto-testing Base.cosh with 1 arguments
       ...auto-testing NaNMath.sin with 1 arguments
       ...auto-testing Base.cos with 1 arguments
       ...auto-testing Base.atan with 2 arguments
       ...auto-testing Base.cospi with 1 arguments
       ...auto-testing Base.cbrt with 1 arguments
       ...auto-testing Base.acosd with 1 arguments
       ...auto-testing SpecialFunctions.bessely1 with 1 arguments
       ...auto-testing Base.acoth with 1 arguments
       ...auto-testing NaNMath.cos with 1 arguments
       ...auto-testing NaNMath.max with 2 arguments
       ...auto-testing SpecialFunctions.erfcinv with 1 arguments
       ...auto-testing SpecialFunctions.besselk with 2 arguments
       ...auto-testing NaNMath.pow with 2 arguments
       ...auto-testing SpecialFunctions.erf with 1 arguments
       ...auto-testing Base.sin with 1 arguments
       ...auto-testing Base.+ with 2 arguments
       ...auto-testing SpecialFunctions.dawson with 1 arguments
       ...auto-testing Base.inv with 1 arguments
       ...auto-testing Base.acotd with 1 arguments
       ...auto-testing SpecialFunctions.airyaiprime with 1 arguments
       ...auto-testing Base.min with 2 arguments
       ...auto-testing Base.+ with 1 arguments
       ...auto-testing SpecialFunctions.erfinv with 1 arguments
       ...auto-testing SpecialFunctions.trigamma with 1 arguments
       ...auto-testing Base.asecd with 1 arguments
       ...auto-testing Base.log with 1 arguments
       ...auto-testing NaNMath.acosh with 1 arguments
       ...auto-testing Base.rad2deg with 1 arguments
       ...auto-testing Base.mod with 2 arguments
       ...auto-testing SpecialFunctions.besselj1 with 1 arguments
       ...auto-testing Base.exp with 1 arguments
       ...auto-testing Base.acot with 1 arguments
       ...auto-testing NaNMath.sqrt with 1 arguments
       ...auto-testing Base.* with 2 arguments
       ...auto-testing Base.sind with 1 arguments
       ...auto-testing Base.sinpi with 1 arguments
       ...auto-testing Base.max with 2 arguments
       ...auto-testing Base.asech with 1 arguments
       ...auto-testing SpecialFunctions.bessely with 2 arguments
       ...auto-testing NaNMath.log2 with 1 arguments
       ...auto-testing NaNMath.tan with 1 arguments
       ...auto-testing NaNMath.lgamma with 1 arguments
       ...auto-testing Base.sqrt with 1 arguments
       ...auto-testing Base.^ with 2 arguments
       ...auto-testing SpecialFunctions.invdigamma with 1 arguments
       ...auto-testing SpecialFunctions.airybi with 1 arguments
       ...auto-testing Base.exp10 with 1 arguments
       ...auto-testing Base.rem with 2 arguments
       ...auto-testing Base.sech with 1 arguments
       ...auto-testing SpecialFunctions.erfi with 1 arguments
       ...auto-testing Base.coth with 1 arguments
       ...auto-testing Base.asin with 1 arguments
       ...auto-testing Base.cotd with 1 arguments
       ...auto-testing Base.cosd with 1 arguments
       ...auto-testing Base.sinh with 1 arguments
       ...auto-testing Base.abs with 1 arguments
       ...auto-testing SpecialFunctions.loggamma with 1 arguments
       ...auto-testing SpecialFunctions.besselj0 with 1 arguments
       ...auto-testing Base.transpose with 1 arguments
       ...auto-testing NaNMath.min with 2 arguments
       ...auto-testing Base.csc with 1 arguments
       ...auto-testing Base.tanh with 1 arguments
       ...auto-testing SpecialFunctions.besselj with 2 arguments
       ...auto-testing Base.log2 with 1 arguments
       ...auto-testing Base.atan with 1 arguments
       ...auto-testing Base.secd with 1 arguments
       ...auto-testing Base.atand with 1 arguments
       ...auto-testing SpecialFunctions.besseli with 2 arguments
       ...auto-testing NaNMath.asin with 1 arguments
       ...auto-testing Base.sec with 1 arguments
       ...auto-testing Base.acscd with 1 arguments
       ...auto-testing Base.tan with 1 arguments
       ...auto-testing SpecialFunctions.polygamma with 2 arguments
       ...auto-testing Base.- with 1 arguments
       ...auto-testing Base.cot with 1 arguments
       ...auto-testing Base.- with 2 arguments
       ...auto-testing Base.exp2 with 1 arguments
       ...auto-testing Base.expm1 with 1 arguments
       ...auto-testing Base.acos with 1 arguments
       ...auto-testing Base.atanh with 1 arguments
       ...auto-testing SpecialFunctions.beta with 2 arguments
Test Summary:          | Pass  Total
Exponentiation of zero |    3      3
Test Summary: | Pass  Total
Type min/max  |    5      5
done (took 16.01929416 seconds).
Testing derivative functionality...
  ...testing num2num_1
  ...testing num2num_2
  ...testing num2num_3
  ...testing num2num_4
  ...testing num2num_5
  ...testing identity
  ...testing num2arr_1
  ...testing num2arr_1!
Test Summary:                     | Pass  Total
exponential function at base zero |    4      4
done (took 2.971191594 seconds).
Testing gradient functionality...
  ...running hardcoded test with chunk size = 1 and tag = nothing
  ...running hardcoded test with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...running hardcoded test with chunk size = 2 and tag = nothing
  ...running hardcoded test with chunk size = 2 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...running hardcoded test with chunk size = 3 and tag = nothing
  ...running hardcoded test with chunk size = 3 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing vec2num_1 with chunk size = 1 and tag = nothing
  ...testing vec2num_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 4 and tag = nothing
  ...testing vec2num_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 6 and tag = nothing
  ...testing vec2num_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 12 and tag = nothing
  ...testing vec2num_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_1 with chunk size = 13 and tag = nothing
  ...testing vec2num_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_1),Float64}()
  ...testing vec2num_2 with chunk size = 1 and tag = nothing
  ...testing vec2num_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 4 and tag = nothing
  ...testing vec2num_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 6 and tag = nothing
  ...testing vec2num_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 12 and tag = nothing
  ...testing vec2num_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_2 with chunk size = 13 and tag = nothing
  ...testing vec2num_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_2),Float64}()
  ...testing vec2num_3 with chunk size = 1 and tag = nothing
  ...testing vec2num_3 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 4 and tag = nothing
  ...testing vec2num_3 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 6 and tag = nothing
  ...testing vec2num_3 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 12 and tag = nothing
  ...testing vec2num_3 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_3 with chunk size = 13 and tag = nothing
  ...testing vec2num_3 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_3),Float64}()
  ...testing vec2num_4 with chunk size = 1 and tag = nothing
  ...testing vec2num_4 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 4 and tag = nothing
  ...testing vec2num_4 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 6 and tag = nothing
  ...testing vec2num_4 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 12 and tag = nothing
  ...testing vec2num_4 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_4 with chunk size = 13 and tag = nothing
  ...testing vec2num_4 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_4),Float64}()
  ...testing vec2num_5 with chunk size = 1 and tag = nothing
  ...testing vec2num_5 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 4 and tag = nothing
  ...testing vec2num_5 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 6 and tag = nothing
  ...testing vec2num_5 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 12 and tag = nothing
  ...testing vec2num_5 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_5 with chunk size = 13 and tag = nothing
  ...testing vec2num_5 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_5),Float64}()
  ...testing vec2num_6 with chunk size = 1 and tag = nothing
  ...testing vec2num_6 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 4 and tag = nothing
  ...testing vec2num_6 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 6 and tag = nothing
  ...testing vec2num_6 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 12 and tag = nothing
  ...testing vec2num_6 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_6 with chunk size = 13 and tag = nothing
  ...testing vec2num_6 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_6),Float64}()
  ...testing vec2num_7 with chunk size = 1 and tag = nothing
  ...testing vec2num_7 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 4 and tag = nothing
  ...testing vec2num_7 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 6 and tag = nothing
  ...testing vec2num_7 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 12 and tag = nothing
  ...testing vec2num_7 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing vec2num_7 with chunk size = 13 and tag = nothing
  ...testing vec2num_7 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.vec2num_7),Float64}()
  ...testing rosenbrock_1 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_1 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_1),Float64}()
  ...testing rosenbrock_2 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_2 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_2),Float64}()
  ...testing rosenbrock_3 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_3 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_3),Float64}()
  ...testing rosenbrock_4 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 4 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 6 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 12 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing rosenbrock_4 with chunk size = 13 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.rosenbrock_4),Float64}()
  ...testing ackley with chunk size = 1 and tag = nothing
  ...testing ackley with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 4 and tag = nothing
  ...testing ackley with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 6 and tag = nothing
  ...testing ackley with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 12 and tag = nothing
  ...testing ackley with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing ackley with chunk size = 13 and tag = nothing
  ...testing ackley with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.ackley),Float64}()
  ...testing self_weighted_logit with chunk size = 1 and tag = nothing
  ...testing self_weighted_logit with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 4 and tag = nothing
  ...testing self_weighted_logit with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 6 and tag = nothing
  ...testing self_weighted_logit with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 12 and tag = nothing
  ...testing self_weighted_logit with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing self_weighted_logit with chunk size = 13 and tag = nothing
  ...testing self_weighted_logit with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.self_weighted_logit),Float64}()
  ...testing nested_array_mul with chunk size = 1 and tag = nothing
  ...testing nested_array_mul with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.nested_array_mul),Float64}()
  ...testing nested_array_mul with chunk size = 4 and tag = nothing
  ...testing nested_array_mul with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.nested_array_mul),Float64}()
  ...testing nested_array_mul with chunk size = 6 and tag = nothing
  ...testing nested_array_mul with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.nested_array_mul),Float64}()
  ...testing nested_array_mul with chunk size = 12 and tag = nothing
  ...testing nested_array_mul with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.nested_array_mul),Float64}()
  ...testing nested_array_mul with chunk size = 13 and tag = nothing
  ...testing nested_array_mul with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.nested_array_mul),Float64}()
  ...testing first with chunk size = 1 and tag = nothing
  ...testing first with chunk size = 1 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 4 and tag = nothing
  ...testing first with chunk size = 4 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 6 and tag = nothing
  ...testing first with chunk size = 6 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 12 and tag = nothing
  ...testing first with chunk size = 12 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing first with chunk size = 13 and tag = nothing
  ...testing first with chunk size = 13 and tag = ForwardDiff.Tag{typeof(first),Float64}()
  ...testing specialized StaticArray codepaths
Test Summary:                     | Pass  Total
exponential function at base zero |    4      4
Test Summary:   | Pass  Total
chunk size zero |    2      2
done (took 87.516143401 seconds).
Testing jacobian functionality...
  ...running hardcoded test with chunk size = 1 and tag = (nothing, nothing)
  ...running hardcoded test with chunk size = 1 and tag = (ForwardDiff.Tag{Main.JacobianTest.var"#3#4",Int64}(), ForwardDiff.Tag{Main.JacobianTest.var"#1#2",Int64}())
  ...running hardcoded test with chunk size = 2 and tag = (nothing, nothing)
  ...running hardcoded test with chunk size = 2 and tag = (ForwardDiff.Tag{Main.JacobianTest.var"#3#4",Int64}(), ForwardDiff.Tag{Main.JacobianTest.var"#1#2",Int64}())
  ...running hardcoded test with chunk size = 3 and tag = (nothing, nothing)
  ...running hardcoded test with chunk size = 3 and tag = (ForwardDiff.Tag{Main.JacobianTest.var"#3#4",Int64}(), ForwardDiff.Tag{Main.JacobianTest.var"#1#2",Int64}())
  ...testing - with chunk size = 1 and tag = nothing
  ...testing - with chunk size = 1 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 4 and tag = nothing
  ...testing - with chunk size = 4 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 6 and tag = nothing
  ...testing - with chunk size = 6 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 12 and tag = nothing
  ...testing - with chunk size = 12 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing - with chunk size = 13 and tag = nothing
  ...testing - with chunk size = 13 and tag = ForwardDiff.Tag{typeof(-),Float64}()
  ...testing chebyquad with chunk size = 1 and tag = nothing
  ...testing chebyquad with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 4 and tag = nothing
  ...testing chebyquad with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 6 and tag = nothing
  ...testing chebyquad with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 12 and tag = nothing
  ...testing chebyquad with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing chebyquad with chunk size = 13 and tag = nothing
  ...testing chebyquad with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad),Float64}()
  ...testing brown_almost_linear with chunk size = 1 and tag = nothing
  ...testing brown_almost_linear with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 4 and tag = nothing
  ...testing brown_almost_linear with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 6 and tag = nothing
  ...testing brown_almost_linear with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 12 and tag = nothing
  ...testing brown_almost_linear with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing brown_almost_linear with chunk size = 13 and tag = nothing
  ...testing brown_almost_linear with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear),Float64}()
  ...testing trigonometric with chunk size = 1 and tag = nothing
  ...testing trigonometric with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 4 and tag = nothing
  ...testing trigonometric with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 6 and tag = nothing
  ...testing trigonometric with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 12 and tag = nothing
  ...testing trigonometric with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing trigonometric with chunk size = 13 and tag = nothing
  ...testing trigonometric with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric),Float64}()
  ...testing arr2arr_1 with chunk size = 1 and tag = nothing
  ...testing arr2arr_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 4 and tag = nothing
  ...testing arr2arr_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 6 and tag = nothing
  ...testing arr2arr_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 12 and tag = nothing
  ...testing arr2arr_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_1 with chunk size = 13 and tag = nothing
  ...testing arr2arr_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_1),Float64}()
  ...testing arr2arr_2 with chunk size = 1 and tag = nothing
  ...testing arr2arr_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 4 and tag = nothing
  ...testing arr2arr_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 6 and tag = nothing
  ...testing arr2arr_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 12 and tag = nothing
  ...testing arr2arr_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing arr2arr_2 with chunk size = 13 and tag = nothing
  ...testing arr2arr_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.arr2arr_2),Float64}()
  ...testing mutation_test_1 with chunk size = 1 and tag = nothing
  ...testing mutation_test_1 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 4 and tag = nothing
  ...testing mutation_test_1 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 6 and tag = nothing
  ...testing mutation_test_1 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 12 and tag = nothing
  ...testing mutation_test_1 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_1 with chunk size = 13 and tag = nothing
  ...testing mutation_test_1 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1),Float64}()
  ...testing mutation_test_2 with chunk size = 1 and tag = nothing
  ...testing mutation_test_2 with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 4 and tag = nothing
  ...testing mutation_test_2 with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 6 and tag = nothing
  ...testing mutation_test_2 with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 12 and tag = nothing
  ...testing mutation_test_2 with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing mutation_test_2 with chunk size = 13 and tag = nothing
  ...testing mutation_test_2 with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2),Float64}()
  ...testing identity with chunk size = 1 and tag = nothing
  ...testing identity with chunk size = 1 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 4 and tag = nothing
  ...testing identity with chunk size = 4 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 6 and tag = nothing
  ...testing identity with chunk size = 6 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 12 and tag = nothing
  ...testing identity with chunk size = 12 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing identity with chunk size = 13 and tag = nothing
  ...testing identity with chunk size = 13 and tag = ForwardDiff.Tag{typeof(identity),Float64}()
  ...testing chebyquad! with chunk size = 1 and tag = nothing
  ...testing chebyquad! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 4 and tag = nothing
  ...testing chebyquad! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 6 and tag = nothing
  ...testing chebyquad! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 12 and tag = nothing
  ...testing chebyquad! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing chebyquad! with chunk size = 13 and tag = nothing
  ...testing chebyquad! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.chebyquad!),Float64}()
  ...testing brown_almost_linear! with chunk size = 1 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 4 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 6 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 12 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing brown_almost_linear! with chunk size = 13 and tag = nothing
  ...testing brown_almost_linear! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.brown_almost_linear!),Float64}()
  ...testing trigonometric! with chunk size = 1 and tag = nothing
  ...testing trigonometric! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 4 and tag = nothing
  ...testing trigonometric! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 6 and tag = nothing
  ...testing trigonometric! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 12 and tag = nothing
  ...testing trigonometric! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing trigonometric! with chunk size = 13 and tag = nothing
  ...testing trigonometric! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.trigonometric!),Float64}()
  ...testing mutation_test_1! with chunk size = 1 and tag = nothing
  ...testing mutation_test_1! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 4 and tag = nothing
  ...testing mutation_test_1! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 6 and tag = nothing
  ...testing mutation_test_1! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 12 and tag = nothing
  ...testing mutation_test_1! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_1! with chunk size = 13 and tag = nothing
  ...testing mutation_test_1! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_1!),Float64}()
  ...testing mutation_test_2! with chunk size = 1 and tag = nothing
  ...testing mutation_test_2! with chunk size = 1 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 4 and tag = nothing
  ...testing mutation_test_2! with chunk size = 4 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 6 and tag = nothing
  ...testing mutation_test_2! with chunk size = 6 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 12 and tag = nothing
  ...testing mutation_test_2! with chunk size = 12 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing mutation_test_2! with chunk size = 13 and tag = nothing
  ...testing mutation_test_2! with chunk size = 13 and tag = ForwardDiff.Tag{typeof(DiffTests.mutation_test_2!),Float64}()
  ...testing specialized StaticArray codepaths
done (took 87.379972045 seconds).
Testing hessian functionality...
  ...running hardcoded test with chunk size = 1 and tag = nothing
  ...running hardcoded test with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...running hardcoded test with chunk size = 2 and tag = nothing
  ...running hardcoded test with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...running hardcoded test with chunk size = 3 and tag = nothing
  ...running hardcoded test with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_1 with chunk size = 1 and tag = nothing
  ...testing vec2num_1 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_1 with chunk size = 2 and tag = nothing
  ...testing vec2num_1 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_1 with chunk size = 3 and tag = nothing
  ...testing vec2num_1 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_2 with chunk size = 1 and tag = nothing
  ...testing vec2num_2 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_2 with chunk size = 2 and tag = nothing
  ...testing vec2num_2 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_2 with chunk size = 3 and tag = nothing
  ...testing vec2num_2 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_3 with chunk size = 1 and tag = nothing
  ...testing vec2num_3 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_3 with chunk size = 2 and tag = nothing
  ...testing vec2num_3 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_3 with chunk size = 3 and tag = nothing
  ...testing vec2num_3 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_4 with chunk size = 1 and tag = nothing
  ...testing vec2num_4 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_4 with chunk size = 2 and tag = nothing
  ...testing vec2num_4 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_4 with chunk size = 3 and tag = nothing
  ...testing vec2num_4 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_5 with chunk size = 1 and tag = nothing
  ...testing vec2num_5 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_5),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_5 with chunk size = 2 and tag = nothing
  ...testing vec2num_5 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_5),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_5 with chunk size = 3 and tag = nothing
  ...testing vec2num_5 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_5),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_6 with chunk size = 1 and tag = nothing
  ...testing vec2num_6 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_6),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_6 with chunk size = 2 and tag = nothing
  ...testing vec2num_6 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_6),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_6 with chunk size = 3 and tag = nothing
  ...testing vec2num_6 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_6),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_7 with chunk size = 1 and tag = nothing
  ...testing vec2num_7 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_7),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_7 with chunk size = 2 and tag = nothing
  ...testing vec2num_7 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_7),typeof(ForwardDiff.gradient)},Float64}()
  ...testing vec2num_7 with chunk size = 3 and tag = nothing
  ...testing vec2num_7 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.vec2num_7),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_1 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_1 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_1 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_1 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_1),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_2 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_2 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_2 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_2 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_2),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_3 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_3 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_3 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_3 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_3),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_4 with chunk size = 1 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_4 with chunk size = 2 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing rosenbrock_4 with chunk size = 3 and tag = nothing
  ...testing rosenbrock_4 with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.rosenbrock_4),typeof(ForwardDiff.gradient)},Float64}()
  ...testing ackley with chunk size = 1 and tag = nothing
  ...testing ackley with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.ackley),typeof(ForwardDiff.gradient)},Float64}()
  ...testing ackley with chunk size = 2 and tag = nothing
  ...testing ackley with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.ackley),typeof(ForwardDiff.gradient)},Float64}()
  ...testing ackley with chunk size = 3 and tag = nothing
  ...testing ackley with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.ackley),typeof(ForwardDiff.gradient)},Float64}()
  ...testing self_weighted_logit with chunk size = 1 and tag = nothing
  ...testing self_weighted_logit with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.self_weighted_logit),typeof(ForwardDiff.gradient)},Float64}()
  ...testing self_weighted_logit with chunk size = 2 and tag = nothing
  ...testing self_weighted_logit with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.self_weighted_logit),typeof(ForwardDiff.gradient)},Float64}()
  ...testing self_weighted_logit with chunk size = 3 and tag = nothing
  ...testing self_weighted_logit with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.self_weighted_logit),typeof(ForwardDiff.gradient)},Float64}()
  ...testing nested_array_mul with chunk size = 1 and tag = nothing
  ...testing nested_array_mul with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.nested_array_mul),typeof(ForwardDiff.gradient)},Float64}()
  ...testing nested_array_mul with chunk size = 2 and tag = nothing
  ...testing nested_array_mul with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.nested_array_mul),typeof(ForwardDiff.gradient)},Float64}()
  ...testing nested_array_mul with chunk size = 3 and tag = nothing
  ...testing nested_array_mul with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(DiffTests.nested_array_mul),typeof(ForwardDiff.gradient)},Float64}()
  ...testing first with chunk size = 1 and tag = nothing
  ...testing first with chunk size = 1 and tag = ForwardDiff.Tag{Tuple{typeof(first),typeof(ForwardDiff.gradient)},Float64}()
  ...testing first with chunk size = 2 and tag = nothing
  ...testing first with chunk size = 2 and tag = ForwardDiff.Tag{Tuple{typeof(first),typeof(ForwardDiff.gradient)},Float64}()
  ...testing first with chunk size = 3 and tag = nothing
  ...testing first with chunk size = 3 and tag = ForwardDiff.Tag{Tuple{typeof(first),typeof(ForwardDiff.gradient)},Float64}()
  ...testing specialized StaticArray codepaths
done (took 184.947794597 seconds).
Testing perturbation confusion functionality...
done (took 11.869227363 seconds).
Testing miscellaneous functionality...
done (took 31.324863739 seconds).
Testing allocations...
Test Summary:          | Pass  Total
Test seed! allocations |    4      4
done (took 0.116829556 seconds).
    Testing ForwardDiff tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2021-01-11T15:56:00.49
CPU usage: 432.43s (429.48s user, 3.43s kernel)

Network usage:
- eth0: 3.361 MiB received, 121.100 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":23,"op":"Read","minor":0},{"major":259,"value":19,"op":"Write","minor":0},{"major":259,"value":37,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":42,"op":"Total","minor":0}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":471040,"op":"Read","minor":0},{"major":259,"value":86016,"op":"Write","minor":0},{"major":259,"value":528384,"op":"Sync","minor":0},{"major":259,"value":28672,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":557056,"op":"Total","minor":0}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":316739584,"max_usage":1429798912,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":203751424,"inactive_file":135168,"inactive_anon":82993152,"total_pgfault":1764708,"total_cache":83775488,"total_rss_huge":0,"total_active_anon":203816960,"total_pgmajfault":0,"pgpgin":722073,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":0,"total_unevictable":0,"total_dirty":0,"writeback":0,"pgpgout":652364,"hierarchical_memsw_limit":0,"cache":83775488,"active_file":811008,"pgfault":1764708,"total_mapped_file":0,"total_pgpgout":652364,"total_writeback":0,"rss":203751424,"unevictable":0,"total_inactive_anon":82993152,"total_pgpgin":722073,"active_anon":203816960,"total_active_file":811008},"limit":67467247616},"name":"/ForwardDiff-ScGNEHlN","networks":{"eth0":{"rx_bytes":3524353,"rx_packets":2737,"tx_packets":1163,"tx_bytes":124006,"tx_dropped":0,"rx_dropped":0,"tx_errors":0,"rx_errors":0}},"id":"41c7bea7da7b4836f4b255f4683e51a30718608ace8623a32757888b11e7a9cd","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":44},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":7232646225808967,"online_cpus":64,"cpu_usage":{"usage_in_usermode":429480000000,"usage_in_kernelmode":3430000000,"total_usage":432432002938,"percpu_usage":[0,432431891179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4047,107712,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T15:56:00.492635169Z"}