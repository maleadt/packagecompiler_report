################################################################################
# PackageCompiler set-up: 2021-01-11T16:30:25.189
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0



################################################################################
# Installation: 2021-01-11T16:30:26.871
#

 Installing known registries into `~/.julia`
##########                                                                14.5%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed ArnoldiMethod ─── v0.1.0
  Installed StaticArrays ──── v1.0.1
  Installed PackageCompiler ─ v1.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [ec485272] + ArnoldiMethod v0.1.0
  [9b87118b] + PackageCompiler v1.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.1.0
  [9b87118b] + PackageCompiler v1.2.5
  [90137ffa] + StaticArrays v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Compiling: 2021-01-11T16:30:32.496
#

[ Info: PackageCompiler: creating system image object file, this might take a while...
Generated system image is 153.873 MiB, compilation took 180 seconds


################################################################################
# PkgEval set-up: 2021-01-11T16:33:39.715
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKGEVAL = true
  JULIA_PKG_PRECOMPILE_AUTO = 0

Base.julia_cmd() = `/usr/local/julia/bin/julia -Cnative -J/cache/ArnoldiMethod-qpmgFr0n.so -g1`


################################################################################
# Installation: 2021-01-11T16:33:41.309
#

 Installing known registries into `~/.julia`
#                                                                          1.9%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed ArnoldiMethod ─ v0.1.0
  Installed StaticArrays ── v1.0.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [ec485272] + ArnoldiMethod v0.1.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [ec485272] + ArnoldiMethod v0.1.0
  [90137ffa] + StaticArrays v1.0.1
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics


################################################################################
# Testing: 2021-01-11T16:33:45.59
#

    Testing ArnoldiMethod
Status `/tmp/jl_4l6rdb/Project.toml`
  [ec485272] ArnoldiMethod v0.1.0
  [90137ffa] StaticArrays v1.0.1
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_4l6rdb/Manifest.toml`
  [ec485272] ArnoldiMethod v0.1.0
  [90137ffa] StaticArrays v1.0.1
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Test Summary:  | Pass  Total
Initialization |    1      1
Test Summary:         | Pass  Total
Arnoldi Factorization |    4      4
Test Summary:      | Pass  Total
Invariant subspace |    2      2
Test Summary:   | Pass  Total
Givens rotation |   16     16
Test Summary:               | Pass  Total
Stable permutation ordering |   20     20
Test Summary:       | Pass  Total
Schur factorization |  104    104
Test Summary:                          | Pass  Total
Schur with nearly repeated eigenvalues |    1      1
Test Summary:                           | Pass  Total
Tiny sylvester equation Float64, (2, 2) |    2      2
Test Summary:                           | Pass  Total
Tiny sylvester equation Float64, (2, 1) |    2      2
Test Summary:                           | Pass  Total
Tiny sylvester equation Float64, (1, 2) |    2      2
Test Summary:                                    | Pass  Total
Tiny sylvester equation Complex{Float64}, (2, 2) |    2      2
Test Summary:                                    | Pass  Total
Tiny sylvester equation Complex{Float64}, (2, 1) |    2      2
Test Summary:                                    | Pass  Total
Tiny sylvester equation Complex{Float64}, (1, 2) |    2      2
Test Summary:              | Pass  Total
Singular sylvester Float64 |    3      3
Test Summary:                       | Pass  Total
Singular sylvester Complex{Float64} |    3      3
Test Summary:                             | Pass  Total
Reordering the Schur form 1 ↔ 1 (Float64) |    3      3
Test Summary:                                      | Pass  Total
Reordering the Schur form 1 ↔ 1 (Complex{Float64}) |    3      3
Test Summary:                             | Pass  Total
Reordering the Schur form 1 ↔ 2 (Float64) |    5      5
Test Summary:                                      | Pass  Total
Reordering the Schur form 1 ↔ 2 (Complex{Float64}) |    5      5
Test Summary:                             | Pass  Total
Reordering the Schur form 2 ↔ 1 (Float64) |    5      5
Test Summary:                                      | Pass  Total
Reordering the Schur form 2 ↔ 1 (Complex{Float64}) |    5      5
Test Summary:                             | Pass  Total
Reordering the Schur form 2 ↔ 2 (Float64) |    7      7
Test Summary:                                      | Pass  Total
Reordering the Schur form 2 ↔ 2 (Complex{Float64}) |    7      7
Test Summary:                          | Pass  Total
Rotation right with single eigenvalues |   12     12
Test Summary:                           | Pass  Total
Rotation right with two conjugate pairs |   10     10
Test Summary:                                    | Pass  Total
Rotation right with one 2 × 2 block on the right |   12     12
Test Summary:                                   | Pass  Total
Rotation right with one 2 × 2 block on the left |   12     12
Test Summary:     | Pass  Total
Stewart's example |    6      6
Test Summary:               | Pass  Total
Small eigenvalue separation |    4      4
Test Summary:                            | Pass  Total
Identical eigenvalues should not blow up |    3      3
Test Summary:                       | Pass  Total
Eigenvector upper triangular matrix |   80     80
Test Summary:                              | Pass  Total
Eigenvectors quasi-upper triangular matrix |   40     40
Test Summary:   | Pass  Total
Extract partial |    2      2
Test Summary:                        | Pass  Total
Zero eigenvalues & low-rank matrices |    5      5
Test Summary:     | Pass  Total
Right number type |    1      1
Test Summary:                          | Pass  Total
Find all eigenvalues of a small matrix |    2      2
Test Summary:   | Pass  Total
Incorrect input |    5      5
Test Summary:                   | Pass  Total
Target non-dominant eigenvalues |    1      1
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 1 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 2 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 3 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 4 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 5 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 6 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 7 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 8 |   11     11
Test Summary:                 | Pass  Total
Schur to eigen Float64 take 9 |   11     11
Test Summary:                  | Pass  Total
Schur to eigen Float64 take 10 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 1 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 2 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 3 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 4 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 5 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 6 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 7 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 8 |   11     11
Test Summary:                          | Pass  Total
Schur to eigen Complex{Float64} take 9 |   11     11
Test Summary:                           | Pass  Total
Schur to eigen Complex{Float64} take 10 |   11     11
    Testing ArnoldiMethod tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2021-01-11T16:34:19.657
CPU usage: 39.92s (37.45s user, 2.54s kernel)

Network usage:
- eth0: 2.748 MiB received, 42.196 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":19,"op":"Write","minor":0},{"major":259,"value":14,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":19,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":19,"op":"Write","minor":2},{"major":253,"value":14,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":19,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":77824,"op":"Write","minor":0},{"major":259,"value":57344,"op":"Sync","minor":0},{"major":259,"value":20480,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":77824,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":77824,"op":"Write","minor":2},{"major":253,"value":57344,"op":"Sync","minor":2},{"major":253,"value":20480,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":77824,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":328015872,"max_usage":577118208,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":217653248,"inactive_file":135168,"inactive_anon":80019456,"total_pgfault":473055,"total_cache":80662528,"total_rss_huge":0,"total_active_anon":218296320,"total_pgmajfault":0,"pgpgin":213774,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":140954,"hierarchical_memsw_limit":0,"cache":80662528,"active_file":135168,"pgfault":473055,"total_mapped_file":0,"total_pgpgout":140954,"total_writeback":0,"rss":217653248,"unevictable":0,"total_inactive_anon":80019456,"total_pgpgin":213774,"active_anon":218296320,"total_active_file":135168},"limit":540965302272},"name":"/ArnoldiMethod-Gx6x5Et9","networks":{"eth0":{"rx_bytes":2881108,"rx_packets":476,"tx_packets":476,"tx_bytes":43209,"tx_dropped":0,"rx_dropped":2,"tx_errors":0,"rx_errors":0}},"id":"4414d9ddb9a3f7dd5603938f3581c5fb7a0bdb7cdf86da369ae3da30da64cfbd","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":44},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":3702300604522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":37450000000,"usage_in_kernelmode":2540000000,"total_usage":39919212453,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,39919209673,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2780,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T16:34:19.660025338Z"}