################################################################################
# PkgEval set-up: 2021-01-11T22:30:33.828
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T22:30:35.67
#

 Installing known registries into `~/.julia`
######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed WebDriver ────────── v0.1.1
  Installed MbedTLS_jll ──────── v2.16.8+1
  Installed MbedTLS ──────────── v1.0.3
  Installed UnPack ───────────── v1.0.2
  Installed JSON3 ────────────── v1.5.1
  Installed Parameters ───────── v0.12.1
  Installed JLLWrappers ──────── v1.2.0
  Installed HTTP ─────────────── v0.8.19
  Installed StructTypes ──────── v1.2.1
  Installed Parsers ──────────── v1.0.15
  Installed OrderedCollections ─ v1.3.2
  Installed IniFile ──────────── v0.5.0
  Installed Artifacts ────────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [05625dda] + WebDriver v0.1.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [cd3eb016] + HTTP v0.8.19
  [83e8ac13] + IniFile v0.5.0
  [692b3bcd] + JLLWrappers v1.2.0
  [0f8b85d8] + JSON3 v1.5.1
  [739be429] + MbedTLS v1.0.3
  [c8ffd9c3] + MbedTLS_jll v2.16.8+1
  [bac558e1] + OrderedCollections v1.3.2
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.15
  [856f2bd8] + StructTypes v1.2.1
  [3a884ed6] + UnPack v1.0.2
  [05625dda] + WebDriver v0.1.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode


################################################################################
# Testing: 2021-01-11T22:30:41.194
#

    Testing WebDriver
Status `/tmp/jl_tIAp0S/Project.toml`
  [e30172f5] Documenter v0.26.1
  [cd3eb016] HTTP v0.8.19
  [0f8b85d8] JSON3 v1.5.1
  [d96e819e] Parameters v0.12.1
  [05625dda] WebDriver v0.1.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8dfed614] Test
Status `/tmp/jl_tIAp0S/Manifest.toml`
  [56f22d72] Artifacts v1.3.0
  [ffbed154] DocStringExtensions v0.8.3
  [e30172f5] Documenter v0.26.1
  [cd3eb016] HTTP v0.8.19
  [b5f81e59] IOCapture v0.1.1
  [83e8ac13] IniFile v0.5.0
  [692b3bcd] JLLWrappers v1.2.0
  [682c06a0] JSON v0.21.1
  [0f8b85d8] JSON3 v1.5.1
  [739be429] MbedTLS v1.0.3
  [c8ffd9c3] MbedTLS_jll v2.16.8+1
  [bac558e1] OrderedCollections v1.3.2
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.15
  [856f2bd8] StructTypes v1.2.1
  [3a884ed6] UnPack v1.0.2
  [05625dda] WebDriver v0.1.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: SetupBuildDirectory: setting up build directory.
[ Info: Doctest: running doctests.
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/04_WebDriver.jl:10-18
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> status(wd) # Ready to accept new sessions?
│ true
│ ```
│ 
│ Subexpression:
│ 
│ status(wd) # Ready to accept new sessions?
│ 
│ Evaluated output:
│ 
│ ERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/status))
│ 
│ Stacktrace:
│  [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:525
│  [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:560 [inlined]
│  [3] connect(::Sockets.IPv4, ::UInt64) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:546
│  [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:630
│  [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:597 [inlined]
│  [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:541
│  [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionRequest.jl:73
│  [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:19
│  [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at ./error.jl:301
│  [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RetryRequest.jl:44 [inlined]
│  [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/MessageRequest.jl:51
│  [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/BasicAuthRequest.jl:28
│  [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:24
│  [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:21
│  [15] request(::String, ::String, ::Array{Pair{String,String},1}, ::Array{UInt8,1}; headers::Array{Pair{String,String},1}, body::Array{UInt8,1}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314
│  [16] request at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314 [inlined] (repeats 2 times)
│  [17] #get#12 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:391 [inlined]
│  [18] get at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:391 [inlined]
│  [19] status(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/bGMZk/src/02_commands/01_Sessions/03_Status.jl:8
│  [20] top-level scope at none:1
│ 
│ Expected output:
│ 
│ true
│ 
│   diff =
│    Warning: Diff output requires color.
│    trueERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/status))
│    
│    Stacktrace:
│     [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:525
│     [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:560 [inlined]
│     [3] connect(::Sockets.IPv4, ::UInt64) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:546
│     [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:630
│     [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:597 [inlined]
│     [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:541
│     [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::Array{UInt8,1}; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionRequest.jl:73
│     [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:19
│     [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at ./error.jl:301
│     [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RetryRequest.jl:44 [inlined]
│     [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/MessageRequest.jl:51
│     [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/BasicAuthRequest.jl:28
│     [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:24
│     [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::Array{UInt8,1}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:21
│     [15] request(::String, ::String, ::Array{Pair{String,String},1}, ::Array{UInt8,1}; headers::Array{Pair{String,String},1}, body::Array{UInt8,1}, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314
│     [16] request at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314 [inlined] (repeats 2 times)
│     [17] #get#12 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:391 [inlined]
│     [18] get at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:391 [inlined]
│     [19] status(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/bGMZk/src/02_commands/01_Sessions/03_Status.jl:8
│     [20] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:6-17
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ session = Session(wd)
│ 
│ Evaluated output:
│ 
│ ERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│ 
│ Stacktrace:
│  [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:525
│  [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:560 [inlined]
│  [3] connect(::Sockets.IPv4, ::UInt64) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:546
│  [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:630
│  [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:597 [inlined]
│  [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:541
│  [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionRequest.jl:73
│  [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:19
│  [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at ./error.jl:301
│  [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RetryRequest.jl:44 [inlined]
│  [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/MessageRequest.jl:51
│  [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/BasicAuthRequest.jl:28
│  [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:24
│  [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:21
│  [15] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314
│  [16] request at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314 [inlined]
│  [17] #post#14 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│  [18] post at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│  [19] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:26
│  [20] top-level scope at none:1
│ 
│ Expected output:
│ 
│ Session
│ 
│   diff =
│    Warning: Diff output requires color.
│    SessionERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│    
│    Stacktrace:
│     [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:525
│     [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:560 [inlined]
│     [3] connect(::Sockets.IPv4, ::UInt64) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:546
│     [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:630
│     [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:597 [inlined]
│     [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:541
│     [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionRequest.jl:73
│     [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:19
│     [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at ./error.jl:301
│     [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RetryRequest.jl:44 [inlined]
│     [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/MessageRequest.jl:51
│     [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/BasicAuthRequest.jl:28
│     [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:24
│     [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:21
│     [15] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314
│     [16] request at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314 [inlined]
│     [17] #post#14 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│     [18] post at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│     [19] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:26
│     [20] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:6-17
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ isa(session, Session)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ true
│ 
│   diff =
│    Warning: Diff output requires color.
│    trueERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:6-17
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ 
│ ```
│ 
│ Subexpression:
│ 
│ delete!(session);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/06_Element.jl:9-20
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ ```
│ 
│ Subexpression:
│ 
│ session = Session(wd)
│ 
│ Evaluated output:
│ 
│ ERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│ 
│ Stacktrace:
│  [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:525
│  [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:560 [inlined]
│  [3] connect(::Sockets.IPv4, ::UInt64) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:546
│  [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:630
│  [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:597 [inlined]
│  [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:541
│  [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionRequest.jl:73
│  [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:19
│  [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at ./error.jl:301
│  [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RetryRequest.jl:44 [inlined]
│  [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/MessageRequest.jl:51
│  [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/BasicAuthRequest.jl:28
│  [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:24
│  [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:21
│  [15] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314
│  [16] request at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314 [inlined]
│  [17] #post#14 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│  [18] post at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│  [19] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:26
│  [20] top-level scope at none:1
│ 
│ Expected output:
│ 
│ Session
│ 
│   diff =
│    Warning: Diff output requires color.
│    SessionERROR: IOError(Base.IOError("connect: connection refused (ECONNREFUSED)", -111) during request(http://localhost:4444/wd/hub/session))
│    
│    Stacktrace:
│     [1] wait_connected(::Sockets.TCPSocket) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:525
│     [2] connect at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:560 [inlined]
│     [3] connect(::Sockets.IPv4, ::UInt64) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Sockets/src/Sockets.jl:546
│     [4] getconnection(::Type{Sockets.TCPSocket}, ::SubString{String}, ::SubString{String}; keepalive::Bool, connect_timeout::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol,Symbol},NamedTuple{(:require_ssl_verification, :iofunction, :reached_redirect_limit),Tuple{Bool,Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:630
│     [5] #newconnection#25 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:597 [inlined]
│     [6] getconnection(::Type{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}, ::SubString{String}, ::SubString{String}; connection_limit::Int64, pipeline_limit::Int64, idle_timeout::Int64, reuse_limit::Int64, require_ssl_verification::Bool, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionPool.jl:541
│     [7] request(::Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}, ::HTTP.URIs.URI, ::HTTP.Messages.Request, ::String; proxy::Nothing, socket_type::Type{T} where T, reuse_limit::Int64, kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ConnectionRequest.jl:73
│     [8] request(::Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}, ::HTTP.URIs.URI, ::Vararg{Any,N} where N; kw::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/ExceptionRequest.jl:19
│     [9] (::Base.var"#56#58"{Base.var"#56#57#59"{ExponentialBackOff,HTTP.RetryRequest.var"#2#3"{Bool,HTTP.Messages.Request},typeof(HTTP.request)}})(::Type{T} where T, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Symbol,Union{Nothing, Bool},Tuple{Symbol,Symbol},NamedTuple{(:iofunction, :reached_redirect_limit),Tuple{Nothing,Bool}}}) at ./error.jl:301
│     [10] #request#1 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RetryRequest.jl:44 [inlined]
│     [11] request(::Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; http_version::VersionNumber, target::String, parent::Nothing, iofunction::Nothing, kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/MessageRequest.jl:51
│     [12] request(::Type{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; kw::Base.Iterators.Pairs{Symbol,Bool,Tuple{Symbol},NamedTuple{(:reached_redirect_limit,),Tuple{Bool}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/BasicAuthRequest.jl:28
│     [13] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String; redirect_limit::Int64, forwardheaders::Bool, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:24
│     [14] request(::Type{HTTP.RedirectRequest.RedirectLayer{HTTP.BasicAuthRequest.BasicAuthLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer{Union{}}}}}}}}}, ::String, ::HTTP.URIs.URI, ::Array{Pair{SubString{String},SubString{String}},1}, ::String) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/RedirectRequest.jl:21
│     [15] request(::String, ::String, ::Array{Pair{String,String},1}, ::String; headers::Array{Pair{String,String},1}, body::String, query::Nothing, kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314
│     [16] request at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:314 [inlined]
│     [17] #post#14 at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│     [18] post at /home/pkgeval/.julia/packages/HTTP/IAI92/src/HTTP.jl:405 [inlined]
│     [19] Session(::RemoteWebDriver{Capabilities{Nothing,Nothing,Nothing,Nothing}}) at /home/pkgeval/.julia/packages/WebDriver/bGMZk/src/01_structs/05_Session.jl:26
│     [20] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/06_Element.jl:9-20
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ ```
│ 
│ Subexpression:
│ 
│ isa(session, Session)
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ true
│ 
│   diff =
│    Warning: Diff output requires color.
│    trueERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: doctest failure in ~/.julia/packages/WebDriver/bGMZk/src/01_structs/06_Element.jl:9-20
│ 
│ ```jldoctest
│ julia> capabilities = Capabilities("chrome")
│ Remote WebDriver Capabilities
│ browserName: chrome
│ julia> wd = RemoteWebDriver(capabilities, host = ENV["WEBDRIVER_HOST"], port = parse(Int, ENV["WEBDRIVER_PORT"]))
│ Remote WebDriver
│ julia> session = Session(wd)
│ Session
│ julia> isa(session, Session)
│ true
│ julia> delete!(session);
│ ```
│ 
│ Subexpression:
│ 
│ delete!(session);
│ 
│ Evaluated output:
│ 
│ ERROR: UndefVarError: session not defined
│ Stacktrace:
│  [1] top-level scope at none:1
│ 
│ Expected output:
│ 
│ 
│ 
│   diff =
│    Warning: Diff output requires color.
│    ERROR: UndefVarError: session not defined
│    Stacktrace:
│     [1] top-level scope at none:1
└ @ Documenter.DocTests ~/.julia/packages/Documenter/FuXcO/src/DocTests.jl:369
┌ Error: Doctesting failed
│   exception =
│    `makedocs` encountered a doctest error. Terminating build
│    Stacktrace:
│     [1] error(::String) at ./error.jl:33
│     [2] runner(::Type{Documenter.Builder.Doctest}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Builder.jl:217
│     [3] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Utilities/Selectors.jl:170
│     [4] #2 at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:249 [inlined]
│     [5] cd(::Documenter.var"#2#3"{Documenter.Documents.Document}, ::String) at ./file.jl:104
│     [6] makedocs(; debug::Bool, format::Documenter.Writers.HTMLWriter.HTML, kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{6,Symbol},NamedTuple{(:root, :source, :sitename, :doctest, :modules, :doctestfilters),Tuple{String,String,String,Symbol,Array{Module,1},Array{Regex,1}}}}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:248
│     [7] (::Documenter.var"#all_doctests#35"{Bool,Array{Regex,1},Array{Module,1}})() at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:813
│     [8] macro expansion at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830 [inlined]
│     [9] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
│     [10] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String, doctestfilters::Array{Regex,1}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830
│     [11] doctest(::Module; manual::Bool, testset::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:769
│     [12] doctest(::Module) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:756
│     [13] top-level scope at /home/pkgeval/.julia/packages/WebDriver/bGMZk/test/runtests.jl:10
│     [14] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
│     [15] top-level scope at /home/pkgeval/.julia/packages/WebDriver/bGMZk/test/runtests.jl:10
│     [16] include(::String) at ./client.jl:457
│     [17] top-level scope at none:6
│     [18] eval(::Module, ::Any) at ./boot.jl:331
│     [19] exec_options(::Base.JLOptions) at ./client.jl:272
│     [20] _start() at ./client.jl:506
└ @ Documenter ~/.julia/packages/Documenter/FuXcO/src/Documenter.jl:823
Doctests: WebDriver: Test Failed at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830
  Expression: all_doctests()
Stacktrace:
 [1] macro expansion at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830 [inlined]
 [2] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115 [inlined]
 [3] doctest(::String, ::Array{Module,1}; fix::Bool, testset::String, doctestfilters::Array{Regex,1}) at /home/pkgeval/.julia/packages/Documenter/FuXcO/src/Documenter.jl:830
Test Summary:         | Fail  Total
WebDriver             |    1      1
  Doctests: WebDriver |    1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/WebDriver/bGMZk/test/runtests.jl:9

PkgEval failed: Package WebDriver errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T22:31:55.338
CPU usage: 58.80s (53.64s user, 5.27s kernel)

Network usage:
- eth0: 3.666 MiB received, 105.520 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":24,"op":"Write","minor":0},{"major":259,"value":19,"op":"Sync","minor":0},{"major":259,"value":5,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":24,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":24,"op":"Write","minor":2},{"major":253,"value":19,"op":"Sync","minor":2},{"major":253,"value":5,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":24,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":131072,"op":"Write","minor":0},{"major":259,"value":106496,"op":"Sync","minor":0},{"major":259,"value":24576,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":131072,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":131072,"op":"Write","minor":2},{"major":253,"value":106496,"op":"Sync","minor":2},{"major":253,"value":24576,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":131072,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":326553600,"max_usage":1085652992,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":201330688,"inactive_file":135168,"inactive_anon":82857984,"total_pgfault":1434378,"total_cache":94347264,"total_rss_huge":0,"total_active_anon":212889600,"total_pgmajfault":0,"pgpgin":920007,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":847799,"hierarchical_memsw_limit":0,"cache":94347264,"active_file":135168,"pgfault":1434378,"total_mapped_file":0,"total_pgpgout":847799,"total_writeback":0,"rss":201330688,"unevictable":0,"total_inactive_anon":82857984,"total_pgpgin":920007,"active_anon":212889600,"total_active_file":135168},"limit":540965302272},"name":"/WebDriver-uWx7ZnY1","networks":{"eth0":{"rx_bytes":3844118,"rx_packets":832,"tx_packets":908,"tx_bytes":108052,"tx_dropped":0,"rx_dropped":3,"tx_errors":0,"rx_errors":0}},"id":"947a5629e366e87e5481970fe2cf29d0243d1341db19e2a36e4800f7c6d09d2a","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":6443908794522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":53640000000,"usage_in_kernelmode":5270000000,"total_usage":58796712799,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58795993288,719511,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T22:31:55.371785381Z"}