################################################################################
# PkgEval set-up: 2021-01-11T17:35:10.599
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD Ryzen Threadripper 2990WX 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver1)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T17:35:12.089
#

 Installing known registries into `~/.julia`
#=#=#                                                                         ##########################################                                58.6%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed DiffEqGPU ──────────────────── v1.9.1
  Installed NonlinearSolve ─────────────── v0.3.4
  Installed NNlib ──────────────────────── v0.7.11
  Installed GPUCompiler ────────────────── v0.8.3
  Installed DataAPI ────────────────────── v1.4.0
  Installed Compat ─────────────────────── v3.25.0
  Installed DiffEqBase ─────────────────── v6.53.4
  Installed MacroTools ─────────────────── v0.5.6
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed TreeViews ──────────────────── v0.3.0
  Installed CpuId ──────────────────────── v0.2.2
  Installed RecursiveArrayTools ────────── v2.10.0
  Installed BFloat16s ──────────────────── v0.1.0
  Installed LLVM ───────────────────────── v3.5.2
  Installed DataValueInterfaces ────────── v1.0.0
  Installed DiffRules ──────────────────── v1.0.2
  Installed Cassette ───────────────────── v0.3.4
  Installed MuladdMacro ────────────────── v0.2.2
  Installed Artifacts ──────────────────── v1.3.0
  Installed ForwardDiff ────────────────── v0.10.14
  Installed Adapt ──────────────────────── v3.0.0
  Installed KernelAbstractions ─────────── v0.4.6
  Installed VectorizationBase ──────────── v0.12.33
  Installed DocStringExtensions ────────── v0.8.3
  Installed RecipesBase ────────────────── v1.1.1
  Installed ExprTools ──────────────────── v0.1.3
  Installed Requires ───────────────────── v1.1.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed TableTraits ────────────────── v1.0.0
  Installed StaticArrays ───────────────── v1.0.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed LoopVectorization ──────────── v0.8.26
  Installed JLLWrappers ────────────────── v1.2.0
  Installed CUDA ───────────────────────── v2.4.0
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed NaNMath ────────────────────── v0.3.5
  Installed ConstructionBase ───────────── v1.0.0
  Installed ChainRulesCore ─────────────── v0.9.24
  Installed ZygoteRules ────────────────── v0.2.1
  Installed Scratch ────────────────────── v1.0.3
  Installed IterativeSolvers ───────────── v0.9.0
  Installed OffsetArrays ───────────────── v1.3.1
  Installed SpecialFunctions ───────────── v1.2.1
  Installed UnPack ─────────────────────── v1.0.2
  Installed Tables ─────────────────────── v1.2.2
  Installed GPUArrays ──────────────────── v6.2.0
  Installed OrderedCollections ─────────── v1.3.2
  Installed Setfield ───────────────────── v0.7.0
  Installed RecursiveFactorization ─────── v0.1.6
  Installed CommonSubexpressions ───────── v0.3.0
  Installed DataStructures ─────────────── v0.18.8
  Installed FiniteDiff ─────────────────── v2.7.2
  Installed LabelledArrays ─────────────── v1.4.0
  Installed DiffResults ────────────────── v1.0.3
  Installed Parameters ─────────────────── v0.12.1
  Installed TimerOutputs ───────────────── v0.5.7
  Installed SIMDPirates ────────────────── v0.8.26
  Installed Reexport ───────────────────── v0.2.0
  Installed ArrayInterface ─────────────── v2.14.13
  Installed CEnum ──────────────────────── v0.4.1
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
Updating `~/.julia/environments/v1.5/Project.toml`
  [071ae1c0] + DiffEqGPU v1.9.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v3.0.0
  [4fba245c] + ArrayInterface v2.14.13
  [56f22d72] + Artifacts v1.3.0
  [ab4f0b2a] + BFloat16s v0.1.0
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v2.4.0
  [7057c7e9] + Cassette v0.3.4
  [d360d2e6] + ChainRulesCore v0.9.24
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.25.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.53.4
  [071ae1c0] + DiffEqGPU v1.9.1
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [ffbed154] + DocStringExtensions v0.8.3
  [e2ba6199] + ExprTools v0.1.3
  [6a86dc24] + FiniteDiff v2.7.2
  [f6369f11] + ForwardDiff v0.10.14
  [069b7b12] + FunctionWrappers v1.1.1
  [0c68f7d7] + GPUArrays v6.2.0
  [61eb1bfa] + GPUCompiler v0.8.3
  [42fd0dbc] + IterativeSolvers v0.9.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.2.0
  [63c18a36] + KernelAbstractions v0.4.6
  [929cbde3] + LLVM v3.5.2
  [2ee39098] + LabelledArrays v1.4.0
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.6
  [46d2c3a1] + MuladdMacro v0.2.2
  [872c559c] + NNlib v0.7.11
  [77ba4419] + NaNMath v0.3.5
  [8913a72c] + NonlinearSolve v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [bac558e1] + OrderedCollections v1.3.2
  [d96e819e] + Parameters v0.12.1
  [3cdcf5f2] + RecipesBase v1.1.1
  [731186ca] + RecursiveArrayTools v2.10.0
  [f2c3362d] + RecursiveFactorization v0.1.6
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.1.2
  [21efa798] + SIMDPirates v0.8.26
  [476501e8] + SLEEFPirates v0.5.5
  [6c6a2e73] + Scratch v1.0.3
  [efcf1570] + Setfield v0.7.0
  [276daf66] + SpecialFunctions v1.2.1
  [90137ffa] + StaticArrays v1.0.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.2.2
  [a759f4b9] + TimerOutputs v0.5.7
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [700de1a5] + ZygoteRules v0.2.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`


################################################################################
# Testing: 2021-01-11T17:35:26.391
#

    Testing DiffEqGPU
┌ Error: Pkg.Resolve.ResolverError("Unsatisfiable requirements detected for package Adapt [79e6a3ab]:\n Adapt [79e6a3ab] log:\n ├─possible versions are: [0.3.0-0.3.1, 0.4.0-0.4.2, 1.0.0-1.0.1, 1.1.0, 2.0.0-2.0.2, 2.1.0, 2.2.0, 2.3.0, 2.4.0, 3.0.0] or uninstalled\n ├─restricted to versions 3.0.0 by an explicit requirement, leaving only versions 3.0.0\n └─restricted by compatibility requirements with Flux [587475ba] to versions: [0.3.0-0.3.1, 0.4.0-0.4.2, 1.0.0-1.0.1, 1.1.0, 2.0.0-2.0.2, 2.1.0, 2.2.0, 2.3.0, 2.4.0] — no versions left\n   └─Flux [587475ba] log:\n     ├─possible versions are: [0.4.1, 0.5.0-0.5.4, 0.6.0-0.6.10, 0.7.0-0.7.3, 0.8.0-0.8.3, 0.9.0, 0.10.0-0.10.4, 0.11.0-0.11.3] or uninstalled\n     ├─restricted to versions * by an explicit requirement, leaving only versions [0.4.1, 0.5.0-0.5.4, 0.6.0-0.6.10, 0.7.0-0.7.3, 0.8.0-0.8.3, 0.9.0, 0.10.0-0.10.4, 0.11.0-0.11.3]\n     └─restricted by compatibility requirements with Requires [ae029012] to versions: [0.8.3, 0.9.0, 0.10.0-0.10.4, 0.11.0-0.11.3] or uninstalled, leaving only versions: [0.8.3, 0.9.0, 0.10.0-0.10.4, 0.11.0-0.11.3]\n       └─Requires [ae029012] log:\n         ├─possible versions are: [0.5.0-0.5.2, 1.0.0-1.0.3, 1.1.0-1.1.2] or uninstalled\n         └─restricted to versions 1.1.2 by an explicit requirement, leaving only versions 1.1.2", nothing)
└ @ Pkg.Operations /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1427
Status `/tmp/jl_ENfJep/Project.toml`
  [052768ef] CUDA v2.4.0
  [2b5f629d] DiffEqBase v6.53.4
  [071ae1c0] DiffEqGPU v1.9.1
  [41bf760c] DiffEqSensitivity v6.40.0
  [587475ba] Flux v0.11.3
  [f6369f11] ForwardDiff v0.10.14
  [63c18a36] KernelAbstractions v0.4.6
  [1dea7af3] OrdinaryDiffEq v5.49.1
  [731186ca] RecursiveArrayTools v2.10.0
  [1bc83da4] SafeTestsets v0.0.1
  [789caeaf] StochasticDiffEq v6.30.1
  [1986cc42] Unitful v1.5.0
  [700de1a5] ZygoteRules v0.2.1
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_ENfJep/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.4.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.14.13
  [4c555306] ArrayLayouts v0.4.12
  [56f22d72] Artifacts v1.3.0
  [ab4f0b2a] BFloat16s v0.1.0
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v2.4.0
  [7057c7e9] Cassette v0.3.4
  [082447d4] ChainRules v0.7.45
  [d360d2e6] ChainRulesCore v0.9.24
  [944b1d66] CodecZlib v0.7.0
  [3da002f7] ColorTypes v0.10.9
  [5ae59095] Colors v0.12.6
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.25.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.53.4
  [459566f4] DiffEqCallbacks v2.16.0
  [071ae1c0] DiffEqGPU v1.9.1
  [c894b116] DiffEqJump v6.12.2
  [77a26b50] DiffEqNoiseProcess v5.5.0
  [41bf760c] DiffEqSensitivity v6.40.0
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [b4f34e82] Distances v0.10.0
  [31c24e10] Distributions v0.24.10
  [ffbed154] DocStringExtensions v0.8.3
  [d4d017d3] ExponentialUtilities v1.8.0
  [e2ba6199] ExprTools v0.1.3
  [7a1cc6ca] FFTW v1.3.0
  [f5851436] FFTW_jll v3.3.9+7
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.10.2
  [6a86dc24] FiniteDiff v2.7.2
  [53c48c17] FixedPointNumbers v0.8.4
  [587475ba] Flux v0.11.3
  [f6369f11] ForwardDiff v0.10.14
  [069b7b12] FunctionWrappers v1.1.1
  [d9f16b24] Functors v0.1.0
  [0c68f7d7] GPUArrays v6.2.0
  [61eb1bfa] GPUCompiler v0.8.3
  [01680d73] GenericSVD v0.3.0
  [af5da776] GlobalSensitivity v0.0.1
  [7869d1d1] IRTools v0.4.2
  [d25df0c9] Inflate v0.1.2
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [42fd0dbc] IterativeSolvers v0.9.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.2.0
  [e5e0dc1b] Juno v0.8.4
  [63c18a36] KernelAbstractions v0.4.6
  [929cbde3] LLVM v3.5.2
  [2ee39098] LabelledArrays v1.4.0
  [a5e1c1ea] LatinHypercubeSampling v1.7.3
  [73f95e8e] LatticeRules v0.0.1
  [093fc24a] LightGraphs v1.3.4
  [d3d80556] LineSearches v7.1.1
  [bdcacae8] LoopVectorization v0.8.26
  [856f044c] MKL_jll v2020.2.254+0
  [1914dd2f] MacroTools v0.5.6
  [e89f7d12] Media v0.5.0
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.5.1
  [872c559c] NNlib v0.7.11
  [77ba4419] NaNMath v0.3.5
  [8913a72c] NonlinearSolve v0.3.4
  [6fe1bfb0] OffsetArrays v1.5.0
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [bac558e1] OrderedCollections v1.3.2
  [1dea7af3] OrdinaryDiffEq v5.49.1
  [90014a1f] PDMats v0.10.1
  [d96e819e] Parameters v0.12.1
  [e409e4f3] PoissonRandom v0.4.0
  [1fd47b50] QuadGK v2.4.1
  [8a4e6c94] QuasiMonteCarlo v0.2.2
  [74087812] Random123 v1.2.0
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.1.1
  [731186ca] RecursiveArrayTools v2.10.0
  [f2c3362d] RecursiveFactorization v0.1.6
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.1.2
  [ae5879a3] ResettableStacks v1.1.0
  [37e2e3b7] ReverseDiff v1.5.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [21efa798] SIMDPirates v0.8.26
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [6c6a2e73] Scratch v1.0.3
  [efcf1570] Setfield v0.7.0
  [699a6c99] SimpleTraits v0.9.3
  [ed01d8cd] Sobol v1.4.0
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.12.0
  [276daf66] SpecialFunctions v1.2.1
  [860ef19b] StableRNGs v1.0.0
  [90137ffa] StaticArrays v0.12.5
  [2913bbd2] StatsBase v0.33.2
  [4c63d2b9] StatsFuns v0.9.6
  [789caeaf] StochasticDiffEq v6.30.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.2.2
  [a759f4b9] TimerOutputs v0.5.7
  [9f7883ad] Tracker v0.2.14
  [3bb67fe8] TranscodingStreams v0.9.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v1.5.0
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [a5390f91] ZipFile v0.9.3
  [83775a58] Zlib_jll v1.2.11+18
  [e88e6eb3] Zygote v0.5.17
  [700de1a5] ZygoteRules v0.2.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [9abbd945] Profile
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Explicit Methods
Downloading artifact: CUDA110
[?25l#=#=#                                                                                                                                                    0.1%                                                                           0.5%                                                                           0.8%                                                                           1.1%#                                                                          1.4%#                                                                          1.8%#                                                                          2.1%#                                                                          2.5%##                                                                         2.8%##                                                                         3.2%##                                                                         3.5%##                                                                         3.9%###                                                                        4.2%###                                                                        4.6%###                                                                        5.0%###                                                                        5.4%####                                                                       5.8%####                                                                       6.1%####                                                                       6.5%####                                                                       6.9%#####                                                                      7.3%#####                                                                      7.7%#####                                                                      8.1%######                                                                     8.5%######                                                                     8.9%######                                                                     9.4%#######                                                                    9.8%#######                                                                   10.2%#######                                                                   10.6%#######                                                                   11.0%########                                                                  11.4%########                                                                  11.7%########                                                                  11.9%########                                                                  12.2%########                                                                  12.4%#########                                                                 12.6%#########                                                                 12.8%#########                                                                 13.1%#########                                                                 13.3%#########                                                                 13.5%#########                                                                 13.8%##########                                                                14.0%##########                                                                14.3%##########                                                                14.5%##########                                                                14.8%##########                                                                15.0%##########                                                                15.3%###########                                                               15.5%###########                                                               15.8%###########                                                               16.1%###########                                                               16.3%###########                                                               16.6%############                                                              16.9%############                                                              17.2%############                                                              17.5%############                                                              17.7%############                                                              17.9%############                                                              18.0%#############                                                             18.3%#############                                                             18.5%#############                                                             18.7%#############                                                             18.9%#############                                                             19.2%#############                                                             19.4%##############                                                            19.6%##############                                                            19.9%##############                                                            20.1%##############                                                            20.4%##############                                                            20.6%###############                                                           20.9%###############                                                           21.1%###############                                                           21.4%###############                                                           21.6%###############                                                           21.9%###############                                                           22.2%################                                                          22.4%################                                                          22.7%################                                                          23.0%################                                                          23.3%################                                                          23.6%#################                                                         23.8%#################                                                         24.1%#################                                                         24.3%#################                                                         24.6%#################                                                         24.8%##################                                                        25.0%##################                                                        25.2%##################                                                        25.4%##################                                                        25.7%##################                                                        25.9%##################                                                        26.2%###################                                                       26.4%###################                                                       26.6%###################                                                       26.9%###################                                                       27.1%###################                                                       27.4%###################                                                       27.6%####################                                                      27.9%####################                                                      28.2%####################                                                      28.4%####################                                                      28.7%####################                                                      29.0%#####################                                                     29.2%#####################                                                     29.5%#####################                                                     29.8%#####################                                                     30.1%#####################                                                     30.4%######################                                                    30.7%######################                                                    31.0%######################                                                    31.3%######################                                                    31.6%######################                                                    31.9%#######################                                                   32.2%#######################                                                   32.5%#######################                                                   32.8%#######################                                                   33.2%########################                                                  33.5%########################                                                  33.8%########################                                                  34.2%########################                                                  34.5%#########################                                                 34.8%#########################                                                 35.2%#########################                                                 35.5%#########################                                                 35.9%##########################                                                36.2%##########################                                                36.6%##########################                                                36.9%##########################                                                37.3%###########################                                               37.7%###########################                                               38.0%###########################                                               38.4%###########################                                               38.8%############################                                              39.2%############################                                              39.6%############################                                              40.0%#############################                                             40.4%#############################                                             40.7%#############################                                             41.1%#############################                                             41.5%##############################                                            41.9%##############################                                            42.3%##############################                                            42.6%##############################                                            42.8%##############################                                            43.0%###############################                                           43.2%###############################                                           43.4%###############################                                           43.6%###############################                                           43.9%###############################                                           44.1%###############################                                           44.3%################################                                          44.5%################################                                          44.7%################################                                          44.9%################################                                          45.0%################################                                          45.2%################################                                          45.4%################################                                          45.6%################################                                          45.7%#################################                                         45.9%#################################                                         46.1%#################################                                         46.3%#################################                                         46.5%#################################                                         46.7%#################################                                         46.9%#################################                                         47.1%##################################                                        47.3%##################################                                        47.6%##################################                                        47.8%##################################                                        48.0%##################################                                        48.2%##################################                                        48.4%###################################                                       48.7%###################################                                       48.9%###################################                                       49.2%###################################                                       49.4%###################################                                       49.7%###################################                                       49.9%####################################                                      50.2%####################################                                      50.4%####################################                                      50.7%####################################                                      51.0%####################################                                      51.2%#####################################                                     51.5%#####################################                                     51.8%#####################################                                     52.1%#####################################                                     52.3%#####################################                                     52.6%######################################                                    52.9%######################################                                    53.2%######################################                                    53.5%######################################                                    53.8%######################################                                    54.1%#######################################                                   54.4%#######################################                                   54.7%#######################################                                   55.1%#######################################                                   55.4%########################################                                  55.7%########################################                                  56.0%########################################                                  56.4%########################################                                  56.7%#########################################                                 57.0%#########################################                                 57.4%#########################################                                 57.7%#########################################                                 58.1%#########################################                                 58.3%##########################################                                58.5%##########################################                                58.7%##########################################                                58.9%##########################################                                59.1%##########################################                                59.2%##########################################                                59.4%##########################################                                59.6%###########################################                               59.8%###########################################                               60.0%###########################################                               60.2%###########################################                               60.5%###########################################                               60.7%###########################################                               60.9%###########################################                               61.1%############################################                              61.3%############################################                              61.6%############################################                              61.8%############################################                              62.0%############################################                              62.3%#############################################                             62.5%#############################################                             62.7%#############################################                             62.9%#############################################                             63.1%#############################################                             63.2%#############################################                             63.4%#############################################                             63.6%#############################################                             63.8%##############################################                            64.0%##############################################                            64.2%##############################################                            64.4%##############################################                            64.6%##############################################                            64.8%##############################################                            65.0%##############################################                            65.3%###############################################                           65.5%###############################################                           65.7%###############################################                           65.9%###############################################                           66.1%###############################################                           66.2%###############################################                           66.3%###############################################                           66.5%################################################                          66.7%################################################                          66.9%################################################                          67.1%################################################                          67.3%################################################                          67.5%################################################                          67.7%################################################                          68.0%#################################################                         68.1%#################################################                         68.2%#################################################                         68.4%#################################################                         68.5%#################################################                         68.7%#################################################                         68.9%#################################################                         69.1%#################################################                         69.2%#################################################                         69.4%##################################################                        69.6%##################################################                        69.8%##################################################                        69.9%##################################################                        70.1%##################################################                        70.3%##################################################                        70.5%##################################################                        70.7%###################################################                       70.9%###################################################                       71.1%###################################################                       71.3%###################################################                       71.5%###################################################                       71.7%###################################################                       71.9%###################################################                       72.2%####################################################                      72.4%####################################################                      72.6%####################################################                      72.8%####################################################                      73.1%####################################################                      73.3%####################################################                      73.6%#####################################################                     73.8%#####################################################                     74.1%#####################################################                     74.3%#####################################################                     74.6%#####################################################                     74.8%######################################################                    75.1%######################################################                    75.4%######################################################                    75.6%######################################################                    75.9%######################################################                    76.2%#######################################################                   76.5%#######################################################                   76.7%#######################################################                   77.0%#######################################################                   77.3%#######################################################                   77.6%########################################################                  77.9%########################################################                  78.2%########################################################                  78.5%########################################################                  78.8%########################################################                  79.1%#########################################################                 79.5%#########################################################                 79.8%#########################################################                 80.1%#########################################################                 80.4%##########################################################                80.7%##########################################################                81.1%##########################################################                81.4%##########################################################                81.8%###########################################################               82.1%###########################################################               82.5%###########################################################               82.7%###########################################################               83.0%###########################################################               83.2%############################################################              83.5%############################################################              83.8%############################################################              84.0%############################################################              84.3%############################################################              84.6%#############################################################             84.9%#############################################################             85.2%#############################################################             85.4%#############################################################             85.7%#############################################################             85.9%#############################################################             86.1%##############################################################            86.3%##############################################################            86.5%##############################################################            86.8%##############################################################            87.0%##############################################################            87.2%##############################################################            87.4%###############################################################           87.7%###############################################################           87.9%###############################################################           88.2%###############################################################           88.4%###############################################################           88.7%################################################################          88.9%################################################################          89.2%################################################################          89.4%################################################################          89.7%################################################################          90.0%################################################################          90.2%#################################################################         90.5%#################################################################         90.8%#################################################################         91.0%#################################################################         91.3%#################################################################         91.6%##################################################################        91.9%##################################################################        92.2%##################################################################        92.5%##################################################################        92.8%###################################################################       93.1%###################################################################       93.4%###################################################################       93.7%###################################################################       94.0%###################################################################       94.2%###################################################################       94.4%####################################################################      94.7%####################################################################      94.9%####################################################################      95.1%####################################################################      95.4%####################################################################      95.6%#####################################################################     95.9%#####################################################################     96.2%#####################################################################     96.4%#####################################################################     96.7%#####################################################################     96.9%#####################################################################     97.2%######################################################################    97.5%######################################################################    97.8%######################################################################    98.0%######################################################################    98.3%######################################################################    98.6%#######################################################################   98.9%#######################################################################   99.2%#######################################################################   99.5%#######################################################################   99.8%######################################################################## 100.0%
[1A[2K[?25hDownloading artifact: CUDNN_CUDA110
[?25l                                                                           0.0%                                                                           0.3%                                                                           1.0%#                                                                          1.9%##                                                                         3.1%###                                                                        4.3%###                                                                        5.1%###                                                                        5.5%####                                                                       5.9%####                                                                       6.2%####                                                                       6.5%####                                                                       6.9%#####                                                                      7.2%#####                                                                      7.6%#####                                                                      8.0%######                                                                     8.3%######                                                                     8.7%######                                                                     9.1%######                                                                     9.5%#######                                                                    9.9%#######                                                                   10.3%#######                                                                   10.7%########                                                                  11.1%########                                                                  11.6%########                                                                  12.0%########                                                                  12.4%#########                                                                 12.9%#########                                                                 13.3%#########                                                                 13.8%##########                                                                14.2%##########                                                                14.7%##########                                                                15.2%###########                                                               15.7%###########                                                               16.2%############                                                              16.7%############                                                              17.2%############                                                              17.7%#############                                                             18.2%#############                                                             18.7%#############                                                             19.3%##############                                                            19.8%##############                                                            20.3%###############                                                           20.9%###############                                                           21.4%###############                                                           22.0%################                                                          22.5%################                                                          23.1%#################                                                         23.7%#################                                                         24.3%#################                                                         24.8%##################                                                        25.5%##################                                                        26.1%###################                                                       26.7%###################                                                       27.3%####################                                                      27.9%####################                                                      28.5%####################                                                      29.2%#####################                                                     29.8%#####################                                                     30.4%######################                                                    31.1%######################                                                    31.7%#######################                                                   32.4%#######################                                                   33.0%########################                                                  33.7%########################                                                  34.4%#########################                                                 35.1%#########################                                                 35.8%##########################                                                36.5%##########################                                                37.2%###########################                                               38.0%###########################                                               38.7%############################                                              39.4%############################                                              40.1%#############################                                             40.9%#############################                                             41.2%##############################                                            41.7%##############################                                            42.2%##############################                                            42.8%###############################                                           43.3%###############################                                           43.9%################################                                          44.5%################################                                          45.0%################################                                          45.6%#################################                                         46.2%#################################                                         46.8%##################################                                        47.4%##################################                                        48.0%##################################                                        48.6%###################################                                       48.9%###################################                                       49.2%###################################                                       49.6%###################################                                       49.9%####################################                                      50.2%####################################                                      50.6%####################################                                      50.9%####################################                                      51.2%#####################################                                     51.6%#####################################                                     52.0%#####################################                                     52.3%#####################################                                     52.7%######################################                                    53.1%######################################                                    53.5%######################################                                    53.9%#######################################                                   54.3%#######################################                                   54.7%#######################################                                   55.1%#######################################                                   55.5%########################################                                  55.9%########################################                                  56.4%########################################                                  56.8%#########################################                                 57.2%#########################################                                 57.7%#########################################                                 58.1%##########################################                                58.6%##########################################                                59.1%##########################################                                59.6%###########################################                               60.1%###########################################                               60.6%###########################################                               61.1%############################################                              61.6%############################################                              62.1%############################################                              62.5%#############################################                             62.9%#############################################                             63.2%#############################################                             63.6%##############################################                            64.0%##############################################                            64.4%##############################################                            64.8%##############################################                            65.2%###############################################                           65.6%###############################################                           66.0%###############################################                           66.5%################################################                          66.9%################################################                          67.3%################################################                          67.8%#################################################                         68.2%#################################################                         68.7%#################################################                         69.1%##################################################                        69.6%##################################################                        70.1%##################################################                        70.5%###################################################                       71.0%###################################################                       71.5%###################################################                       72.0%####################################################                      72.5%####################################################                      73.0%####################################################                      73.6%#####################################################                     74.1%#####################################################                     74.6%######################################################                    75.1%######################################################                    75.7%######################################################                    76.1%#######################################################                   76.5%#######################################################                   76.9%#######################################################                   77.3%#######################################################                   77.7%########################################################                  78.2%########################################################                  78.6%########################################################                  79.0%#########################################################                 79.5%#########################################################                 79.9%#########################################################                 80.4%##########################################################                80.8%##########################################################                81.3%##########################################################                81.7%###########################################################               82.2%###########################################################               82.7%###########################################################               83.2%############################################################              83.7%############################################################              84.1%############################################################              84.6%#############################################################             85.1%#############################################################             85.7%##############################################################            86.2%##############################################################            86.7%##############################################################            87.2%###############################################################           87.8%###############################################################           88.3%###############################################################           88.9%################################################################          89.5%################################################################          90.0%#################################################################         90.6%#################################################################         91.2%##################################################################        91.7%##################################################################        92.3%##################################################################        92.9%###################################################################       93.5%###################################################################       94.1%####################################################################      94.8%####################################################################      95.4%#####################################################################     96.0%#####################################################################     96.6%######################################################################    97.3%######################################################################    97.9%######################################################################    98.6%#######################################################################   99.2%#######################################################################   99.9%######################################################################## 100.0%
[1A[2K[?25hDownloading artifact: CUTENSOR_CUDA110
[?25l#=#=#                                                                                                                                                    1.1%##                                                                         4.0%#####                                                                      8.2%##########                                                                13.9%###############                                                           22.1%########################                                                  33.5%#############################                                             41.4%##################################                                        48.1%#######################################                                   54.8%############################################                              61.7%#################################################                         68.5%######################################################                    75.4%###########################################################               82.3%################################################################          89.2%#####################################################################     96.2%######################################################################## 100.0%
[1A[2K[?25h┌ Warning: Your GeForce GTX TITAN GPU does not meet the minimal required compute capability (3.5.0 < 5.0).
│ Some functionality might not work. For a fully-supported set-up, please use an older version of CUDA.jl
└ @ CUDA ~/.julia/packages/CUDA/FlHUF/src/state.jl:251
213.004871 seconds (235.10 M allocations: 12.437 GiB, 1.78% gc time)
 37.083047 seconds (86.85 M allocations: 5.524 GiB, 3.12% gc time)
  0.526603 seconds (1.77 M allocations: 100.994 MiB, 3.79% gc time)
  5.028473 seconds (17.97 M allocations: 832.406 MiB, 4.75% gc time)
  0.084491 seconds (163.19 k allocations: 8.670 MiB)
  0.033472 seconds (56.09 k allocations: 3.102 MiB)
[ Info: Implicit Methods
 14.904883 seconds (41.18 M allocations: 2.216 GiB, 5.73% gc time)
EnsembleGPUArray: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: InvalidIRError: compiling kernel gpu_ldiv!_kernel(Cassette.Context{nametype(CUDACtx),KernelAbstractions.CompilerMetadata{KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicCheck,Nothing,CartesianIndices{1,Tuple{Base.OneTo{Int64}}},KernelAbstractions.NDIteration.NDRange{1,KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicSize,CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}}}},Nothing,KernelAbstractions.var"##PassType#253",Nothing,Cassette.DisableHooks}, typeof(DiffEqGPU.gpu_ldiv!_kernel), CUDA.CuDeviceArray{Float32,3,1}, CUDA.CuDeviceArray{Float32,1,1}, Int64, Int64) resulted in invalid LLVM IR
  Reason: unsupported call to the Julia runtime (call to jl_f__apply_latest)
  Stacktrace:
   [1] #invokelatest#1 at essentials.jl:710
   [2] invokelatest at essentials.jl:709
   [3] throw_overflowerr_binaryop at checked.jl:154
   [4] overdub at /home/pkgeval/.julia/packages/Cassette/Wjztv/src/overdub.jl:0
   [5] multiple call sites at unknown:0
  Stacktrace:
   [1] check_ir(::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget,CUDA.CUDACompilerParams}, ::LLVM.Module) at /home/pkgeval/.julia/packages/GPUCompiler/uTpNx/src/validation.jl:123
   [2] macro expansion at /home/pkgeval/.julia/packages/GPUCompiler/uTpNx/src/driver.jl:239 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/TimerOutputs/ZmKD7/src/TimerOutput.jl:206 [inlined]
   [4] codegen(::Symbol, ::GPUCompiler.CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool) at /home/pkgeval/.julia/packages/GPUCompiler/uTpNx/src/driver.jl:237
   [5] compile(::Symbol, ::GPUCompiler.CompilerJob; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool) at /home/pkgeval/.julia/packages/GPUCompiler/uTpNx/src/driver.jl:39
   [6] compile at /home/pkgeval/.julia/packages/GPUCompiler/uTpNx/src/driver.jl:35 [inlined]
   [7] cufunction_compile(::GPUCompiler.FunctionSpec; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:maxthreads,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDA/FlHUF/src/compiler/execution.jl:302
   [8] check_cache(::Dict{UInt64,Any}, ::Any, ::Any, ::GPUCompiler.FunctionSpec{typeof(Cassette.overdub),Tuple{Cassette.Context{nametype(CUDACtx),KernelAbstractions.CompilerMetadata{KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicCheck,Nothing,CartesianIndices{1,Tuple{Base.OneTo{Int64}}},KernelAbstractions.NDIteration.NDRange{1,KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicSize,CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}}}},Nothing,KernelAbstractions.var"##PassType#253",Nothing,Cassette.DisableHooks},typeof(DiffEqGPU.gpu_ldiv!_kernel),CUDA.CuDeviceArray{Float32,3,1},CUDA.CuDeviceArray{Float32,1,1},Int64,Int64}}, ::UInt64; kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:maxthreads,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/GPUCompiler/uTpNx/src/cache.jl:40
   [9] gpu_ldiv!_kernel at ./none:0 [inlined]
   [10] cufunction(::typeof(Cassette.overdub), ::Type{Tuple{Cassette.Context{nametype(CUDACtx),KernelAbstractions.CompilerMetadata{KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicCheck,Nothing,CartesianIndices{1,Tuple{Base.OneTo{Int64}}},KernelAbstractions.NDIteration.NDRange{1,KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicSize,CartesianIndices{1,Tuple{Base.OneTo{Int64}}},CartesianIndices{1,Tuple{Base.OneTo{Int64}}}}},Nothing,KernelAbstractions.var"##PassType#253",Nothing,Cassette.DisableHooks},typeof(DiffEqGPU.gpu_ldiv!_kernel),CUDA.CuDeviceArray{Float32,3,1},CUDA.CuDeviceArray{Float32,1,1},Int64,Int64}}; name::String, kwargs::Base.Iterators.Pairs{Symbol,Nothing,Tuple{Symbol},NamedTuple{(:maxthreads,),Tuple{Nothing}}}) at /home/pkgeval/.julia/packages/CUDA/FlHUF/src/compiler/execution.jl:289
   [11] macro expansion at /home/pkgeval/.julia/packages/CUDA/FlHUF/src/compiler/execution.jl:100 [inlined]
   [12] (::KernelAbstractions.Kernel{KernelAbstractions.CUDADevice,KernelAbstractions.NDIteration.DynamicSize,KernelAbstractions.NDIteration.DynamicSize,typeof(DiffEqGPU.gpu_ldiv!_kernel)})(::CUDA.CuArray{Float32,3}, ::Vararg{Any,N} where N; ndrange::Int64, dependencies::KernelAbstractions.CudaEvent, workgroupsize::Int64, progress::Function) at /home/pkgeval/.julia/packages/KernelAbstractions/fGTLM/src/backends/cuda.jl:187
   [13] (::DiffEqGPU.LinSolveGPUSplitFactorize)(::CUDA.CuArray{Float32,1}, ::CUDA.CuArray{Float32,3}, ::CUDA.CuArray{Float32,1}, ::Bool; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/src/DiffEqGPU.jl:596
   [14] LinSolveGPUSplitFactorize at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/src/DiffEqGPU.jl:593 [inlined]
   [15] perform_step!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rodas5{0,true,DiffEqGPU.LinSolveGPUSplitFactorize,DataType},true,CUDA.CuArray{Float32,2},Nothing,Float32,CUDA.CuArray{Float32,2},Float32,Float32,Float32,Array{CUDA.CuArray{Float32,2},1},DiffEqBase.ODESolution{Float32,3,Array{CUDA.CuArray{Float32,2},1},Nothing,Nothing,Array{Float32,1},Array{Array{CUDA.CuArray{Float32,2},1},1},DiffEqBase.ODEProblem{CUDA.CuArray{Float32,2},Tuple{Float32,Float32},true,CUDA.CuArray{Float32,2},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,true,DiffEqGPU.LinSolveGPUSplitFactorize,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Array{CUDA.CuArray{Float32,2},1},Array{Float32,1},Array{Array{CUDA.CuArray{Float32,2},1},1},OrdinaryDiffEq.Rosenbrock5Cache{CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},OrdinaryDiffEq.Rodas5Tableau{Float32,Float32},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Float32,CUDA.CuArray{Float32,2}},DiffEqGPU.LinSolveGPUSplitFactorize,Nothing,Nothing}},DiffEqBase.DEStats},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},OrdinaryDiffEq.Rosenbrock5Cache{CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},OrdinaryDiffEq.Rodas5Tableau{Float32,Float32},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Float32,CUDA.CuArray{Float32,2}},DiffEqGPU.LinSolveGPUSplitFactorize,Nothing,Nothing},OrdinaryDiffEq.DEOptions{Float32,Float32,Float32,Float32,typeof(DiffEqGPU.diffeqgpunorm),typeof(LinearAlgebra.opnorm),DiffEqBase.CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),DiffEqGPU.var"#10#16",DataStructures.BinaryHeap{Float32,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float32,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Float32,Tuple{}},CUDA.CuArray{Float32,2},Float32,Nothing,OrdinaryDiffEq.DefaultInit}, ::OrdinaryDiffEq.Rosenbrock5Cache{CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},OrdinaryDiffEq.Rodas5Tableau{Float32,Float32},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Float32,CUDA.CuArray{Float32,2}},DiffEqGPU.LinSolveGPUSplitFactorize,Nothing,Nothing}, ::Bool) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/rosenbrock_perform_step.jl:1095
   [16] perform_step! at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/rosenbrock_perform_step.jl:1047 [inlined]
   [17] solve!(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rodas5{0,true,DiffEqGPU.LinSolveGPUSplitFactorize,DataType},true,CUDA.CuArray{Float32,2},Nothing,Float32,CUDA.CuArray{Float32,2},Float32,Float32,Float32,Array{CUDA.CuArray{Float32,2},1},DiffEqBase.ODESolution{Float32,3,Array{CUDA.CuArray{Float32,2},1},Nothing,Nothing,Array{Float32,1},Array{Array{CUDA.CuArray{Float32,2},1},1},DiffEqBase.ODEProblem{CUDA.CuArray{Float32,2},Tuple{Float32,Float32},true,CUDA.CuArray{Float32,2},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Rodas5{0,true,DiffEqGPU.LinSolveGPUSplitFactorize,DataType},OrdinaryDiffEq.InterpolationData{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Array{CUDA.CuArray{Float32,2},1},Array{Float32,1},Array{Array{CUDA.CuArray{Float32,2},1},1},OrdinaryDiffEq.Rosenbrock5Cache{CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},OrdinaryDiffEq.Rodas5Tableau{Float32,Float32},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Float32,CUDA.CuArray{Float32,2}},DiffEqGPU.LinSolveGPUSplitFactorize,Nothing,Nothing}},DiffEqBase.DEStats},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},OrdinaryDiffEq.Rosenbrock5Cache{CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},OrdinaryDiffEq.Rodas5Tableau{Float32,Float32},DiffEqBase.TimeGradientWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},CUDA.CuArray{Float32,2},CUDA.CuArray{Float32,2}},DiffEqBase.UJacobianWrapper{DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Float32,CUDA.CuArray{Float32,2}},DiffEqGPU.LinSolveGPUSplitFactorize,Nothing,Nothing},OrdinaryDiffEq.DEOptions{Float32,Float32,Float32,Float32,typeof(DiffEqGPU.diffeqgpunorm),typeof(LinearAlgebra.opnorm),DiffEqBase.CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),DiffEqGPU.var"#10#16",DataStructures.BinaryHeap{Float32,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float32,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Float32,Tuple{}},CUDA.CuArray{Float32,2},Float32,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:447
   [18] #__solve#398 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:5 [inlined]
   [19] #solve_call#447 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:65 [inlined]
   [20] solve_up(::DiffEqBase.ODEProblem{CUDA.CuArray{Float32,2},Tuple{Float32,Float32},true,CUDA.CuArray{Float32,2},DiffEqBase.ODEFunction{true,DiffEqGPU.var"#55#59"{typeof(Main.##253.lorenz)},LinearAlgebra.UniformScaling{Bool},Nothing,DiffEqGPU.var"#58#62"{typeof(Main.##253.lorenz_tgrad)},Nothing,Nothing,Nothing,CUDA.CuArray{Float32,3},CUDA.CuArray{Float32,3},DiffEqGPU.var"#56#60"{typeof(Main.##253.lorenz_jac)},DiffEqGPU.var"#57#61"{typeof(Main.##253.lorenz_jac)},Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::CUDA.CuArray{Float32,2}, ::CUDA.CuArray{Float32,2}, ::OrdinaryDiffEq.Rodas5{0,true,DiffEqGPU.LinSolveGPUSplitFactorize,DataType}; kwargs::Base.Iterators.Pairs{Symbol,Any,NTuple{6,Symbol},NamedTuple{(:unstable_check, :dt, :saveat, :callback, :merge_callbacks, :internalnorm),Tuple{DiffEqGPU.var"#10#16",Float64,Float32,Nothing,Bool,typeof(DiffEqGPU.diffeqgpunorm)}}}) at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:86
   [21] #solve#448 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:74 [inlined]
   [22] batch_solve_up(::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##253.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,typeof(Main.##253.lorenz_tgrad),typeof(Main.##253.lorenz_jac),Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##253.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing}, ::Array{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Array{Float32,1},DiffEqBase.ODEFunction{true,typeof(Main.##253.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,typeof(Main.##253.lorenz_tgrad),typeof(Main.##253.lorenz_jac),Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},1}, ::OrdinaryDiffEq.Rodas5{0,true,DiffEqBase.DefaultLinSolve,DataType}, ::DiffEqGPU.EnsembleGPUArray, ::UnitRange{Int64}, ::Array{Float32,2}, ::Array{Float32,2}; kwargs::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:unstable_check, :dt, :saveat),Tuple{DiffEqGPU.var"#10#16",Float64,Float32}}}) at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/src/DiffEqGPU.jl:261
   [23] batch_solve(::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##253.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,typeof(Main.##253.lorenz_tgrad),typeof(Main.##253.lorenz_jac),Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##253.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing}, ::OrdinaryDiffEq.Rodas5{0,true,DiffEqBase.DefaultLinSolve,DataType}, ::DiffEqGPU.EnsembleGPUArray, ::UnitRange{Int64}; kwargs::Base.Iterators.Pairs{Symbol,Any,Tuple{Symbol,Symbol,Symbol},NamedTuple{(:unstable_check, :dt, :saveat),Tuple{DiffEqGPU.var"#10#16",Float64,Float32}}}) at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/src/DiffEqGPU.jl:226
   [24] macro expansion at ./timing.jl:233 [inlined]
   [25] __solve(::DiffEqBase.EnsembleProblem{DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Float32},true,Tuple{Float32,Float32,Float32},DiffEqBase.ODEFunction{true,typeof(Main.##253.lorenz),LinearAlgebra.UniformScaling{Bool},Nothing,typeof(Main.##253.lorenz_tgrad),typeof(Main.##253.lorenz_jac),Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Main.##253.var"#3#4",typeof(DiffEqBase.DEFAULT_OUTPUT_FUNC),typeof(DiffEqBase.DEFAULT_REDUCTION),Nothing}, ::OrdinaryDiffEq.Rodas5{0,true,DiffEqBase.DefaultLinSolve,DataType}, ::DiffEqGPU.EnsembleGPUArray; trajectories::Int64, batch_size::Int64, unstable_check::Function, kwargs::Base.Iterators.Pairs{Symbol,AbstractFloat,Tuple{Symbol,Symbol},NamedTuple{(:dt, :saveat),Tuple{Float64,Float32}}}) at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/src/DiffEqGPU.jl:143
   [26] #solve#450 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:100 [inlined]
   [27] top-level scope at ./timing.jl:174 [inlined]
   [28] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/ensemblegpuarray.jl:0
   [29] include(::Function, ::Module, ::String) at ./Base.jl:380
   [30] include at ./Base.jl:368 [inlined]
   [31] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [32] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/runtests.jl:18
   [33] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [34] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/runtests.jl:18
   [35] eval(::Module, ::Any) at ./boot.jl:331
   [36] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [37] top-level scope at timing.jl:174
   [38] include(::String) at ./client.jl:457
   [39] top-level scope at none:5
   [40] eval(::Module, ::Any) at ./boot.jl:331
   [41] exec_options(::Base.JLOptions) at ./client.jl:272
   [42] _start() at ./client.jl:506
  in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/ensemblegpuarray.jl:78
  
Test Summary:    | Pass  Error  Total
EnsembleGPUArray |    5      1      6
ERROR: LoadError: Some tests did not pass: 5 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/runtests.jl:18
ERROR: LoadError: failed process: Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so --depwarn=yes -g1 --startup-file=no --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test")
include("/home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/runtests.jl")
'`, ProcessExited(1)) [1]

Stacktrace:
 [1] pipeline_error at ./process.jl:525 [inlined]
 [2] run(::Cmd; wait::Bool) at ./process.jl:440
 [3] run(::Cmd) at ./process.jl:438
 [4] top-level scope at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/runtests.jl:11
 [5] include(::String) at ./client.jl:457
 [6] top-level scope at none:6
in expression starting at /home/pkgeval/.julia/packages/DiffEqGPU/eOLep/test/runtests.jl:4

PkgEval failed: Package DiffEqGPU errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T17:44:39.212
CPU usage: 515.15s (492.02s user, 23.23s kernel)

Network usage:
- eth0: 1.676 GiB received, 9.424 MiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":49,"op":"Read","minor":0},{"major":259,"value":44,"op":"Write","minor":0},{"major":259,"value":72,"op":"Sync","minor":0},{"major":259,"value":21,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":93,"op":"Total","minor":0}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":2301952,"op":"Read","minor":0},{"major":259,"value":286720,"op":"Write","minor":0},{"major":259,"value":2453504,"op":"Sync","minor":0},{"major":259,"value":135168,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":2588672,"op":"Total","minor":0}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":4291604480,"max_usage":5583065088,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":33,"total_rss":376254464,"inactive_file":2889109504,"inactive_anon":142872576,"total_pgfault":8653326,"total_cache":3778707456,"total_rss_huge":140509184,"total_active_anon":447856640,"total_pgmajfault":33,"pgpgin":7479681,"rss_huge":140509184,"mapped_file":635695104,"total_inactive_file":2889109504,"dirty":540672,"total_unevictable":0,"total_dirty":540672,"writeback":270336,"pgpgout":6500036,"hierarchical_memsw_limit":0,"cache":3778707456,"active_file":675028992,"pgfault":8653326,"total_mapped_file":635695104,"total_pgpgout":6500036,"total_writeback":270336,"rss":376254464,"unevictable":0,"total_inactive_anon":142872576,"total_pgpgin":7479681,"active_anon":447856640,"total_active_file":675028992},"limit":67467247616},"name":"/DiffEqGPU-jzU2P1Uv","networks":{"eth0":{"rx_bytes":1799514339,"rx_packets":173074,"tx_packets":144286,"tx_bytes":9881696,"tx_dropped":0,"rx_dropped":0,"tx_errors":0,"rx_errors":0}},"id":"ea3f99d89882f4accaf0e22503276f8058954fe446bd279d9c270f5568eeef9f","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":44},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":7650358815808967,"online_cpus":64,"cpu_usage":{"usage_in_usermode":492020000000,"usage_in_kernelmode":23230000000,"total_usage":515152262006,"percpu_usage":[0,515152262006,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T17:44:39.214683216Z"}