################################################################################
# PkgEval set-up: 2021-01-11T22:49:33.951
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T22:49:35.762
#

 Installing known registries into `~/.julia`
                                                                           0.6%######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed Artifacts ──────────────────── v1.3.0
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed COSMA ──────────────────────── v0.1.2
  Installed MPICH_jll ──────────────────── v3.3.2+10
  Installed MPIClusterManagers ─────────── v0.2.0
  Installed Requires ───────────────────── v1.1.2
  Installed Primes ─────────────────────── v0.4.0
  Installed JLLWrappers ────────────────── v1.2.0
  Installed MPI ────────────────────────── v0.14.3
  Installed COSMA_jll ──────────────────── v2.2.0+0
  Installed DocStringExtensions ────────── v0.8.3
  Installed OpenMPI_jll ────────────────── v4.0.2+2
  Installed MicrosoftMPI_jll ───────────── v10.1.2+3
  Installed DistributedArrays ──────────── v0.6.5
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
Updating `~/.julia/environments/v1.5/Project.toml`
  [ff1143b4] + COSMA v0.1.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [56f22d72] + Artifacts v1.3.0
  [ff1143b4] + COSMA v0.1.2
  [0efae8bf] + COSMA_jll v2.2.0+0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [aaf54ef3] + DistributedArrays v0.6.5
  [ffbed154] + DocStringExtensions v0.8.3
  [692b3bcd] + JLLWrappers v1.2.0
  [da04e1cc] + MPI v0.14.3
  [7cb0a576] + MPICH_jll v3.3.2+10
  [e7922434] + MPIClusterManagers v0.2.0
  [9237b28f] + MicrosoftMPI_jll v10.1.2+3
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [fe0851c0] + OpenMPI_jll v4.0.2+2
  [27ebfcd6] + Primes v0.4.0
  [ae029012] + Requires v1.1.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building MPI → `~/.julia/packages/MPI/7RZhH/deps/build.log`


################################################################################
# Testing: 2021-01-11T22:49:42.486
#

    Testing COSMA
Status `/tmp/jl_4tXdXS/Project.toml`
  [ff1143b4] COSMA v0.1.2
  [0efae8bf] COSMA_jll v2.2.0+0
  [aaf54ef3] DistributedArrays v0.6.5
  [da04e1cc] MPI v0.14.3
  [e7922434] MPIClusterManagers v0.2.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_4tXdXS/Manifest.toml`
  [56f22d72] Artifacts v1.3.0
  [ff1143b4] COSMA v0.1.2
  [0efae8bf] COSMA_jll v2.2.0+0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [aaf54ef3] DistributedArrays v0.6.5
  [ffbed154] DocStringExtensions v0.8.3
  [692b3bcd] JLLWrappers v1.2.0
  [da04e1cc] MPI v0.14.3
  [7cb0a576] MPICH_jll v3.3.2+10
  [e7922434] MPIClusterManagers v0.2.0
  [9237b28f] MicrosoftMPI_jll v10.1.2+3
  [4536629a] OpenBLAS_jll v0.3.9+5
  [fe0851c0] OpenMPI_jll v4.0.2+2
  [27ebfcd6] Primes v0.4.0
  [ae029012] Requires v1.1.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary:      | Pass  Total
Incompatible sizes |    4      4
Test Summary:                                              | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Float32) |    1      1
Test Summary:                                              | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Float64) |    1      1
Test Summary:                                                       | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                       | Pass  Total
C = alpha * identity(A) * identity(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Float32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Float64) |    1      1
Test Summary:                                                        | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                        | Pass  Total
C = alpha * identity(A) * transpose(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                             |
C = alpha * identity(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                             |
C = alpha * identity(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                      | Pass  Total
C = alpha * identity(A) * adjoint(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                      | Pass  Total
C = alpha * identity(A) * adjoint(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Float32) |    1      1
Test Summary:                                               | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Float64) |    1      1
Test Summary:                                                        | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                        | Pass  Total
C = alpha * transpose(A) * identity(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Float32) |    1      1
Test Summary:                                                | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Float64) |    1      1
Test Summary:                                                         | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                         | Pass  Total
C = alpha * transpose(A) * transpose(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                              |
C = alpha * transpose(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                              |
C = alpha * transpose(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                       | Pass  Total
C = alpha * transpose(A) * adjoint(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                       | Pass  Total
C = alpha * transpose(A) * adjoint(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                             |
C = alpha * adjoint(A) * identity(B) + beta * C (Float32) | No tests
Test Summary:                                             |
C = alpha * adjoint(A) * identity(B) + beta * C (Float64) | No tests
Test Summary:                                                      | Pass  Total
C = alpha * adjoint(A) * identity(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                      | Pass  Total
C = alpha * adjoint(A) * identity(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                              |
C = alpha * adjoint(A) * transpose(B) + beta * C (Float32) | No tests
Test Summary:                                              |
C = alpha * adjoint(A) * transpose(B) + beta * C (Float64) | No tests
Test Summary:                                                       | Pass  Total
C = alpha * adjoint(A) * transpose(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                       | Pass  Total
C = alpha * adjoint(A) * transpose(B) + beta * C (Complex{Float64}) |    1      1
Test Summary:                                            |
C = alpha * adjoint(A) * adjoint(B) + beta * C (Float32) | No tests
Test Summary:                                            |
C = alpha * adjoint(A) * adjoint(B) + beta * C (Float64) | No tests
Test Summary:                                                     | Pass  Total
C = alpha * adjoint(A) * adjoint(B) + beta * C (Complex{Float32}) |    1      1
Test Summary:                                                     | Pass  Total
C = alpha * adjoint(A) * adjoint(B) + beta * C (Complex{Float64}) |    1      1
    Testing COSMA tests passed 

PkgEval succeeded


################################################################################
# PkgEval teardown: 2021-01-11T22:50:57.592
CPU usage: 83.41s (75.59s user, 7.96s kernel)

Network usage:
- eth0: 2.869 MiB received, 89.047 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":13,"op":"Read","minor":0},{"major":259,"value":28,"op":"Write","minor":0},{"major":259,"value":32,"op":"Sync","minor":0},{"major":259,"value":9,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":41,"op":"Total","minor":0},{"major":253,"value":13,"op":"Read","minor":2},{"major":253,"value":28,"op":"Write","minor":2},{"major":253,"value":32,"op":"Sync","minor":2},{"major":253,"value":9,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":41,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":823296,"op":"Read","minor":0},{"major":259,"value":151552,"op":"Write","minor":0},{"major":259,"value":929792,"op":"Sync","minor":0},{"major":259,"value":45056,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":974848,"op":"Total","minor":0},{"major":253,"value":823296,"op":"Read","minor":2},{"major":253,"value":151552,"op":"Write","minor":2},{"major":253,"value":929792,"op":"Sync","minor":2},{"major":253,"value":45056,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":974848,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":310480896,"max_usage":1852006400,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":189263872,"inactive_file":270336,"inactive_anon":80424960,"total_pgfault":1762134,"total_cache":85577728,"total_rss_huge":0,"total_active_anon":193695744,"total_pgmajfault":0,"pgpgin":968517,"rss_huge":0,"mapped_file":0,"total_inactive_file":270336,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":901439,"hierarchical_memsw_limit":0,"cache":85577728,"active_file":675840,"pgfault":1762134,"total_mapped_file":0,"total_pgpgout":901439,"total_writeback":0,"rss":189263872,"unevictable":0,"total_inactive_anon":80424960,"total_pgpgin":968517,"active_anon":193695744,"total_active_file":675840},"limit":540965302272},"name":"/COSMA-poJrGAaU","networks":{"eth0":{"rx_bytes":3008617,"rx_packets":723,"tx_packets":726,"tx_bytes":91184,"tx_dropped":0,"rx_dropped":3,"tx_errors":0,"rx_errors":0}},"id":"a917bc0b675a62e0e420af1e654e83615d5e5364b410f730ad8e309fa5debd5a","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":48},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":6589794154522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":75590000000,"usage_in_kernelmode":7960000000,"total_usage":83410067815,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,850860,0,0,83409141205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75750,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T22:50:57.59479807Z"}