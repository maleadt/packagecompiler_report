################################################################################
# PkgEval set-up: 2021-01-11T19:18:36.799
#

Julia Version 1.5.3
Commit 599f52c4c6 (2020-12-18 13:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: AMD EPYC 7502 32-Core Processor
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, znver2)
Environment:
  JULIA_PKG_PRECOMPILE_AUTO = 0
  JULIA_PKGEVAL = true

Base.julia_cmd() = `/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1`


################################################################################
# Installation: 2021-01-11T19:18:38.595
#

 Installing known registries into `~/.julia`
######################################################################## 100.0%
      Added registry `General` to `~/.julia/registries/General`
  Resolving package versions...
  Installed DiffEqPhysics ──────────────── v3.8.0
  Installed CompilerSupportLibraries_jll ─ v0.3.4+0
  Installed ZygoteRules ────────────────── v0.2.1
  Installed Reexport ───────────────────── v1.0.0
  Installed CpuId ──────────────────────── v0.2.2
  Installed Inflate ────────────────────── v0.1.2
  Installed TableTraits ────────────────── v1.0.0
  Installed CommonSubexpressions ───────── v0.3.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed NonlinearSolve ─────────────── v0.3.4
  Installed VertexSafeGraphs ───────────── v0.1.2
  Installed FunctionWrappers ───────────── v1.1.1
  Installed DataAPI ────────────────────── v1.4.0
  Installed Tables ─────────────────────── v1.2.2
  Installed DiffRules ──────────────────── v1.0.2
  Installed Requires ───────────────────── v1.1.2
  Installed DataStructures ─────────────── v0.18.8
  Installed DiffResults ────────────────── v1.0.3
  Installed Parameters ─────────────────── v0.12.1
  Installed SparseDiffTools ────────────── v1.12.0
  Installed Setfield ───────────────────── v0.7.0
  Installed LoopVectorization ──────────── v0.8.26
  Installed DiffEqCallbacks ────────────── v2.16.0
  Installed TreeViews ──────────────────── v0.3.0
  Installed ConstructionBase ───────────── v1.0.0
  Installed SIMDPirates ────────────────── v0.8.26
  Installed SimpleTraits ───────────────── v0.9.3
  Installed RecursiveArrayTools ────────── v2.10.0
  Installed DataValueInterfaces ────────── v1.0.0
  Installed OrderedCollections ─────────── v1.3.2
  Installed RecipesBase ────────────────── v1.1.1
  Installed StaticArrays ───────────────── v0.12.5
  Installed DiffEqBase ─────────────────── v6.53.4
  Installed VectorizationBase ──────────── v0.12.33
  Installed OrdinaryDiffEq ─────────────── v5.49.1
  Installed LightGraphs ────────────────── v1.3.4
  Installed MacroTools ─────────────────── v0.5.6
  Installed JLLWrappers ────────────────── v1.2.0
  Installed NLsolve ────────────────────── v4.5.1
  Installed FiniteDiff ─────────────────── v2.7.2
  Installed Distances ──────────────────── v0.10.0
  Installed LineSearches ───────────────── v7.1.1
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed FastClosures ───────────────── v0.3.2
  Installed ArrayInterface ─────────────── v2.14.13
  Installed ForwardDiff ────────────────── v0.10.14
  Installed IterativeSolvers ───────────── v0.9.0
  Installed LabelledArrays ─────────────── v1.4.0
  Installed Adapt ──────────────────────── v3.0.0
  Installed OffsetArrays ───────────────── v1.3.1
  Installed SpecialFunctions ───────────── v1.2.1
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed UnPack ─────────────────────── v1.0.2
  Installed DocStringExtensions ────────── v0.8.3
  Installed ChainRulesCore ─────────────── v0.9.24
  Installed Compat ─────────────────────── v3.25.0
  Installed NLSolversBase ──────────────── v7.7.1
  Installed RecursiveFactorization ─────── v0.1.6
  Installed OpenSpecFun_jll ────────────── v0.5.3+4
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed ExponentialUtilities ───────── v1.8.0
  Installed GenericSVD ─────────────────── v0.3.0
  Installed Artifacts ──────────────────── v1.3.0
  Installed NaNMath ────────────────────── v0.3.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [055956cb] + DiffEqPhysics v3.8.0
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [79e6a3ab] + Adapt v3.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.14.13
  [56f22d72] + Artifacts v1.3.0
  [d360d2e6] + ChainRulesCore v0.9.24
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.25.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.4.0
  [864edb3b] + DataStructures v0.18.8
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.53.4
  [459566f4] + DiffEqCallbacks v2.16.0
  [055956cb] + DiffEqPhysics v3.8.0
  [163ba53b] + DiffResults v1.0.3
  [b552c78f] + DiffRules v1.0.2
  [b4f34e82] + Distances v0.10.0
  [ffbed154] + DocStringExtensions v0.8.3
  [d4d017d3] + ExponentialUtilities v1.8.0
  [9aa1b823] + FastClosures v0.3.2
  [6a86dc24] + FiniteDiff v2.7.2
  [f6369f11] + ForwardDiff v0.10.14
  [069b7b12] + FunctionWrappers v1.1.1
  [01680d73] + GenericSVD v0.3.0
  [d25df0c9] + Inflate v0.1.2
  [42fd0dbc] + IterativeSolvers v0.9.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [692b3bcd] + JLLWrappers v1.2.0
  [2ee39098] + LabelledArrays v1.4.0
  [093fc24a] + LightGraphs v1.3.4
  [d3d80556] + LineSearches v7.1.1
  [bdcacae8] + LoopVectorization v0.8.26
  [1914dd2f] + MacroTools v0.5.6
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.7.1
  [2774e3e8] + NLsolve v4.5.1
  [77ba4419] + NaNMath v0.3.5
  [8913a72c] + NonlinearSolve v0.3.4
  [6fe1bfb0] + OffsetArrays v1.3.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+4
  [bac558e1] + OrderedCollections v1.3.2
  [1dea7af3] + OrdinaryDiffEq v5.49.1
  [d96e819e] + Parameters v0.12.1
  [3cdcf5f2] + RecipesBase v1.1.1
  [731186ca] + RecursiveArrayTools v2.10.0
  [f2c3362d] + RecursiveFactorization v0.1.6
  [189a3867] + Reexport v1.0.0
  [ae029012] + Requires v1.1.2
  [21efa798] + SIMDPirates v0.8.26
  [476501e8] + SLEEFPirates v0.5.5
  [efcf1570] + Setfield v0.7.0
  [699a6c99] + SimpleTraits v0.9.3
  [47a9eef4] + SparseDiffTools v1.12.0
  [276daf66] + SpecialFunctions v1.2.1
  [90137ffa] + StaticArrays v0.12.5
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.2.2
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.33
  [19fa3120] + VertexSafeGraphs v0.1.2
  [700de1a5] + ZygoteRules v0.2.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`


################################################################################
# Testing: 2021-01-11T19:18:57.841
#

    Testing DiffEqPhysics
Status `/tmp/jl_8v6WkQ/Project.toml`
  [2b5f629d] DiffEqBase v6.53.4
  [459566f4] DiffEqCallbacks v2.16.0
  [055956cb] DiffEqPhysics v3.8.0
  [f6369f11] ForwardDiff v0.10.14
  [1dea7af3] OrdinaryDiffEq v5.49.1
  [3cdcf5f2] RecipesBase v1.1.1
  [731186ca] RecursiveArrayTools v2.10.0
  [189a3867] Reexport v1.0.0
  [1bc83da4] SafeTestsets v0.0.1
  [90137ffa] StaticArrays v0.12.5
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_8v6WkQ/Manifest.toml`
  [79e6a3ab] Adapt v3.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [4fba245c] ArrayInterface v2.14.13
  [56f22d72] Artifacts v1.3.0
  [d360d2e6] ChainRulesCore v0.9.24
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.25.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.4+0
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.4.0
  [864edb3b] DataStructures v0.18.8
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.53.4
  [459566f4] DiffEqCallbacks v2.16.0
  [055956cb] DiffEqPhysics v3.8.0
  [163ba53b] DiffResults v1.0.3
  [b552c78f] DiffRules v1.0.2
  [b4f34e82] Distances v0.10.0
  [ffbed154] DocStringExtensions v0.8.3
  [d4d017d3] ExponentialUtilities v1.8.0
  [9aa1b823] FastClosures v0.3.2
  [6a86dc24] FiniteDiff v2.7.2
  [f6369f11] ForwardDiff v0.10.14
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.9.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [692b3bcd] JLLWrappers v1.2.0
  [2ee39098] LabelledArrays v1.4.0
  [093fc24a] LightGraphs v1.3.4
  [d3d80556] LineSearches v7.1.1
  [bdcacae8] LoopVectorization v0.8.26
  [1914dd2f] MacroTools v0.5.6
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.7.1
  [2774e3e8] NLsolve v4.5.1
  [77ba4419] NaNMath v0.3.5
  [8913a72c] NonlinearSolve v0.3.4
  [6fe1bfb0] OffsetArrays v1.3.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+4
  [bac558e1] OrderedCollections v1.3.2
  [1dea7af3] OrdinaryDiffEq v5.49.1
  [d96e819e] Parameters v0.12.1
  [3cdcf5f2] RecipesBase v1.1.1
  [731186ca] RecursiveArrayTools v2.10.0
  [f2c3362d] RecursiveFactorization v0.1.6
  [189a3867] Reexport v1.0.0
  [ae029012] Requires v1.1.2
  [21efa798] SIMDPirates v0.8.26
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [efcf1570] Setfield v0.7.0
  [699a6c99] SimpleTraits v0.9.3
  [47a9eef4] SparseDiffTools v1.12.0
  [276daf66] SpecialFunctions v1.2.1
  [90137ffa] StaticArrays v0.12.5
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.2.2
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.33
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Hamiltonian Test: Error During Test at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:13
  Test threw exception
  Expression: test_solve(prob1, prob_1)
  ArgumentError: Algorithm VelocityVerlet is not applicable if f2(p, q, t) != p
  Stacktrace:
   [1] throwex(::OrdinaryDiffEq.ODEIntegrator{VelocityVerlet,false,ArrayPartition{Float64,Tuple{Float64,Float64}},Nothing,Float64,Nothing,Float64,Float64,Float64,Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},ODESolution{Float64,2,Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},Nothing,Nothing,Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},1},ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},VelocityVerlet,OrdinaryDiffEq.InterpolationData{DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},1},OrdinaryDiffEq.VelocityVerletConstantCache{Float64}},DiffEqBase.DEStats},DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.VelocityVerletConstantCache{Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},ArrayPartition{Float64,Tuple{Float64,Float64}},Float64,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:108
   [2] verify_f2 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:100 [inlined]
   [3] initialize!(::OrdinaryDiffEq.ODEIntegrator{VelocityVerlet,false,ArrayPartition{Float64,Tuple{Float64,Float64}},Nothing,Float64,Nothing,Float64,Float64,Float64,Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},ODESolution{Float64,2,Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},Nothing,Nothing,Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},1},ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},VelocityVerlet,OrdinaryDiffEq.InterpolationData{DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Float64,Float64}},1},1},OrdinaryDiffEq.VelocityVerletConstantCache{Float64}},DiffEqBase.DEStats},DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.VelocityVerletConstantCache{Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},ArrayPartition{Float64,Tuple{Float64,Float64}},Float64,Nothing,OrdinaryDiffEq.DefaultInit}, ::OrdinaryDiffEq.VelocityVerletConstantCache{Float64}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:161
   [4] __init(::ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::VelocityVerlet, ::Tuple{}, ::Tuple{}, ::Tuple{}, ::Type{Val{true}}; saveat::Tuple{}, tstops::Tuple{}, d_discontinuities::Tuple{}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Rational{Int64}, dtmin::Nothing, dtmax::Float64, force_dtmin::Bool, adaptive::Bool, gamma::Int64, abstol::Nothing, reltol::Nothing, qmin::Int64, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, qoldinit::Int64, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:425
   [5] #__solve#398 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:4 [inlined]
   [6] #solve_call#447 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:65 [inlined]
   [7] solve_up(::ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::ArrayPartition{Float64,Tuple{Float64,Float64}}, ::Nothing, ::VelocityVerlet; kwargs::Base.Iterators.Pairs{Symbol,Rational{Int64},Tuple{Symbol},NamedTuple{(:dt,),Tuple{Rational{Int64}}}}) at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:86
   [8] #solve#448 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:74 [inlined]
   [9] #1 at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:5 [inlined]
   [10] MappingRF at ./reduce.jl:93 [inlined]
   [11] afoldl at ./operators.jl:526 [inlined]
   [12] _foldl_impl at ./tuple.jl:207 [inlined]
   [13] foldl_impl(::Base.MappingRF{Main.##253.var"#1#2",Base.BottomRF{typeof(==)}}, ::NamedTuple{(),Tuple{}}, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#3#5",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#7#9",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:48
   [14] mapfoldl_impl(::Main.##253.var"#1#2", ::typeof(==), ::NamedTuple{(),Tuple{}}, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#3#5",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#7#9",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:44
   [15] mapfoldl(::Function, ::Function, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#3#5",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#7#9",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./reduce.jl:160
   [16] mapfoldl at ./reduce.jl:160 [inlined]
   [17] #mapreduce#208 at ./reduce.jl:287 [inlined]
   [18] mapreduce(::Function, ::Function, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#3#5",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#7#9",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:287
   [19] test_solve(::ODEProblem{ArrayPartition{Float64,Tuple{Float64,Float64}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),Float64},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:5
   [20] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:13
   [21] include(::Function, ::Module, ::String) at ./Base.jl:380
   [22] include at ./Base.jl:368 [inlined]
   [23] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [24] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [26] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5
  
Hamiltonian Test: Error During Test at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:23
  Test threw exception
  Expression: test_solve(prob2, prob_2)
  ArgumentError: Algorithm VelocityVerlet is not applicable if f2(p, q, t) != p
  Stacktrace:
   [1] throwex(::OrdinaryDiffEq.ODEIntegrator{VelocityVerlet,false,ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Nothing,Float64,Nothing,Float64,Float64,Float64,Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},ODESolution{Float64,2,Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},Nothing,Nothing,Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},1},ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},VelocityVerlet,OrdinaryDiffEq.InterpolationData{DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},1},OrdinaryDiffEq.VelocityVerletConstantCache{Float64}},DiffEqBase.DEStats},DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.VelocityVerletConstantCache{Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Float64,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:108
   [2] verify_f2 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:100 [inlined]
   [3] initialize!(::OrdinaryDiffEq.ODEIntegrator{VelocityVerlet,false,ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Nothing,Float64,Nothing,Float64,Float64,Float64,Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},ODESolution{Float64,2,Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},Nothing,Nothing,Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},1},ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},VelocityVerlet,OrdinaryDiffEq.InterpolationData{DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},1},1},OrdinaryDiffEq.VelocityVerletConstantCache{Float64}},DiffEqBase.DEStats},DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.VelocityVerletConstantCache{Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Float64,Nothing,OrdinaryDiffEq.DefaultInit}, ::OrdinaryDiffEq.VelocityVerletConstantCache{Float64}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:161
   [4] __init(::ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::VelocityVerlet, ::Tuple{}, ::Tuple{}, ::Tuple{}, ::Type{Val{true}}; saveat::Tuple{}, tstops::Tuple{}, d_discontinuities::Tuple{}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Rational{Int64}, dtmin::Nothing, dtmax::Float64, force_dtmin::Bool, adaptive::Bool, gamma::Int64, abstol::Nothing, reltol::Nothing, qmin::Int64, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, qoldinit::Int64, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:425
   [5] #__solve#398 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:4 [inlined]
   [6] #solve_call#447 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:65 [inlined]
   [7] solve_up(::ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}}, ::Nothing, ::VelocityVerlet; kwargs::Base.Iterators.Pairs{Symbol,Rational{Int64},Tuple{Symbol},NamedTuple{(:dt,),Tuple{Rational{Int64}}}}) at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:86
   [8] #solve#448 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:74 [inlined]
   [9] #1 at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:5 [inlined]
   [10] MappingRF at ./reduce.jl:93 [inlined]
   [11] afoldl at ./operators.jl:526 [inlined]
   [12] _foldl_impl at ./tuple.jl:207 [inlined]
   [13] foldl_impl(::Base.MappingRF{Main.##253.var"#1#2",Base.BottomRF{typeof(==)}}, ::NamedTuple{(),Tuple{}}, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#11#13",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#15#17",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:48
   [14] mapfoldl_impl(::Main.##253.var"#1#2", ::typeof(==), ::NamedTuple{(),Tuple{}}, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#11#13",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#15#17",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:44
   [15] mapfoldl(::Function, ::Function, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#11#13",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#15#17",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./reduce.jl:160
   [16] mapfoldl at ./reduce.jl:160 [inlined]
   [17] #mapreduce#208 at ./reduce.jl:287 [inlined]
   [18] mapreduce(::Function, ::Function, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,DiffEqBase.NullParameters,DynamicalODEFunction{false,ODEFunction{false,Main.##253.var"#11#13",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,Main.##253.var"#15#17",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:287
   [19] test_solve(::ODEProblem{ArrayPartition{Float64,Tuple{SArray{Tuple{2},Float64,1,2},SArray{Tuple{2},Float64,1,2}}},Tuple{Float64,Float64},false,Nothing,DynamicalODEFunction{false,ODEFunction{false,DiffEqPhysics.var"#3#7"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{false,DiffEqPhysics.var"#5#9"{typeof(Main.##253.H),SArray{Tuple{2},Float64,1,2}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:5
   [20] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:23
   [21] include(::Function, ::Module, ::String) at ./Base.jl:380
   [22] include at ./Base.jl:368 [inlined]
   [23] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [24] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [26] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5
  
Hamiltonian Test: Error During Test at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:32
  Test threw exception
  Expression: test_solve(prob3, prob_3)
  ArgumentError: Algorithm VelocityVerlet is not applicable if f2(p, q, t) != p
  Stacktrace:
   [1] throwex(::OrdinaryDiffEq.ODEIntegrator{VelocityVerlet,true,ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Nothing,Float64,Nothing,Float64,Float64,Float64,Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},ODESolution{Float64,2,Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Nothing,Nothing,Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},VelocityVerlet,OrdinaryDiffEq.InterpolationData{DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},OrdinaryDiffEq.VelocityVerletCache{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64}},DiffEqBase.DEStats},DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.VelocityVerletCache{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,Nothing,OrdinaryDiffEq.DefaultInit}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:108
   [2] verify_f2 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:104 [inlined]
   [3] initialize!(::OrdinaryDiffEq.ODEIntegrator{VelocityVerlet,true,ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Nothing,Float64,Nothing,Float64,Float64,Float64,Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},ODESolution{Float64,2,Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Nothing,Nothing,Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},VelocityVerlet,OrdinaryDiffEq.InterpolationData{DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},Array{Float64,1},Array{Array{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},1},1},OrdinaryDiffEq.VelocityVerletCache{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64}},DiffEqBase.DEStats},DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},OrdinaryDiffEq.VelocityVerletCache{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,typeof(DiffEqBase.ODE_DEFAULT_NORM),typeof(opnorm),CallbackSet{Tuple{},Tuple{}},typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN),typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE),typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK),DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},DataStructures.BinaryHeap{Float64,Base.Order.ForwardOrdering},Nothing,Nothing,Int64,Tuple{},Tuple{},Tuple{}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64,Nothing,OrdinaryDiffEq.DefaultInit}, ::OrdinaryDiffEq.VelocityVerletCache{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Float64}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/perform_step/symplectic_perform_step.jl:150
   [4] __init(::ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::VelocityVerlet, ::Tuple{}, ::Tuple{}, ::Tuple{}, ::Type{Val{true}}; saveat::Tuple{}, tstops::Tuple{}, d_discontinuities::Tuple{}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Rational{Int64}, dtmin::Nothing, dtmax::Float64, force_dtmin::Bool, adaptive::Bool, gamma::Int64, abstol::Nothing, reltol::Nothing, qmin::Int64, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, qoldinit::Int64, fullnormalize::Bool, failfactor::Int64, beta1::Nothing, beta2::Nothing, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:425
   [5] #__solve#398 at /home/pkgeval/.julia/packages/OrdinaryDiffEq/5GBYL/src/solve.jl:4 [inlined]
   [6] #solve_call#447 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:65 [inlined]
   [7] solve_up(::ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Nothing, ::ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}}, ::Nothing, ::VelocityVerlet; kwargs::Base.Iterators.Pairs{Symbol,Rational{Int64},Tuple{Symbol},NamedTuple{(:dt,),Tuple{Rational{Int64}}}}) at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:86
   [8] #solve#448 at /home/pkgeval/.julia/packages/DiffEqBase/znIav/src/solve.jl:74 [inlined]
   [9] #1 at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:5 [inlined]
   [10] MappingRF at ./reduce.jl:93 [inlined]
   [11] afoldl at ./operators.jl:526 [inlined]
   [12] _foldl_impl at ./tuple.jl:207 [inlined]
   [13] foldl_impl(::Base.MappingRF{Main.##253.var"#1#2",Base.BottomRF{typeof(==)}}, ::NamedTuple{(),Tuple{}}, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DynamicalODEFunction{true,ODEFunction{true,Main.##253.var"#21#23",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,Main.##253.var"#25#27",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:48
   [14] mapfoldl_impl(::Main.##253.var"#1#2", ::typeof(==), ::NamedTuple{(),Tuple{}}, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DynamicalODEFunction{true,ODEFunction{true,Main.##253.var"#21#23",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,Main.##253.var"#25#27",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:44
   [15] mapfoldl(::Function, ::Function, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DynamicalODEFunction{true,ODEFunction{true,Main.##253.var"#21#23",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,Main.##253.var"#25#27",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}; kw::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ./reduce.jl:160
   [16] mapfoldl at ./reduce.jl:160 [inlined]
   [17] #mapreduce#208 at ./reduce.jl:287 [inlined]
   [18] mapreduce(::Function, ::Function, ::Tuple{ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,DiffEqBase.NullParameters,DynamicalODEFunction{true,ODEFunction{true,Main.##253.var"#21#23",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,Main.##253.var"#25#27",UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}}) at ./reduce.jl:287
   [19] test_solve(::ODEProblem{ArrayPartition{Float64,Tuple{Array{Float64,1},Array{Float64,1}}},Tuple{Float64,Float64},true,Nothing,DynamicalODEFunction{true,ODEFunction{true,DiffEqPhysics.var"#12#16"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},ODEFunction{true,DiffEqPhysics.var"#14#18"{typeof(Main.##253.H),ForwardDiff.GradientConfig{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5,Array{ForwardDiff.Dual{ForwardDiff.Tag{DiffEqPhysics.PhysicsTag,Float64},Float64,5},1}}},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem}, ::Vararg{Any,N} where N) at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:5
   [20] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/hamiltonian_test.jl:32
   [21] include(::Function, ::Module, ::String) at ./Base.jl:380
   [22] include at ./Base.jl:368 [inlined]
   [23] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [24] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5
   [25] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1115
   [26] top-level scope at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5
  
Test Summary:    | Error  Total
Hamiltonian Test |     3      3
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DiffEqPhysics/GBAWh/test/runtests.jl:5

PkgEval failed: Package DiffEqPhysics errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1578
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:22
 [12] eval at ./boot.jl:331 [inlined]
 [13] eval(::Expr) at ./client.jl:467
 [14] top-level scope at none:1
 [15] eval(::Module, ::Any) at ./boot.jl:331
 [16] exec_options(::Base.JLOptions) at ./client.jl:272
 [17] _start() at ./client.jl:506


################################################################################
# PkgEval teardown: 2021-01-11T19:27:15.161
CPU usage: 517.61s (501.88s user, 16.39s kernel)

Network usage:
- eth0: 12.837 MiB received, 353.417 KiB sent

Raw statistics: {"blkio_stats":{"io_queue_recursive":[],"io_serviced_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":28,"op":"Write","minor":0},{"major":259,"value":19,"op":"Sync","minor":0},{"major":259,"value":9,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":28,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":28,"op":"Write","minor":2},{"major":253,"value":19,"op":"Sync","minor":2},{"major":253,"value":9,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":28,"op":"Total","minor":2}],"io_time_recursive":[],"sectors_recursive":[],"io_service_bytes_recursive":[{"major":259,"value":0,"op":"Read","minor":0},{"major":259,"value":167936,"op":"Write","minor":0},{"major":259,"value":106496,"op":"Sync","minor":0},{"major":259,"value":61440,"op":"Async","minor":0},{"major":259,"value":0,"op":"Discard","minor":0},{"major":259,"value":167936,"op":"Total","minor":0},{"major":253,"value":0,"op":"Read","minor":2},{"major":253,"value":167936,"op":"Write","minor":2},{"major":253,"value":106496,"op":"Sync","minor":2},{"major":253,"value":61440,"op":"Async","minor":2},{"major":253,"value":0,"op":"Discard","minor":2},{"major":253,"value":167936,"op":"Total","minor":2}],"io_wait_time_recursive":[],"io_merged_recursive":[],"io_service_time_recursive":[]},"memory_stats":{"usage":451923968,"max_usage":1921761280,"stats":{"hierarchical_memory_limit":9223372036854771712,"pgmajfault":0,"total_rss":278499328,"inactive_file":135168,"inactive_anon":92184576,"total_pgfault":7231587,"total_cache":140140544,"total_rss_huge":0,"total_active_anon":325484544,"total_pgmajfault":0,"pgpgin":4309470,"rss_huge":0,"mapped_file":0,"total_inactive_file":135168,"dirty":135168,"total_unevictable":0,"total_dirty":135168,"writeback":0,"pgpgout":4207225,"hierarchical_memsw_limit":0,"cache":140140544,"active_file":946176,"pgfault":7231587,"total_mapped_file":0,"total_pgpgout":4207225,"total_writeback":0,"rss":278499328,"unevictable":0,"total_inactive_anon":92184576,"total_pgpgin":4309470,"active_anon":325484544,"total_active_file":946176},"limit":540965302272},"name":"/DiffEqPhysics-gWceT5en","networks":{"eth0":{"rx_bytes":13460362,"rx_packets":2880,"tx_packets":2971,"tx_bytes":361899,"tx_dropped":0,"rx_dropped":18,"tx_errors":0,"rx_errors":0}},"id":"c29ad129fcfcf1cec4b22c852bf3a1221f342e1a4ad93c5274a1d7de1e4d7479","preread":"0001-01-01T00:00:00Z","storage_stats":{},"precpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"cpu_usage":{"usage_in_usermode":0,"usage_in_kernelmode":0,"total_usage":0}},"pids_stats":{"current":40},"num_procs":0,"cpu_stats":{"throttling_data":{"throttled_periods":0,"throttled_time":0,"periods":0},"system_cpu_usage":5028043894522419,"online_cpus":128,"cpu_usage":{"usage_in_usermode":501880000000,"usage_in_kernelmode":16390000000,"total_usage":517613026009,"percpu_usage":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,517613026009,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},"read":"2021-01-11T19:27:15.164110883Z"}